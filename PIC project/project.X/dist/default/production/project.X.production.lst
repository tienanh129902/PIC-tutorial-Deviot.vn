

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Wed Apr 07 22:19:06 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bitbssBANK0,global,bit,class=BANK0,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2
    32                           	psect	text20,local,class=CODE,merge=1,delta=2
    33                           	psect	text21,local,class=CODE,merge=1,delta=2
    34                           	psect	text22,local,class=CODE,merge=1,delta=2
    35                           	psect	text23,local,class=CODE,merge=1,delta=2
    36                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    37                           	dabs	1,0x7E,2
    38  0000                     
    39                           ; Version 2.20
    40                           ; Generated 12/02/2020 GMT
    41                           ; 
    42                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    43                           ; All rights reserved.
    44                           ; 
    45                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    46                           ; 
    47                           ; Redistribution and use in source and binary forms, with or without modification, are
    48                           ; permitted provided that the following conditions are met:
    49                           ; 
    50                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    51                           ;        conditions and the following disclaimer.
    52                           ; 
    53                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    54                           ;        of conditions and the following disclaimer in the documentation and/or other
    55                           ;        materials provided with the distribution.
    56                           ; 
    57                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    58                           ;        software without specific prior written permission.
    59                           ; 
    60                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    61                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    62                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    63                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    64                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    65                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    66                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    67                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    68                           ; 
    69                           ; 
    70                           ; Code-generator required, PIC16F877A Definitions
    71                           ; 
    72                           ; SFR Addresses
    73  0000                     	;# 
    74  0001                     	;# 
    75  0002                     	;# 
    76  0003                     	;# 
    77  0004                     	;# 
    78  0005                     	;# 
    79  0006                     	;# 
    80  0007                     	;# 
    81  0008                     	;# 
    82  0009                     	;# 
    83  000A                     	;# 
    84  000B                     	;# 
    85  000C                     	;# 
    86  000D                     	;# 
    87  000E                     	;# 
    88  000E                     	;# 
    89  000F                     	;# 
    90  0010                     	;# 
    91  0011                     	;# 
    92  0012                     	;# 
    93  0013                     	;# 
    94  0014                     	;# 
    95  0015                     	;# 
    96  0015                     	;# 
    97  0016                     	;# 
    98  0017                     	;# 
    99  0018                     	;# 
   100  0019                     	;# 
   101  001A                     	;# 
   102  001B                     	;# 
   103  001B                     	;# 
   104  001C                     	;# 
   105  001D                     	;# 
   106  001E                     	;# 
   107  001F                     	;# 
   108  0081                     	;# 
   109  0085                     	;# 
   110  0086                     	;# 
   111  0087                     	;# 
   112  0088                     	;# 
   113  0089                     	;# 
   114  008C                     	;# 
   115  008D                     	;# 
   116  008E                     	;# 
   117  0091                     	;# 
   118  0092                     	;# 
   119  0093                     	;# 
   120  0094                     	;# 
   121  0098                     	;# 
   122  0099                     	;# 
   123  009C                     	;# 
   124  009D                     	;# 
   125  009E                     	;# 
   126  009F                     	;# 
   127  010C                     	;# 
   128  010D                     	;# 
   129  010E                     	;# 
   130  010F                     	;# 
   131  018C                     	;# 
   132  018D                     	;# 
   133  0000                     	;# 
   134  0001                     	;# 
   135  0002                     	;# 
   136  0003                     	;# 
   137  0004                     	;# 
   138  0005                     	;# 
   139  0006                     	;# 
   140  0007                     	;# 
   141  0008                     	;# 
   142  0009                     	;# 
   143  000A                     	;# 
   144  000B                     	;# 
   145  000C                     	;# 
   146  000D                     	;# 
   147  000E                     	;# 
   148  000E                     	;# 
   149  000F                     	;# 
   150  0010                     	;# 
   151  0011                     	;# 
   152  0012                     	;# 
   153  0013                     	;# 
   154  0014                     	;# 
   155  0015                     	;# 
   156  0015                     	;# 
   157  0016                     	;# 
   158  0017                     	;# 
   159  0018                     	;# 
   160  0019                     	;# 
   161  001A                     	;# 
   162  001B                     	;# 
   163  001B                     	;# 
   164  001C                     	;# 
   165  001D                     	;# 
   166  001E                     	;# 
   167  001F                     	;# 
   168  0081                     	;# 
   169  0085                     	;# 
   170  0086                     	;# 
   171  0087                     	;# 
   172  0088                     	;# 
   173  0089                     	;# 
   174  008C                     	;# 
   175  008D                     	;# 
   176  008E                     	;# 
   177  0091                     	;# 
   178  0092                     	;# 
   179  0093                     	;# 
   180  0094                     	;# 
   181  0098                     	;# 
   182  0099                     	;# 
   183  009C                     	;# 
   184  009D                     	;# 
   185  009E                     	;# 
   186  009F                     	;# 
   187  010C                     	;# 
   188  010D                     	;# 
   189  010E                     	;# 
   190  010F                     	;# 
   191  018C                     	;# 
   192  018D                     	;# 
   193  0000                     	;# 
   194  0001                     	;# 
   195  0002                     	;# 
   196  0003                     	;# 
   197  0004                     	;# 
   198  0005                     	;# 
   199  0006                     	;# 
   200  0007                     	;# 
   201  0008                     	;# 
   202  0009                     	;# 
   203  000A                     	;# 
   204  000B                     	;# 
   205  000C                     	;# 
   206  000D                     	;# 
   207  000E                     	;# 
   208  000E                     	;# 
   209  000F                     	;# 
   210  0010                     	;# 
   211  0011                     	;# 
   212  0012                     	;# 
   213  0013                     	;# 
   214  0014                     	;# 
   215  0015                     	;# 
   216  0015                     	;# 
   217  0016                     	;# 
   218  0017                     	;# 
   219  0018                     	;# 
   220  0019                     	;# 
   221  001A                     	;# 
   222  001B                     	;# 
   223  001B                     	;# 
   224  001C                     	;# 
   225  001D                     	;# 
   226  001E                     	;# 
   227  001F                     	;# 
   228  0081                     	;# 
   229  0085                     	;# 
   230  0086                     	;# 
   231  0087                     	;# 
   232  0088                     	;# 
   233  0089                     	;# 
   234  008C                     	;# 
   235  008D                     	;# 
   236  008E                     	;# 
   237  0091                     	;# 
   238  0092                     	;# 
   239  0093                     	;# 
   240  0094                     	;# 
   241  0098                     	;# 
   242  0099                     	;# 
   243  009C                     	;# 
   244  009D                     	;# 
   245  009E                     	;# 
   246  009F                     	;# 
   247  010C                     	;# 
   248  010D                     	;# 
   249  010E                     	;# 
   250  010F                     	;# 
   251  018C                     	;# 
   252  018D                     	;# 
   253  0000                     	;# 
   254  0001                     	;# 
   255  0002                     	;# 
   256  0003                     	;# 
   257  0004                     	;# 
   258  0005                     	;# 
   259  0006                     	;# 
   260  0007                     	;# 
   261  0008                     	;# 
   262  0009                     	;# 
   263  000A                     	;# 
   264  000B                     	;# 
   265  000C                     	;# 
   266  000D                     	;# 
   267  000E                     	;# 
   268  000E                     	;# 
   269  000F                     	;# 
   270  0010                     	;# 
   271  0011                     	;# 
   272  0012                     	;# 
   273  0013                     	;# 
   274  0014                     	;# 
   275  0015                     	;# 
   276  0015                     	;# 
   277  0016                     	;# 
   278  0017                     	;# 
   279  0018                     	;# 
   280  0019                     	;# 
   281  001A                     	;# 
   282  001B                     	;# 
   283  001B                     	;# 
   284  001C                     	;# 
   285  001D                     	;# 
   286  001E                     	;# 
   287  001F                     	;# 
   288  0081                     	;# 
   289  0085                     	;# 
   290  0086                     	;# 
   291  0087                     	;# 
   292  0088                     	;# 
   293  0089                     	;# 
   294  008C                     	;# 
   295  008D                     	;# 
   296  008E                     	;# 
   297  0091                     	;# 
   298  0092                     	;# 
   299  0093                     	;# 
   300  0094                     	;# 
   301  0098                     	;# 
   302  0099                     	;# 
   303  009C                     	;# 
   304  009D                     	;# 
   305  009E                     	;# 
   306  009F                     	;# 
   307  010C                     	;# 
   308  010D                     	;# 
   309  010E                     	;# 
   310  010F                     	;# 
   311  018C                     	;# 
   312  018D                     	;# 
   313                           
   314                           	psect	strings
   315  0003                     __pstrings:
   316  0003                     stringtab:
   317  0003                     __stringtab:
   318                           
   319                           ;	String table - string pointers are 1 byte each
   320  0003  1BFF               	btfsc	btemp+1,7
   321  0004  280D               	ljmp	stringcode
   322  0005  1383               	bcf	3,7
   323  0006  187F               	btfsc	btemp+1,0
   324  0007  1783               	bsf	3,7
   325  0008  0800               	movf	0,w
   326  0009  0A84               	incf	4,f
   327  000A  1903               	skipnz
   328  000B  0AFF               	incf	btemp+1,f
   329  000C  0008               	return
   330  000D                     stringcode:
   331  000D                     stringdir:
   332  000D  3000               	movlw	high stringdir
   333  000E  008A               	movwf	10
   334  000F  0804               	movf	4,w
   335  0010  0A84               	incf	4,f
   336  0011  0782               	addwf	2,f
   337  0012                     __stringbase:
   338  0012  3400               	retlw	0
   339  0013                     __end_of__stringtab:
   340  0013                     _dpowers:
   341  0013  3401               	retlw	1
   342  0014  3400               	retlw	0
   343  0015  340A               	retlw	10
   344  0016  3400               	retlw	0
   345  0017  3464               	retlw	100
   346  0018  3400               	retlw	0
   347  0019  34E8               	retlw	232
   348  001A  3403               	retlw	3
   349  001B  3410               	retlw	16
   350  001C  3427               	retlw	39
   351  001D                     __end_of_dpowers:
   352  001A                     _RCREG	set	26
   353  0019                     _TXREG	set	25
   354  0006                     _PORTB	set	6
   355  0006                     _PORTBbits	set	6
   356  0008                     _PORTDbits	set	8
   357  00C1                     _OERR	set	193
   358  0064                     _TXIF	set	100
   359  00C6                     _RX9	set	198
   360  00C4                     _CREN	set	196
   361  00C7                     _SPEN	set	199
   362  0065                     _RCIF	set	101
   363  0099                     _SPBRG	set	153
   364  0086                     _TRISB	set	134
   365  0088                     _TRISDbits	set	136
   366  04C6                     _TX9	set	1222
   367  04C5                     _TXEN	set	1221
   368  04C4                     _SYNC	set	1220
   369  04C2                     _BRGH	set	1218
   370  043F                     _TRISC7	set	1087
   371  043E                     _TRISC6	set	1086
   372  001D                     STR_12:
   373  001D  3420               	retlw	32	;' '
   374  001E  3420               	retlw	32	;' '
   375  001F  3420               	retlw	32	;' '
   376  0020  3420               	retlw	32	;' '
   377  0021  3420               	retlw	32	;' '
   378  0022  3420               	retlw	32	;' '
   379  0023  3420               	retlw	32	;' '
   380  0024  3420               	retlw	32	;' '
   381  0025  3420               	retlw	32	;' '
   382  0026  3420               	retlw	32	;' '
   383  0027  3420               	retlw	32	;' '
   384  0028  3420               	retlw	32	;' '
   385  0029  3420               	retlw	32	;' '
   386  002A  3420               	retlw	32	;' '
   387  002B  3420               	retlw	32	;' '
   388  002C  3420               	retlw	32	;' '
   389  002D  3400               	retlw	0
   390  002E                     STR_17:
   391  002E  3477               	retlw	119	;'w'
   392  002F  3469               	retlw	105	;'i'
   393  0030  3474               	retlw	116	;'t'
   394  0031  3468               	retlw	104	;'h'
   395  0032  3420               	retlw	32	;' '
   396  0033  3450               	retlw	80	;'P'
   397  0034  3449               	retlw	73	;'I'
   398  0035  3443               	retlw	67	;'C'
   399  0036  3431               	retlw	49	;'1'
   400  0037  3436               	retlw	54	;'6'
   401  0038  3446               	retlw	70	;'F'
   402  0039  3438               	retlw	56	;'8'
   403  003A  3437               	retlw	55	;'7'
   404  003B  3437               	retlw	55	;'7'
   405  003C  3441               	retlw	65	;'A'
   406  003D  3400               	retlw	0
   407  003E                     STR_9:
   408  003E  3443               	retlw	67	;'C'
   409  003F  3468               	retlw	104	;'h'
   410  0040  3465               	retlw	101	;'e'
   411  0041  3463               	retlw	99	;'c'
   412  0042  346B               	retlw	107	;'k'
   413  0043  3420               	retlw	32	;' '
   414  0044  3473               	retlw	115	;'s'
   415  0045  3475               	retlw	117	;'u'
   416  0046  346D               	retlw	109	;'m'
   417  0047  3420               	retlw	32	;' '
   418  0048  3465               	retlw	101	;'e'
   419  0049  3472               	retlw	114	;'r'
   420  004A  3472               	retlw	114	;'r'
   421  004B  346F               	retlw	111	;'o'
   422  004C  3472               	retlw	114	;'r'
   423  004D  3400               	retlw	0
   424  004E                     STR_7:
   425  004E  3448               	retlw	72	;'H'
   426  004F  3475               	retlw	117	;'u'
   427  0050  346D               	retlw	109	;'m'
   428  0051  3469               	retlw	105	;'i'
   429  0052  3464               	retlw	100	;'d'
   430  0053  343A               	retlw	58	;':'
   431  0054  3420               	retlw	32	;' '
   432  0055  3425               	retlw	37	;'%'
   433  0056  3464               	retlw	100	;'d'
   434  0057  342E               	retlw	46	;'.'
   435  0058  3425               	retlw	37	;'%'
   436  0059  3464               	retlw	100	;'d'
   437  005A  3420               	retlw	32	;' '
   438  005B  3425               	retlw	37	;'%'
   439  005C  3400               	retlw	0
   440  005D                     STR_15:
   441  005D  3450               	retlw	80	;'P'
   442  005E  3472               	retlw	114	;'r'
   443  005F  346F               	retlw	111	;'o'
   444  0060  346A               	retlw	106	;'j'
   445  0061  3465               	retlw	101	;'e'
   446  0062  3463               	retlw	99	;'c'
   447  0063  3474               	retlw	116	;'t'
   448  0064  3420               	retlw	32	;' '
   449  0065  3463               	retlw	99	;'c'
   450  0066  346C               	retlw	108	;'l'
   451  0067  3461               	retlw	97	;'a'
   452  0068  3473               	retlw	115	;'s'
   453  0069  3473               	retlw	115	;'s'
   454  006A  3400               	retlw	0
   455  006B                     STR_5:
   456  006B  3454               	retlw	84	;'T'
   457  006C  3465               	retlw	101	;'e'
   458  006D  346D               	retlw	109	;'m'
   459  006E  3470               	retlw	112	;'p'
   460  006F  343A               	retlw	58	;':'
   461  0070  3420               	retlw	32	;' '
   462  0071  3425               	retlw	37	;'%'
   463  0072  3464               	retlw	100	;'d'
   464  0073  342E               	retlw	46	;'.'
   465  0074  3425               	retlw	37	;'%'
   466  0075  3464               	retlw	100	;'d'
   467  0076  3420               	retlw	32	;' '
   468  0077  3400               	retlw	0
   469  0078                     STR_11:
   470  0078  344E               	retlw	78	;'N'
   471  0079  346F               	retlw	111	;'o'
   472  007A  3420               	retlw	32	;' '
   473  007B  3452               	retlw	82	;'R'
   474  007C  3465               	retlw	101	;'e'
   475  007D  3473               	retlw	115	;'s'
   476  007E  3470               	retlw	112	;'p'
   477  007F  346F               	retlw	111	;'o'
   478  0080  346E               	retlw	110	;'n'
   479  0081  3473               	retlw	115	;'s'
   480  0082  3465               	retlw	101	;'e'
   481  0083  342E               	retlw	46	;'.'
   482  0084  3400               	retlw	0
   483  0085                     STR_16:
   484  0085  3444               	retlw	68	;'D'
   485  0086  3448               	retlw	72	;'H'
   486  0087  3454               	retlw	84	;'T'
   487  0088  3431               	retlw	49	;'1'
   488  0089  3431               	retlw	49	;'1'
   489  008A  3420               	retlw	32	;' '
   490  008B  3473               	retlw	115	;'s'
   491  008C  3465               	retlw	101	;'e'
   492  008D  346E               	retlw	110	;'n'
   493  008E  3473               	retlw	115	;'s'
   494  008F  346F               	retlw	111	;'o'
   495  0090  3472               	retlw	114	;'r'
   496  0091  3400               	retlw	0
   497  0092                     STR_3:
   498  0092  3448               	retlw	72	;'H'
   499  0093  3475               	retlw	117	;'u'
   500  0094  346D               	retlw	109	;'m'
   501  0095  3469               	retlw	105	;'i'
   502  0096  3464               	retlw	100	;'d'
   503  0097  3469               	retlw	105	;'i'
   504  0098  3474               	retlw	116	;'t'
   505  0099  3479               	retlw	121	;'y'
   506  009A  343A               	retlw	58	;':'
   507  009B  3420               	retlw	32	;' '
   508  009C  3400               	retlw	0
   509  009D                     STR_14:
   510  009D  3444               	retlw	68	;'D'
   511  009E  3465               	retlw	101	;'e'
   512  009F  3476               	retlw	118	;'v'
   513  00A0  3469               	retlw	105	;'i'
   514  00A1  346F               	retlw	111	;'o'
   515  00A2  3474               	retlw	116	;'t'
   516  00A3  342E               	retlw	46	;'.'
   517  00A4  3476               	retlw	118	;'v'
   518  00A5  346E               	retlw	110	;'n'
   519  00A6  3400               	retlw	0
   520  00A7                     STR_10:
   521  00A7  3445               	retlw	69	;'E'
   522  00A8  3472               	retlw	114	;'r'
   523  00A9  3472               	retlw	114	;'r'
   524  00AA  346F               	retlw	111	;'o'
   525  00AB  3472               	retlw	114	;'r'
   526  00AC  3421               	retlw	33	;'!'
   527  00AD  3421               	retlw	33	;'!'
   528  00AE  3421               	retlw	33	;'!'
   529  00AF  3400               	retlw	0
   530  00B0                     STR_1:
   531  00B0  3454               	retlw	84	;'T'
   532  00B1  3465               	retlw	101	;'e'
   533  00B2  346D               	retlw	109	;'m'
   534  00B3  3470               	retlw	112	;'p'
   535  00B4  343A               	retlw	58	;':'
   536  00B5  3420               	retlw	32	;' '
   537  00B6  3400               	retlw	0
   538  00B7                     STR_4:
   539  00B7  3425               	retlw	37	;'%'
   540  00B8  3420               	retlw	32	;' '
   541  00B9  3420               	retlw	32	;' '
   542  00BA  3400               	retlw	0
   543  00BB                     STR_6:
   544  00BB  340A               	retlw	10
   545  00BC  3400               	retlw	0
   546  00BD                     STR_2:
   547  00BD  3443               	retlw	67	;'C'
   548  00BE  3400               	retlw	0
   549  00BB                     
   550                           	psect	cinit
   551  07E8                     start_initialization:	
   552                           ; #config settings
   553                           
   554  07E8                     __initialization:
   555                           
   556                           ; Clear objects allocated to BITBANK0
   557  07E8  1283               	bcf	3,5	;RP0=0, select bank0
   558  07E9  1303               	bcf	3,6	;RP1=0, select bank0
   559  07EA  01EC               	clrf	(__pbitbssBANK0/(0+8))& (0+127)
   560                           
   561                           ; Clear objects allocated to BANK0
   562  07EB  1383               	bcf	3,7	;select IRP bank0
   563  07EC  3020               	movlw	low __pbssBANK0
   564  07ED  0084               	movwf	4
   565  07EE  3053               	movlw	low (__pbssBANK0+51)
   566  07EF  120A  158A  2790  120A  118A  	fcall	clear_ram0
   567                           
   568                           ; Clear objects allocated to BANK1
   569  07F4  30A0               	movlw	low __pbssBANK1
   570  07F5  0084               	movwf	4
   571  07F6  30B4               	movlw	low (__pbssBANK1+20)
   572  07F7  120A  158A  2790  120A  118A  	fcall	clear_ram0
   573  07FC                     end_of_initialization:	
   574                           ;End of C runtime variable initialization code
   575                           
   576  07FC                     __end_of__initialization:
   577  07FC  0183               	clrf	3
   578  07FD  120A  118A  2E0A   	ljmp	_main	;jump to C main() function
   579                           
   580                           	psect	bitbssBANK0
   581  0360                     __pbitbssBANK0:
   582  0360                     _status:
   583  0360                     	ds	1
   584                           
   585                           	psect	bssBANK0
   586  0020                     __pbssBANK0:
   587  0020                     _num:
   588  0020                     	ds	20
   589  0034                     _j:
   590  0034                     	ds	2
   591  0036                     _c:
   592  0036                     	ds	1
   593  0037                     _checksum:
   594  0037                     	ds	1
   595  0038                     _RH:
   596  0038                     	ds	1
   597  0039                     _humidity:
   598  0039                     	ds	1
   599  003A                     _RH_byte_2:
   600  003A                     	ds	1
   601  003B                     _RH_byte_1:
   602  003B                     	ds	1
   603  003C                     _Temp_byte_2:
   604  003C                     	ds	1
   605  003D                     _Temp_byte_1:
   606  003D                     	ds	1
   607  003E                     _Check_bit:
   608  003E                     	ds	1
   609  003F                     _value:
   610  003F                     	ds	20
   611                           
   612                           	psect	bssBANK1
   613  00A0                     __pbssBANK1:
   614  00A0                     _buffer:
   615  00A0                     	ds	20
   616                           
   617                           	psect	clrtext
   618  0F90                     clear_ram0:	
   619                           ;	Called with FSR containing the base address, and
   620                           ;	W with the last address+1
   621                           
   622  0F90  0064               	clrwdt	;clear the watchdog before getting into this loop
   623  0F91                     clrloop0:
   624  0F91  0180               	clrf	0	;clear RAM location pointed to by FSR
   625  0F92  0A84               	incf	4,f	;increment pointer
   626  0F93  0604               	xorwf	4,w	;XOR with final address
   627  0F94  1903               	btfsc	3,2	;have we reached the end yet?
   628  0F95  3400               	retlw	0	;all done for this memory range, return
   629  0F96  0604               	xorwf	4,w	;XOR again to restore value
   630  0F97  2F91               	goto	clrloop0	;do the next byte
   631                           
   632                           	psect	cstackCOMMON
   633  0070                     __pcstackCOMMON:
   634  0070                     ?_system_init:
   635  0070                     ?_DHT11_init:	
   636                           ; 1 bytes @ 0x0
   637                           
   638  0070                     ??_DHT11_init:	
   639                           ; 1 bytes @ 0x0
   640                           
   641  0070                     ?_DHT11_checkResponse:	
   642                           ; 1 bytes @ 0x0
   643                           
   644  0070                     ??_DHT11_checkResponse:	
   645                           ; 1 bytes @ 0x0
   646                           
   647  0070                     ?_DHT11_read:	
   648                           ; 1 bytes @ 0x0
   649                           
   650  0070                     ??_DHT11_read:	
   651                           ; 1 bytes @ 0x0
   652                           
   653  0070                     ?_lcd_com:	
   654                           ; 1 bytes @ 0x0
   655                           
   656  0070                     ?_lcd_puts:	
   657                           ; 1 bytes @ 0x0
   658                           
   659  0070                     ?_lcd_data:	
   660                           ; 1 bytes @ 0x0
   661                           
   662  0070                     ?_UART_getString:	
   663                           ; 1 bytes @ 0x0
   664                           
   665  0070                     ?_clear:	
   666                           ; 1 bytes @ 0x0
   667                           
   668  0070                     ?_lcd_init:	
   669                           ; 1 bytes @ 0x0
   670                           
   671  0070                     ?_introduction:	
   672                           ; 1 bytes @ 0x0
   673                           
   674  0070                     ?_main:	
   675                           ; 1 bytes @ 0x0
   676                           
   677  0070                     ?_delay:	
   678                           ; 1 bytes @ 0x0
   679                           
   680  0070                     ?_lcd_init_write:	
   681                           ; 1 bytes @ 0x0
   682                           
   683  0070                     ?_UART_sendChar:	
   684                           ; 1 bytes @ 0x0
   685                           
   686  0070                     ??_UART_sendChar:	
   687                           ; 1 bytes @ 0x0
   688                           
   689  0070                     ?_UART_getChar:	
   690                           ; 1 bytes @ 0x0
   691                           
   692  0070                     ??_UART_getChar:	
   693                           ; 1 bytes @ 0x0
   694                           
   695  0070                     ?___awdiv:	
   696                           ; 1 bytes @ 0x0
   697                           
   698  0070                     ?___lwdiv:	
   699                           ; 2 bytes @ 0x0
   700                           
   701  0070                     ?___aldiv:	
   702                           ; 2 bytes @ 0x0
   703                           
   704  0070                     UART_sendChar@bt:	
   705                           ; 4 bytes @ 0x0
   706                           
   707  0070                     delay@j:	
   708                           ; 1 bytes @ 0x0
   709                           
   710  0070                     UART_getString@length:	
   711                           ; 2 bytes @ 0x0
   712                           
   713  0070                     ___awdiv@divisor:	
   714                           ; 2 bytes @ 0x0
   715                           
   716  0070                     ___lwdiv@divisor:	
   717                           ; 2 bytes @ 0x0
   718                           
   719  0070                     ___aldiv@divisor:	
   720                           ; 2 bytes @ 0x0
   721                           
   722                           
   723                           ; 4 bytes @ 0x0
   724  0070                     	ds	1
   725  0071                     ?_UART_sendString:
   726  0071                     UART_sendString@str:	
   727                           ; 1 bytes @ 0x1
   728                           
   729                           
   730                           ; 2 bytes @ 0x1
   731  0071                     	ds	1
   732  0072                     ??_UART_getString:
   733  0072                     ??_delay:	
   734                           ; 1 bytes @ 0x2
   735                           
   736  0072                     DHT11_read@data:	
   737                           ; 1 bytes @ 0x2
   738                           
   739  0072                     delay@i:	
   740                           ; 1 bytes @ 0x2
   741                           
   742  0072                     ___awdiv@dividend:	
   743                           ; 2 bytes @ 0x2
   744                           
   745  0072                     ___lwdiv@dividend:	
   746                           ; 2 bytes @ 0x2
   747                           
   748                           
   749                           ; 2 bytes @ 0x2
   750  0072                     	ds	1
   751  0073                     ??_UART_sendString:
   752  0073                     DHT11_read@for_count:	
   753                           ; 1 bytes @ 0x3
   754                           
   755                           
   756                           ; 1 bytes @ 0x3
   757  0073                     	ds	1
   758  0074                     ??_lcd_com:
   759  0074                     ??_lcd_init_write:	
   760                           ; 1 bytes @ 0x4
   761                           
   762  0074                     ??___awdiv:	
   763                           ; 1 bytes @ 0x4
   764                           
   765  0074                     ??___lwdiv:	
   766                           ; 1 bytes @ 0x4
   767                           
   768  0074                     lcd_init_write@a:	
   769                           ; 1 bytes @ 0x4
   770                           
   771  0074                     UART_getString@buf:	
   772                           ; 1 bytes @ 0x4
   773                           
   774  0074                     ___aldiv@dividend:	
   775                           ; 1 bytes @ 0x4
   776                           
   777                           
   778                           ; 4 bytes @ 0x4
   779  0074                     	ds	1
   780  0075                     ___awdiv@counter:
   781  0075                     UART_getString@i:	
   782                           ; 1 bytes @ 0x5
   783                           
   784  0075                     ___lwdiv@quotient:	
   785                           ; 2 bytes @ 0x5
   786                           
   787                           
   788                           ; 2 bytes @ 0x5
   789  0075                     	ds	1
   790  0076                     lcd_com@a:
   791  0076                     ___awdiv@sign:	
   792                           ; 1 bytes @ 0x6
   793                           
   794                           
   795                           ; 1 bytes @ 0x6
   796  0076                     	ds	1
   797  0077                     lcd_com@temp:
   798  0077                     ___lwdiv@counter:	
   799                           ; 1 bytes @ 0x7
   800                           
   801  0077                     ___awdiv@quotient:	
   802                           ; 1 bytes @ 0x7
   803                           
   804                           
   805                           ; 2 bytes @ 0x7
   806  0077                     	ds	1
   807  0078                     ??_lcd_data:
   808  0078                     ??_lcd_init:	
   809                           ; 1 bytes @ 0x8
   810                           
   811  0078                     ??___aldiv:	
   812                           ; 1 bytes @ 0x8
   813                           
   814  0078                     ?___lwmod:	
   815                           ; 1 bytes @ 0x8
   816                           
   817  0078                     lcd_data@a:	
   818                           ; 2 bytes @ 0x8
   819                           
   820  0078                     ___lwmod@divisor:	
   821                           ; 1 bytes @ 0x8
   822                           
   823                           
   824                           ; 2 bytes @ 0x8
   825  0078                     	ds	1
   826  0079                     ??_UART_init:
   827  0079                     ??_lcd_puts:	
   828                           ; 1 bytes @ 0x9
   829                           
   830  0079                     ?___awmod:	
   831                           ; 1 bytes @ 0x9
   832                           
   833  0079                     lcd_puts@i:	
   834                           ; 2 bytes @ 0x9
   835                           
   836  0079                     ___awmod@divisor:	
   837                           ; 2 bytes @ 0x9
   838                           
   839                           
   840                           ; 2 bytes @ 0x9
   841  0079                     	ds	1
   842  007A                     ___lwmod@dividend:
   843                           
   844                           ; 2 bytes @ 0xA
   845  007A                     	ds	1
   846  007B                     lcd_puts@str:
   847  007B                     ___awmod@dividend:	
   848                           ; 1 bytes @ 0xB
   849                           
   850                           
   851                           ; 2 bytes @ 0xB
   852  007B                     	ds	1
   853  007C                     ??_system_init:
   854  007C                     ??_clear:	
   855                           ; 1 bytes @ 0xC
   856                           
   857  007C                     ??___lwmod:	
   858                           ; 1 bytes @ 0xC
   859                           
   860                           
   861                           ; 1 bytes @ 0xC
   862  007C                     	ds	1
   863  007D                     ??___awmod:
   864  007D                     ___lwmod@counter:	
   865                           ; 1 bytes @ 0xD
   866                           
   867                           
   868                           ; 1 bytes @ 0xD
   869  007D                     	ds	1
   870                           
   871                           	psect	cstackBANK0
   872  0053                     __pcstackBANK0:
   873  0053                     ??_introduction:
   874  0053                     ?_sprintf:	
   875                           ; 1 bytes @ 0x0
   876                           
   877  0053                     sprintf@f:	
   878                           ; 2 bytes @ 0x0
   879                           
   880  0053                     ___aldiv@counter:	
   881                           ; 1 bytes @ 0x0
   882                           
   883  0053                     ___awmod@counter:	
   884                           ; 1 bytes @ 0x0
   885                           
   886                           
   887                           ; 1 bytes @ 0x0
   888  0053                     	ds	1
   889  0054                     ___aldiv@sign:
   890  0054                     ___awmod@sign:	
   891                           ; 1 bytes @ 0x1
   892                           
   893                           
   894                           ; 1 bytes @ 0x1
   895  0054                     	ds	1
   896  0055                     ___aldiv@quotient:
   897                           
   898                           ; 4 bytes @ 0x2
   899  0055                     	ds	3
   900  0058                     ??_sprintf:
   901                           
   902                           ; 1 bytes @ 0x5
   903  0058                     	ds	1
   904  0059                     ?_UART_init:
   905  0059                     UART_init@baudRate:	
   906                           ; 1 bytes @ 0x6
   907                           
   908                           
   909                           ; 4 bytes @ 0x6
   910  0059                     	ds	2
   911  005B                     sprintf@ap:
   912                           
   913                           ; 1 bytes @ 0x8
   914  005B                     	ds	1
   915  005C                     sprintf@flag:
   916                           
   917                           ; 1 bytes @ 0x9
   918  005C                     	ds	1
   919  005D                     sprintf@prec:
   920                           
   921                           ; 1 bytes @ 0xA
   922  005D                     	ds	1
   923  005E                     sprintf@val:
   924                           
   925                           ; 2 bytes @ 0xB
   926  005E                     	ds	2
   927  0060                     sprintf@sp:
   928                           
   929                           ; 1 bytes @ 0xD
   930  0060                     	ds	1
   931  0061                     sprintf@c:
   932                           
   933                           ; 1 bytes @ 0xE
   934  0061                     	ds	1
   935  0062                     ??_main:
   936                           
   937                           ; 1 bytes @ 0xF
   938  0062                     	ds	10
   939                           
   940                           	psect	maintext
   941  060A                     __pmaintext:	
   942 ;;
   943 ;;Main: autosize = 0, tempsize = 10, incstack = 0, save=0
   944 ;;
   945 ;; *************** function _main *****************
   946 ;; Defined at:
   947 ;;		line 53 in file "main.c"
   948 ;; Parameters:    Size  Location     Type
   949 ;;		None
   950 ;; Auto vars:     Size  Location     Type
   951 ;;		None
   952 ;; Return value:  Size  Location     Type
   953 ;;                  1    wreg      void 
   954 ;; Registers used:
   955 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   956 ;; Tracked objects:
   957 ;;		On entry : B00/0
   958 ;;		On exit  : 0/0
   959 ;;		Unchanged: 0/0
   960 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   961 ;;      Params:         0       0       0       0       0
   962 ;;      Locals:         0       0       0       0       0
   963 ;;      Temps:          0      10       0       0       0
   964 ;;      Totals:         0      10       0       0       0
   965 ;;Total ram usage:       10 bytes
   966 ;; Hardware stack levels required when called:    7
   967 ;; This function calls:
   968 ;;		_DHT11_checkResponse
   969 ;;		_DHT11_init
   970 ;;		_DHT11_read
   971 ;;		_UART_getString
   972 ;;		_UART_init
   973 ;;		_UART_sendString
   974 ;;		___awdiv
   975 ;;		___awmod
   976 ;;		_clear
   977 ;;		_lcd_com
   978 ;;		_lcd_data
   979 ;;		_lcd_puts
   980 ;;		_sprintf
   981 ;;		_system_init
   982 ;; This function is called by:
   983 ;;		Startup code after reset
   984 ;; This function uses a non-reentrant model
   985 ;;
   986                           
   987                           
   988                           ;psect for function _main
   989  060A                     _main:
   990  060A                     l1846:	
   991                           ;incstack = 0
   992                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   993                           
   994                           
   995                           ;main.c: 54:     system_init();
   996  060A  120A  118A  20C4  120A  118A  	fcall	_system_init
   997  060F                     l1848:
   998                           
   999                           ;main.c: 55:     UART_init(9600);
  1000  060F  3000               	movlw	0
  1001  0610  1283               	bcf	3,5	;RP0=0, select bank0
  1002  0611  1303               	bcf	3,6	;RP1=0, select bank0
  1003  0612  00DC               	movwf	UART_init@baudRate+3
  1004  0613  3000               	movlw	0
  1005  0614  00DB               	movwf	UART_init@baudRate+2
  1006  0615  3025               	movlw	37
  1007  0616  00DA               	movwf	UART_init@baudRate+1
  1008  0617  3080               	movlw	128
  1009  0618  00D9               	movwf	UART_init@baudRate
  1010  0619  120A  118A  2179  120A  118A  	fcall	_UART_init
  1011  061E                     l1850:
  1012                           
  1013                           ;main.c: 57:         _delay((unsigned long)((800)*(20000000/4000.0)));
  1014  061E  3015               	movlw	21
  1015  061F  1283               	bcf	3,5	;RP0=0, select bank0
  1016  0620  1303               	bcf	3,6	;RP1=0, select bank0
  1017  0621  00E4               	movwf	??_main+2
  1018  0622  304B               	movlw	75
  1019  0623  00E3               	movwf	??_main+1
  1020  0624  30BD               	movlw	189
  1021  0625  00E2               	movwf	??_main
  1022  0626                     u1517:
  1023  0626  0BE2               	decfsz	??_main,f
  1024  0627  2E26               	goto	u1517
  1025  0628  0BE3               	decfsz	??_main+1,f
  1026  0629  2E26               	goto	u1517
  1027  062A  0BE4               	decfsz	??_main+2,f
  1028  062B  2E26               	goto	u1517
  1029  062C  2E2D               	nop2
  1030  062D                     l1852:
  1031                           
  1032                           ;main.c: 58:         DHT11_init();
  1033  062D  120A  118A  20D2  120A  118A  	fcall	_DHT11_init
  1034  0632                     l1854:
  1035                           
  1036                           ;main.c: 59:         DHT11_checkResponse();
  1037  0632  120A  118A  20EC  120A  118A  	fcall	_DHT11_checkResponse
  1038  0637                     l1856:
  1039                           
  1040                           ;main.c: 60:         if (Check_bit == 1) {
  1041  0637  1283               	bcf	3,5	;RP0=0, select bank0
  1042  0638  1303               	bcf	3,6	;RP1=0, select bank0
  1043  0639  033E               	decf	_Check_bit,w
  1044  063A  1D03               	btfss	3,2
  1045  063B  2E3D               	goto	u1421
  1046  063C  2E3E               	goto	u1420
  1047  063D                     u1421:
  1048  063D  2FB8               	goto	l1904
  1049  063E                     u1420:
  1050  063E                     l1858:
  1051                           
  1052                           ;main.c: 61:             RH_byte_1 = DHT11_read();
  1053  063E  120A  118A  21E5  120A  118A  	fcall	_DHT11_read
  1054  0643  1283               	bcf	3,5	;RP0=0, select bank0
  1055  0644  1303               	bcf	3,6	;RP1=0, select bank0
  1056  0645  00E2               	movwf	??_main
  1057  0646  0862               	movf	??_main,w
  1058  0647  00BB               	movwf	_RH_byte_1
  1059                           
  1060                           ;main.c: 62:             RH_byte_2 = DHT11_read();
  1061  0648  120A  118A  21E5  120A  118A  	fcall	_DHT11_read
  1062  064D  1283               	bcf	3,5	;RP0=0, select bank0
  1063  064E  1303               	bcf	3,6	;RP1=0, select bank0
  1064  064F  00E2               	movwf	??_main
  1065  0650  0862               	movf	??_main,w
  1066  0651  00BA               	movwf	_RH_byte_2
  1067                           
  1068                           ;main.c: 63:             Temp_byte_1 = DHT11_read();
  1069  0652  120A  118A  21E5  120A  118A  	fcall	_DHT11_read
  1070  0657  1283               	bcf	3,5	;RP0=0, select bank0
  1071  0658  1303               	bcf	3,6	;RP1=0, select bank0
  1072  0659  00E2               	movwf	??_main
  1073  065A  0862               	movf	??_main,w
  1074  065B  00BD               	movwf	_Temp_byte_1
  1075                           
  1076                           ;main.c: 64:             Temp_byte_2 = DHT11_read();
  1077  065C  120A  118A  21E5  120A  118A  	fcall	_DHT11_read
  1078  0661  1283               	bcf	3,5	;RP0=0, select bank0
  1079  0662  1303               	bcf	3,6	;RP1=0, select bank0
  1080  0663  00E2               	movwf	??_main
  1081  0664  0862               	movf	??_main,w
  1082  0665  00BC               	movwf	_Temp_byte_2
  1083                           
  1084                           ;main.c: 65:             checksum = DHT11_read();
  1085  0666  120A  118A  21E5  120A  118A  	fcall	_DHT11_read
  1086  066B  1283               	bcf	3,5	;RP0=0, select bank0
  1087  066C  1303               	bcf	3,6	;RP1=0, select bank0
  1088  066D  00E2               	movwf	??_main
  1089  066E  0862               	movf	??_main,w
  1090  066F  00B7               	movwf	_checksum
  1091  0670                     l1860:
  1092                           
  1093                           ;main.c: 72:             if (checksum == ((RH_byte_1 + RH_byte_2 + Temp_byte_1 + Temp_by
      +                          te_2) & 0XFF)) {
  1094  0670  083B               	movf	_RH_byte_1,w
  1095  0671  073A               	addwf	_RH_byte_2,w
  1096  0672  00E2               	movwf	??_main
  1097  0673  01E3               	clrf	??_main+1
  1098  0674  0DE3               	rlf	??_main+1,f
  1099  0675  083D               	movf	_Temp_byte_1,w
  1100  0676  0762               	addwf	??_main,w
  1101  0677  00E4               	movwf	??_main+2
  1102  0678  3000               	movlw	0
  1103  0679  1803               	skipnc
  1104  067A  3001               	movlw	1
  1105  067B  0763               	addwf	??_main+1,w
  1106  067C  00E5               	movwf	??_main+3
  1107  067D  083C               	movf	_Temp_byte_2,w
  1108  067E  0764               	addwf	??_main+2,w
  1109  067F  00E6               	movwf	??_main+4
  1110  0680  3000               	movlw	0
  1111  0681  1803               	skipnc
  1112  0682  3001               	movlw	1
  1113  0683  0765               	addwf	??_main+3,w
  1114  0684  00E7               	movwf	??_main+5
  1115  0685  30FF               	movlw	255
  1116  0686  0566               	andwf	??_main+4,w
  1117  0687  00E8               	movwf	??_main+6
  1118  0688  3000               	movlw	0
  1119  0689  0567               	andwf	??_main+5,w
  1120  068A  00E9               	movwf	??_main+7
  1121  068B  0837               	movf	_checksum,w
  1122  068C  00EA               	movwf	??_main+8
  1123  068D  01EB               	clrf	??_main+9
  1124  068E  0869               	movf	??_main+7,w
  1125  068F  066B               	xorwf	??_main+9,w
  1126  0690  1D03               	skipz
  1127  0691  2E94               	goto	u1435
  1128  0692  0868               	movf	??_main+6,w
  1129  0693  066A               	xorwf	??_main+8,w
  1130  0694                     u1435:
  1131  0694  1D03               	skipz
  1132  0695  2E97               	goto	u1431
  1133  0696  2E98               	goto	u1430
  1134  0697                     u1431:
  1135  0697  2FA0               	goto	l1898
  1136  0698                     u1430:
  1137  0698                     l1862:
  1138                           
  1139                           ;main.c: 73:                 humidity = Temp_byte_1;
  1140  0698  083D               	movf	_Temp_byte_1,w
  1141  0699  00E2               	movwf	??_main
  1142  069A  0862               	movf	??_main,w
  1143  069B  00B9               	movwf	_humidity
  1144                           
  1145                           ;main.c: 74:                 RH = RH_byte_1;
  1146  069C  083B               	movf	_RH_byte_1,w
  1147  069D  00E2               	movwf	??_main
  1148  069E  0862               	movf	??_main,w
  1149  069F  00B8               	movwf	_RH
  1150  06A0                     l1864:
  1151                           
  1152                           ;main.c: 75:                 lcd_com(0x80);
  1153  06A0  3080               	movlw	128
  1154  06A1  120A  118A  226B  120A  118A  	fcall	_lcd_com
  1155  06A6                     l1866:
  1156                           
  1157                           ;main.c: 76:                 lcd_puts("Temp: ");
  1158  06A6  309E               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1159  06A7  120A  118A  212E  120A  118A  	fcall	_lcd_puts
  1160  06AC                     l1868:
  1161                           
  1162                           ;main.c: 77:                 lcd_data(48 + ((humidity / 10) % 10));
  1163  06AC  300A               	movlw	10
  1164  06AD  00F9               	movwf	___awmod@divisor
  1165  06AE  3000               	movlw	0
  1166  06AF  00FA               	movwf	___awmod@divisor+1
  1167  06B0  300A               	movlw	10
  1168  06B1  00F0               	movwf	___awdiv@divisor
  1169  06B2  3000               	movlw	0
  1170  06B3  00F1               	movwf	___awdiv@divisor+1
  1171  06B4  1283               	bcf	3,5	;RP0=0, select bank0
  1172  06B5  1303               	bcf	3,6	;RP1=0, select bank0
  1173  06B6  0839               	movf	_humidity,w
  1174  06B7  00E2               	movwf	??_main
  1175  06B8  01E3               	clrf	??_main+1
  1176  06B9  0862               	movf	??_main,w
  1177  06BA  00F2               	movwf	___awdiv@dividend
  1178  06BB  0863               	movf	??_main+1,w
  1179  06BC  00F3               	movwf	___awdiv@dividend+1
  1180  06BD  120A  118A  2315  120A  118A  	fcall	___awdiv
  1181  06C2  0871               	movf	?___awdiv+1,w
  1182  06C3  00FC               	movwf	___awmod@dividend+1
  1183  06C4  0870               	movf	?___awdiv,w
  1184  06C5  00FB               	movwf	___awmod@dividend
  1185  06C6  120A  118A  22BA  120A  118A  	fcall	___awmod
  1186  06CB  0879               	movf	?___awmod,w
  1187  06CC  3E30               	addlw	48
  1188  06CD  120A  158A  27A2  120A  118A  	fcall	_lcd_data
  1189  06D2                     l1870:
  1190                           
  1191                           ;main.c: 78:                 lcd_data(48 + (humidity % 10));
  1192  06D2  300A               	movlw	10
  1193  06D3  00F9               	movwf	___awmod@divisor
  1194  06D4  3000               	movlw	0
  1195  06D5  00FA               	movwf	___awmod@divisor+1
  1196  06D6  1283               	bcf	3,5	;RP0=0, select bank0
  1197  06D7  1303               	bcf	3,6	;RP1=0, select bank0
  1198  06D8  0839               	movf	_humidity,w
  1199  06D9  00E2               	movwf	??_main
  1200  06DA  01E3               	clrf	??_main+1
  1201  06DB  0862               	movf	??_main,w
  1202  06DC  00FB               	movwf	___awmod@dividend
  1203  06DD  0863               	movf	??_main+1,w
  1204  06DE  00FC               	movwf	___awmod@dividend+1
  1205  06DF  120A  118A  22BA  120A  118A  	fcall	___awmod
  1206  06E4  0879               	movf	?___awmod,w
  1207  06E5  3E30               	addlw	48
  1208  06E6  120A  158A  27A2  120A  118A  	fcall	_lcd_data
  1209  06EB                     l1872:
  1210                           
  1211                           ;main.c: 79:                 lcd_data(0xDF);
  1212  06EB  30DF               	movlw	223
  1213  06EC  120A  158A  27A2  120A  118A  	fcall	_lcd_data
  1214  06F1                     l1874:
  1215                           
  1216                           ;main.c: 80:                 lcd_puts("C");
  1217  06F1  30AB               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1218  06F2  120A  118A  212E  120A  118A  	fcall	_lcd_puts
  1219  06F7                     l1876:
  1220                           
  1221                           ;main.c: 81:                 lcd_com(0xC0);
  1222  06F7  30C0               	movlw	192
  1223  06F8  120A  118A  226B  120A  118A  	fcall	_lcd_com
  1224  06FD                     l1878:
  1225                           
  1226                           ;main.c: 82:                 lcd_puts("Humidity: ");
  1227  06FD  3080               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1228  06FE  120A  118A  212E  120A  118A  	fcall	_lcd_puts
  1229  0703                     l1880:
  1230                           
  1231                           ;main.c: 83:                 lcd_data(48 + ((RH / 10) % 10));
  1232  0703  300A               	movlw	10
  1233  0704  00F9               	movwf	___awmod@divisor
  1234  0705  3000               	movlw	0
  1235  0706  00FA               	movwf	___awmod@divisor+1
  1236  0707  300A               	movlw	10
  1237  0708  00F0               	movwf	___awdiv@divisor
  1238  0709  3000               	movlw	0
  1239  070A  00F1               	movwf	___awdiv@divisor+1
  1240  070B  1283               	bcf	3,5	;RP0=0, select bank0
  1241  070C  1303               	bcf	3,6	;RP1=0, select bank0
  1242  070D  0838               	movf	_RH,w
  1243  070E  00E2               	movwf	??_main
  1244  070F  01E3               	clrf	??_main+1
  1245  0710  0862               	movf	??_main,w
  1246  0711  00F2               	movwf	___awdiv@dividend
  1247  0712  0863               	movf	??_main+1,w
  1248  0713  00F3               	movwf	___awdiv@dividend+1
  1249  0714  120A  118A  2315  120A  118A  	fcall	___awdiv
  1250  0719  0871               	movf	?___awdiv+1,w
  1251  071A  00FC               	movwf	___awmod@dividend+1
  1252  071B  0870               	movf	?___awdiv,w
  1253  071C  00FB               	movwf	___awmod@dividend
  1254  071D  120A  118A  22BA  120A  118A  	fcall	___awmod
  1255  0722  0879               	movf	?___awmod,w
  1256  0723  3E30               	addlw	48
  1257  0724  120A  158A  27A2  120A  118A  	fcall	_lcd_data
  1258  0729                     l1882:
  1259                           
  1260                           ;main.c: 84:                 lcd_data(48 + (RH % 10));
  1261  0729  300A               	movlw	10
  1262  072A  00F9               	movwf	___awmod@divisor
  1263  072B  3000               	movlw	0
  1264  072C  00FA               	movwf	___awmod@divisor+1
  1265  072D  1283               	bcf	3,5	;RP0=0, select bank0
  1266  072E  1303               	bcf	3,6	;RP1=0, select bank0
  1267  072F  0838               	movf	_RH,w
  1268  0730  00E2               	movwf	??_main
  1269  0731  01E3               	clrf	??_main+1
  1270  0732  0862               	movf	??_main,w
  1271  0733  00FB               	movwf	___awmod@dividend
  1272  0734  0863               	movf	??_main+1,w
  1273  0735  00FC               	movwf	___awmod@dividend+1
  1274  0736  120A  118A  22BA  120A  118A  	fcall	___awmod
  1275  073B  0879               	movf	?___awmod,w
  1276  073C  3E30               	addlw	48
  1277  073D  120A  158A  27A2  120A  118A  	fcall	_lcd_data
  1278  0742                     l1884:
  1279                           
  1280                           ;main.c: 85:                 lcd_puts("%  ");
  1281  0742  30A5               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1282  0743  120A  118A  212E  120A  118A  	fcall	_lcd_puts
  1283  0748                     l1886:
  1284                           
  1285                           ;main.c: 86:                 sprintf(value,"Temp: %d.%d ",Temp_byte_1,Temp_byte_2);
  1286  0748  3059               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1287  0749  1283               	bcf	3,5	;RP0=0, select bank0
  1288  074A  1303               	bcf	3,6	;RP1=0, select bank0
  1289  074B  00E2               	movwf	??_main
  1290  074C  0862               	movf	??_main,w
  1291  074D  00D3               	movwf	sprintf@f
  1292  074E  083D               	movf	_Temp_byte_1,w
  1293  074F  00E3               	movwf	??_main+1
  1294  0750  01E4               	clrf	??_main+2
  1295  0751  0863               	movf	??_main+1,w
  1296  0752  00D4               	movwf	?_sprintf+1
  1297  0753  0864               	movf	??_main+2,w
  1298  0754  00D5               	movwf	?_sprintf+2
  1299  0755  083C               	movf	_Temp_byte_2,w
  1300  0756  00E5               	movwf	??_main+3
  1301  0757  01E6               	clrf	??_main+4
  1302  0758  0865               	movf	??_main+3,w
  1303  0759  00D6               	movwf	?_sprintf+3
  1304  075A  0866               	movf	??_main+4,w
  1305  075B  00D7               	movwf	?_sprintf+4
  1306  075C  303F               	movlw	(low (_value| 0))& (0+255)
  1307  075D  120A  118A  2522  120A  118A  	fcall	_sprintf
  1308  0762                     l1888:
  1309                           
  1310                           ;main.c: 87:                 UART_sendString(value);
  1311  0762  303F               	movlw	(low (_value| 0))& (0+255)
  1312  0763  00F1               	movwf	UART_sendString@str
  1313  0764  3000               	movlw	0
  1314  0765  00F2               	movwf	UART_sendString@str+1
  1315  0766  120A  118A  2153  120A  118A  	fcall	_UART_sendString
  1316  076B                     l1890:
  1317                           
  1318                           ;main.c: 88:                 UART_sendString("\n");
  1319  076B  30A9               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1320  076C  00F1               	movwf	UART_sendString@str
  1321  076D  3080               	movlw	128
  1322  076E  00F2               	movwf	UART_sendString@str+1
  1323  076F  120A  118A  2153  120A  118A  	fcall	_UART_sendString
  1324  0774                     l1892:
  1325                           
  1326                           ;main.c: 89:                 sprintf(value,"Humid: %d.%d %",RH_byte_1,RH_byte_2);
  1327  0774  303C               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  1328  0775  1283               	bcf	3,5	;RP0=0, select bank0
  1329  0776  1303               	bcf	3,6	;RP1=0, select bank0
  1330  0777  00E2               	movwf	??_main
  1331  0778  0862               	movf	??_main,w
  1332  0779  00D3               	movwf	sprintf@f
  1333  077A  083B               	movf	_RH_byte_1,w
  1334  077B  00E3               	movwf	??_main+1
  1335  077C  01E4               	clrf	??_main+2
  1336  077D  0863               	movf	??_main+1,w
  1337  077E  00D4               	movwf	?_sprintf+1
  1338  077F  0864               	movf	??_main+2,w
  1339  0780  00D5               	movwf	?_sprintf+2
  1340  0781  083A               	movf	_RH_byte_2,w
  1341  0782  00E5               	movwf	??_main+3
  1342  0783  01E6               	clrf	??_main+4
  1343  0784  0865               	movf	??_main+3,w
  1344  0785  00D6               	movwf	?_sprintf+3
  1345  0786  0866               	movf	??_main+4,w
  1346  0787  00D7               	movwf	?_sprintf+4
  1347  0788  303F               	movlw	(low (_value| 0))& (0+255)
  1348  0789  120A  118A  2522  120A  118A  	fcall	_sprintf
  1349  078E                     l1894:
  1350                           
  1351                           ;main.c: 90:                 UART_sendString(value);
  1352  078E  303F               	movlw	(low (_value| 0))& (0+255)
  1353  078F  00F1               	movwf	UART_sendString@str
  1354  0790  3000               	movlw	0
  1355  0791  00F2               	movwf	UART_sendString@str+1
  1356  0792  120A  118A  2153  120A  118A  	fcall	_UART_sendString
  1357  0797                     l1896:
  1358                           
  1359                           ;main.c: 91:                 UART_sendString("\n");
  1360  0797  30A9               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1361  0798  00F1               	movwf	UART_sendString@str
  1362  0799  3080               	movlw	128
  1363  079A  00F2               	movwf	UART_sendString@str+1
  1364  079B  120A  118A  2153  120A  118A  	fcall	_UART_sendString
  1365  07A0                     l1898:
  1366                           
  1367                           ;main.c: 94:             if(RCIF)
  1368  07A0  1283               	bcf	3,5	;RP0=0, select bank0
  1369  07A1  1303               	bcf	3,6	;RP1=0, select bank0
  1370  07A2  1E8C               	btfss	12,5	;volatile
  1371  07A3  2FA5               	goto	u1441
  1372  07A4  2FA6               	goto	u1440
  1373  07A5                     u1441:
  1374  07A5  2FB1               	goto	l1902
  1375  07A6                     u1440:
  1376  07A6                     l1900:
  1377                           
  1378                           ;main.c: 95:             {;main.c: 96:                 UART_getString(buffer,20);
  1379  07A6  3014               	movlw	20
  1380  07A7  00F0               	movwf	UART_getString@length
  1381  07A8  3000               	movlw	0
  1382  07A9  00F1               	movwf	UART_getString@length+1
  1383  07AA  30A0               	movlw	(low (_buffer| 0))& (0+255)
  1384  07AB  120A  118A  210B  120A  118A  	fcall	_UART_getString
  1385                           
  1386                           ;main.c: 97:             }
  1387  07B0  2FD5               	goto	l1912
  1388  07B1                     l1902:
  1389                           
  1390                           ;main.c: 99:                 lcd_puts("Check sum error");
  1391  07B1  302C               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  1392  07B2  120A  118A  212E  120A  118A  	fcall	_lcd_puts
  1393  07B7  2FD5               	goto	l1912
  1394  07B8                     l1904:
  1395                           
  1396                           ;main.c: 103:             clear();
  1397  07B8  120A  158A  27E7  120A  118A  	fcall	_clear
  1398  07BD                     l1906:
  1399                           
  1400                           ;main.c: 104:             lcd_com(0x80);
  1401  07BD  3080               	movlw	128
  1402  07BE  120A  118A  226B  120A  118A  	fcall	_lcd_com
  1403  07C3                     l1908:
  1404                           
  1405                           ;main.c: 105:             lcd_puts("Error!!!");
  1406  07C3  3095               	movlw	(low ((STR_10-__stringbase)| (0+32768)))& (0+255)
  1407  07C4  120A  118A  212E  120A  118A  	fcall	_lcd_puts
  1408                           
  1409                           ;main.c: 106:             lcd_com(0xC0);
  1410  07C9  30C0               	movlw	192
  1411  07CA  120A  118A  226B  120A  118A  	fcall	_lcd_com
  1412  07CF                     l1910:
  1413                           
  1414                           ;main.c: 107:             lcd_puts("No Response.");
  1415  07CF  3066               	movlw	(low ((STR_11-__stringbase)| (0+32768)))& (0+255)
  1416  07D0  120A  118A  212E  120A  118A  	fcall	_lcd_puts
  1417  07D5                     l1912:
  1418                           
  1419                           ;main.c: 109:         _delay((unsigned long)((1000)*(20000000/4000.0)));
  1420  07D5  301A               	movlw	26
  1421  07D6  1283               	bcf	3,5	;RP0=0, select bank0
  1422  07D7  1303               	bcf	3,6	;RP1=0, select bank0
  1423  07D8  00E4               	movwf	??_main+2
  1424  07D9  305E               	movlw	94
  1425  07DA  00E3               	movwf	??_main+1
  1426  07DB  306D               	movlw	109
  1427  07DC  00E2               	movwf	??_main
  1428  07DD                     u1527:
  1429  07DD  0BE2               	decfsz	??_main,f
  1430  07DE  2FDD               	goto	u1527
  1431  07DF  0BE3               	decfsz	??_main+1,f
  1432  07E0  2FDD               	goto	u1527
  1433  07E1  0BE4               	decfsz	??_main+2,f
  1434  07E2  2FDD               	goto	u1527
  1435  07E3  2FE4               	nop2
  1436  07E4  2E1E               	goto	l1850
  1437  07E5  120A  118A  2800   	ljmp	start
  1438  07E8                     __end_of_main:
  1439                           
  1440                           	psect	text1
  1441  00C4                     __ptext1:	
  1442 ;; *************** function _system_init *****************
  1443 ;; Defined at:
  1444 ;;		line 150 in file "main.c"
  1445 ;; Parameters:    Size  Location     Type
  1446 ;;		None
  1447 ;; Auto vars:     Size  Location     Type
  1448 ;;		None
  1449 ;; Return value:  Size  Location     Type
  1450 ;;                  1    wreg      void 
  1451 ;; Registers used:
  1452 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1453 ;; Tracked objects:
  1454 ;;		On entry : 0/0
  1455 ;;		On exit  : 0/0
  1456 ;;		Unchanged: 0/0
  1457 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1458 ;;      Params:         0       0       0       0       0
  1459 ;;      Locals:         0       0       0       0       0
  1460 ;;      Temps:          0       0       0       0       0
  1461 ;;      Totals:         0       0       0       0       0
  1462 ;;Total ram usage:        0 bytes
  1463 ;; Hardware stack levels used:    1
  1464 ;; Hardware stack levels required when called:    6
  1465 ;; This function calls:
  1466 ;;		_introduction
  1467 ;;		_lcd_init
  1468 ;; This function is called by:
  1469 ;;		_main
  1470 ;; This function uses a non-reentrant model
  1471 ;;
  1472                           
  1473                           
  1474                           ;psect for function _system_init
  1475  00C4                     _system_init:
  1476  00C4                     l1618:	
  1477                           ;incstack = 0
  1478                           ; Regs used in _system_init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1479                           
  1480                           
  1481                           ;main.c: 151:     TRISB = 0;
  1482  00C4  1683               	bsf	3,5	;RP0=1, select bank1
  1483  00C5  1303               	bcf	3,6	;RP1=0, select bank1
  1484  00C6  0186               	clrf	6	;volatile
  1485  00C7                     l1620:
  1486                           
  1487                           ;main.c: 152:     lcd_init();
  1488  00C7  120A  118A  23EE  120A  118A  	fcall	_lcd_init
  1489  00CC                     l1622:
  1490                           
  1491                           ;main.c: 153:     introduction();
  1492  00CC  120A  118A  237C  120A  118A  	fcall	_introduction
  1493  00D1                     l97:
  1494  00D1  0008               	return
  1495  00D2                     __end_of_system_init:
  1496                           
  1497                           	psect	text2
  1498  03EE                     __ptext2:	
  1499 ;; *************** function _lcd_init *****************
  1500 ;; Defined at:
  1501 ;;		line 80 in file "lcd.c"
  1502 ;; Parameters:    Size  Location     Type
  1503 ;;		None
  1504 ;; Auto vars:     Size  Location     Type
  1505 ;;		None
  1506 ;; Return value:  Size  Location     Type
  1507 ;;                  1    wreg      void 
  1508 ;; Registers used:
  1509 ;;		wreg, status,2, status,0, pclath, cstack
  1510 ;; Tracked objects:
  1511 ;;		On entry : 0/0
  1512 ;;		On exit  : 0/0
  1513 ;;		Unchanged: 0/0
  1514 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1515 ;;      Params:         0       0       0       0       0
  1516 ;;      Locals:         0       0       0       0       0
  1517 ;;      Temps:          0       0       0       0       0
  1518 ;;      Totals:         0       0       0       0       0
  1519 ;;Total ram usage:        0 bytes
  1520 ;; Hardware stack levels used:    1
  1521 ;; Hardware stack levels required when called:    2
  1522 ;; This function calls:
  1523 ;;		_delay
  1524 ;;		_lcd_com
  1525 ;;		_lcd_init_write
  1526 ;; This function is called by:
  1527 ;;		_system_init
  1528 ;; This function uses a non-reentrant model
  1529 ;;
  1530                           
  1531                           
  1532                           ;psect for function _lcd_init
  1533  03EE                     _lcd_init:
  1534  03EE                     l1496:	
  1535                           ;incstack = 0
  1536                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  1537                           
  1538                           
  1539                           ;lcd.c: 82:  delay(300);
  1540  03EE  302C               	movlw	44
  1541  03EF  00F0               	movwf	delay@j
  1542  03F0  3001               	movlw	1
  1543  03F1  00F1               	movwf	delay@j+1
  1544  03F2  120A  158A  27D1  120A  118A  	fcall	_delay
  1545                           
  1546                           ;lcd.c: 83:  lcd_init_write(0x30);
  1547  03F7  3030               	movlw	48
  1548  03F8  120A  158A  27BC  120A  118A  	fcall	_lcd_init_write
  1549                           
  1550                           ;lcd.c: 84:  delay(300);
  1551  03FD  302C               	movlw	44
  1552  03FE  00F0               	movwf	delay@j
  1553  03FF  3001               	movlw	1
  1554  0400  00F1               	movwf	delay@j+1
  1555  0401  120A  158A  27D1  120A  118A  	fcall	_delay
  1556                           
  1557                           ;lcd.c: 85:  lcd_init_write(0x30);
  1558  0406  3030               	movlw	48
  1559  0407  120A  158A  27BC  120A  118A  	fcall	_lcd_init_write
  1560                           
  1561                           ;lcd.c: 86:  delay(300);
  1562  040C  302C               	movlw	44
  1563  040D  00F0               	movwf	delay@j
  1564  040E  3001               	movlw	1
  1565  040F  00F1               	movwf	delay@j+1
  1566  0410  120A  158A  27D1  120A  118A  	fcall	_delay
  1567                           
  1568                           ;lcd.c: 87:  lcd_init_write(0x30);
  1569  0415  3030               	movlw	48
  1570  0416  120A  158A  27BC  120A  118A  	fcall	_lcd_init_write
  1571                           
  1572                           ;lcd.c: 88:  delay(300);
  1573  041B  302C               	movlw	44
  1574  041C  00F0               	movwf	delay@j
  1575  041D  3001               	movlw	1
  1576  041E  00F1               	movwf	delay@j+1
  1577  041F  120A  158A  27D1  120A  118A  	fcall	_delay
  1578                           
  1579                           ;lcd.c: 89:  lcd_init_write(0x20);
  1580  0424  3020               	movlw	32
  1581  0425  120A  158A  27BC  120A  118A  	fcall	_lcd_init_write
  1582                           
  1583                           ;lcd.c: 90:  delay(300);
  1584  042A  302C               	movlw	44
  1585  042B  00F0               	movwf	delay@j
  1586  042C  3001               	movlw	1
  1587  042D  00F1               	movwf	delay@j+1
  1588  042E  120A  158A  27D1  120A  118A  	fcall	_delay
  1589                           
  1590                           ;lcd.c: 91:  lcd_com(0xC);
  1591  0433  300C               	movlw	12
  1592  0434  120A  118A  226B  120A  118A  	fcall	_lcd_com
  1593                           
  1594                           ;lcd.c: 92:  lcd_com(0x28);
  1595  0439  3028               	movlw	40
  1596  043A  120A  118A  226B  120A  118A  	fcall	_lcd_com
  1597                           
  1598                           ;lcd.c: 93:  delay(300);
  1599  043F  302C               	movlw	44
  1600  0440  00F0               	movwf	delay@j
  1601  0441  3001               	movlw	1
  1602  0442  00F1               	movwf	delay@j+1
  1603  0443  120A  158A  27D1  120A  118A  	fcall	_delay
  1604                           
  1605                           ;lcd.c: 94:  lcd_com(4);
  1606  0448  3004               	movlw	4
  1607  0449  120A  118A  226B  120A  118A  	fcall	_lcd_com
  1608                           
  1609                           ;lcd.c: 95:  delay(300);
  1610  044E  302C               	movlw	44
  1611  044F  00F0               	movwf	delay@j
  1612  0450  3001               	movlw	1
  1613  0451  00F1               	movwf	delay@j+1
  1614  0452  120A  158A  27D1  120A  118A  	fcall	_delay
  1615                           
  1616                           ;lcd.c: 96:  lcd_com(0x85);
  1617  0457  3085               	movlw	133
  1618  0458  120A  118A  226B  120A  118A  	fcall	_lcd_com
  1619                           
  1620                           ;lcd.c: 97:  delay(300);
  1621  045D  302C               	movlw	44
  1622  045E  00F0               	movwf	delay@j
  1623  045F  3001               	movlw	1
  1624  0460  00F1               	movwf	delay@j+1
  1625  0461  120A  158A  27D1  120A  118A  	fcall	_delay
  1626                           
  1627                           ;lcd.c: 98:  lcd_com(6);
  1628  0466  3006               	movlw	6
  1629  0467  120A  118A  226B  120A  118A  	fcall	_lcd_com
  1630                           
  1631                           ;lcd.c: 99:  delay(300);
  1632  046C  302C               	movlw	44
  1633  046D  00F0               	movwf	delay@j
  1634  046E  3001               	movlw	1
  1635  046F  00F1               	movwf	delay@j+1
  1636  0470  120A  158A  27D1  120A  118A  	fcall	_delay
  1637                           
  1638                           ;lcd.c: 100:  lcd_com(1);
  1639  0475  3001               	movlw	1
  1640  0476  120A  118A  226B  120A  118A  	fcall	_lcd_com
  1641                           
  1642                           ;lcd.c: 101:  delay(300);
  1643  047B  302C               	movlw	44
  1644  047C  00F0               	movwf	delay@j
  1645  047D  3001               	movlw	1
  1646  047E  00F1               	movwf	delay@j+1
  1647  047F  120A  158A  27D1  120A  118A  	fcall	_delay
  1648  0484                     l133:
  1649  0484  0008               	return
  1650  0485                     __end_of_lcd_init:
  1651                           
  1652                           	psect	text3
  1653  0FBC                     __ptext3:	
  1654 ;; *************** function _lcd_init_write *****************
  1655 ;; Defined at:
  1656 ;;		line 36 in file "lcd.c"
  1657 ;; Parameters:    Size  Location     Type
  1658 ;;  a               1    wreg     unsigned char 
  1659 ;; Auto vars:     Size  Location     Type
  1660 ;;  a               1    4[COMMON] unsigned char 
  1661 ;; Return value:  Size  Location     Type
  1662 ;;                  1    wreg      void 
  1663 ;; Registers used:
  1664 ;;		wreg, status,2, status,0, pclath, cstack
  1665 ;; Tracked objects:
  1666 ;;		On entry : 0/0
  1667 ;;		On exit  : 0/0
  1668 ;;		Unchanged: 0/0
  1669 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1670 ;;      Params:         0       0       0       0       0
  1671 ;;      Locals:         1       0       0       0       0
  1672 ;;      Temps:          0       0       0       0       0
  1673 ;;      Totals:         1       0       0       0       0
  1674 ;;Total ram usage:        1 bytes
  1675 ;; Hardware stack levels used:    1
  1676 ;; Hardware stack levels required when called:    1
  1677 ;; This function calls:
  1678 ;;		_delay
  1679 ;; This function is called by:
  1680 ;;		_lcd_init
  1681 ;; This function uses a non-reentrant model
  1682 ;;
  1683                           
  1684                           
  1685                           ;psect for function _lcd_init_write
  1686  0FBC                     _lcd_init_write:
  1687                           
  1688                           ;incstack = 0
  1689                           ; Regs used in _lcd_init_write: [wreg+status,2+status,0+pclath+cstack]
  1690                           ;lcd_init_write@a stored from wreg
  1691  0FBC  00F4               	movwf	lcd_init_write@a
  1692  0FBD                     l1486:
  1693                           
  1694                           ;lcd.c: 36: void lcd_init_write(unsigned char a);lcd.c: 37: {;lcd.c: 38:  PORTBbits.RB0=
      +                          0;
  1695  0FBD  1283               	bcf	3,5	;RP0=0, select bank0
  1696  0FBE  1303               	bcf	3,6	;RP1=0, select bank0
  1697  0FBF  1006               	bcf	6,0	;volatile
  1698                           
  1699                           ;lcd.c: 39:  PORTBbits.RB1=0;
  1700  0FC0  1086               	bcf	6,1	;volatile
  1701  0FC1                     l1488:
  1702                           
  1703                           ;lcd.c: 40:  PORTB=a;
  1704  0FC1  0874               	movf	lcd_init_write@a,w
  1705  0FC2  0086               	movwf	6	;volatile
  1706  0FC3                     l1490:
  1707                           
  1708                           ;lcd.c: 41:  PORTBbits.RB2=1;
  1709  0FC3  1506               	bsf	6,2	;volatile
  1710  0FC4                     l1492:
  1711                           
  1712                           ;lcd.c: 42:  delay(300);
  1713  0FC4  302C               	movlw	44
  1714  0FC5  00F0               	movwf	delay@j
  1715  0FC6  3001               	movlw	1
  1716  0FC7  00F1               	movwf	delay@j+1
  1717  0FC8  120A  158A  27D1  120A  158A  	fcall	_delay
  1718  0FCD                     l1494:
  1719                           
  1720                           ;lcd.c: 43:  PORTBbits.RB2=0;
  1721  0FCD  1283               	bcf	3,5	;RP0=0, select bank0
  1722  0FCE  1303               	bcf	3,6	;RP1=0, select bank0
  1723  0FCF  1106               	bcf	6,2	;volatile
  1724  0FD0                     l122:
  1725  0FD0  0008               	return
  1726  0FD1                     __end_of_lcd_init_write:
  1727                           
  1728                           	psect	text4
  1729  037C                     __ptext4:	
  1730 ;; *************** function _introduction *****************
  1731 ;; Defined at:
  1732 ;;		line 163 in file "main.c"
  1733 ;; Parameters:    Size  Location     Type
  1734 ;;		None
  1735 ;; Auto vars:     Size  Location     Type
  1736 ;;		None
  1737 ;; Return value:  Size  Location     Type
  1738 ;;                  1    wreg      void 
  1739 ;; Registers used:
  1740 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1741 ;; Tracked objects:
  1742 ;;		On entry : 0/0
  1743 ;;		On exit  : 0/0
  1744 ;;		Unchanged: 0/0
  1745 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1746 ;;      Params:         0       0       0       0       0
  1747 ;;      Locals:         0       0       0       0       0
  1748 ;;      Temps:          0       3       0       0       0
  1749 ;;      Totals:         0       3       0       0       0
  1750 ;;Total ram usage:        3 bytes
  1751 ;; Hardware stack levels used:    1
  1752 ;; Hardware stack levels required when called:    5
  1753 ;; This function calls:
  1754 ;;		_clear
  1755 ;;		_lcd_com
  1756 ;;		_lcd_puts
  1757 ;; This function is called by:
  1758 ;;		_system_init
  1759 ;; This function uses a non-reentrant model
  1760 ;;
  1761                           
  1762                           
  1763                           ;psect for function _introduction
  1764  037C                     _introduction:
  1765  037C                     l1498:	
  1766                           ;incstack = 0
  1767                           ; Regs used in _introduction: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1768                           
  1769                           
  1770                           ;main.c: 164:     lcd_com(0x80);
  1771  037C  3080               	movlw	128
  1772  037D  120A  118A  226B  120A  118A  	fcall	_lcd_com
  1773  0382                     l1500:
  1774                           
  1775                           ;main.c: 165:     lcd_puts("Deviot.vn");
  1776  0382  308B               	movlw	(low ((STR_14-__stringbase)| (0+32768)))& (0+255)
  1777  0383  120A  118A  212E  120A  118A  	fcall	_lcd_puts
  1778  0388                     l1502:
  1779                           
  1780                           ;main.c: 166:     lcd_com(0xC0);
  1781  0388  30C0               	movlw	192
  1782  0389  120A  118A  226B  120A  118A  	fcall	_lcd_com
  1783                           
  1784                           ;main.c: 167:     lcd_puts("Project class");
  1785  038E  304B               	movlw	(low ((STR_15-__stringbase)| (0+32768)))& (0+255)
  1786  038F  120A  118A  212E  120A  118A  	fcall	_lcd_puts
  1787  0394                     l1504:
  1788                           
  1789                           ;main.c: 168:     _delay((unsigned long)((1000)*(20000000/4000.0)));
  1790  0394  301A               	movlw	26
  1791  0395  1283               	bcf	3,5	;RP0=0, select bank0
  1792  0396  1303               	bcf	3,6	;RP1=0, select bank0
  1793  0397  00D5               	movwf	??_introduction+2
  1794  0398  305E               	movlw	94
  1795  0399  00D4               	movwf	??_introduction+1
  1796  039A  306D               	movlw	109
  1797  039B  00D3               	movwf	??_introduction
  1798  039C                     u1537:
  1799  039C  0BD3               	decfsz	??_introduction,f
  1800  039D  2B9C               	goto	u1537
  1801  039E  0BD4               	decfsz	??_introduction+1,f
  1802  039F  2B9C               	goto	u1537
  1803  03A0  0BD5               	decfsz	??_introduction+2,f
  1804  03A1  2B9C               	goto	u1537
  1805  03A2  2BA3               	nop2
  1806  03A3                     l1506:
  1807                           
  1808                           ;main.c: 169:     _delay((unsigned long)((1000)*(20000000/4000.0)));
  1809  03A3  301A               	movlw	26
  1810  03A4  1283               	bcf	3,5	;RP0=0, select bank0
  1811  03A5  1303               	bcf	3,6	;RP1=0, select bank0
  1812  03A6  00D5               	movwf	??_introduction+2
  1813  03A7  305E               	movlw	94
  1814  03A8  00D4               	movwf	??_introduction+1
  1815  03A9  306D               	movlw	109
  1816  03AA  00D3               	movwf	??_introduction
  1817  03AB                     u1547:
  1818  03AB  0BD3               	decfsz	??_introduction,f
  1819  03AC  2BAB               	goto	u1547
  1820  03AD  0BD4               	decfsz	??_introduction+1,f
  1821  03AE  2BAB               	goto	u1547
  1822  03AF  0BD5               	decfsz	??_introduction+2,f
  1823  03B0  2BAB               	goto	u1547
  1824  03B1  2BB2               	nop2
  1825                           
  1826                           ;main.c: 170:     clear();
  1827  03B2  120A  158A  27E7  120A  118A  	fcall	_clear
  1828  03B7                     l1508:
  1829                           
  1830                           ;main.c: 171:     lcd_com(0x80);
  1831  03B7  3080               	movlw	128
  1832  03B8  120A  118A  226B  120A  118A  	fcall	_lcd_com
  1833  03BD                     l1510:
  1834                           
  1835                           ;main.c: 172:     lcd_puts("DHT11 sensor");
  1836  03BD  3073               	movlw	(low ((STR_16-__stringbase)| (0+32768)))& (0+255)
  1837  03BE  120A  118A  212E  120A  118A  	fcall	_lcd_puts
  1838                           
  1839                           ;main.c: 173:     lcd_com(0xC0);
  1840  03C3  30C0               	movlw	192
  1841  03C4  120A  118A  226B  120A  118A  	fcall	_lcd_com
  1842  03C9                     l1512:
  1843                           
  1844                           ;main.c: 174:     lcd_puts("with PIC16F877A");
  1845  03C9  301C               	movlw	(low ((STR_17-__stringbase)| (0+32768)))& (0+255)
  1846  03CA  120A  118A  212E  120A  118A  	fcall	_lcd_puts
  1847  03CF                     l1514:
  1848                           
  1849                           ;main.c: 175:     _delay((unsigned long)((1000)*(20000000/4000.0)));
  1850  03CF  301A               	movlw	26
  1851  03D0  1283               	bcf	3,5	;RP0=0, select bank0
  1852  03D1  1303               	bcf	3,6	;RP1=0, select bank0
  1853  03D2  00D5               	movwf	??_introduction+2
  1854  03D3  305E               	movlw	94
  1855  03D4  00D4               	movwf	??_introduction+1
  1856  03D5  306D               	movlw	109
  1857  03D6  00D3               	movwf	??_introduction
  1858  03D7                     u1557:
  1859  03D7  0BD3               	decfsz	??_introduction,f
  1860  03D8  2BD7               	goto	u1557
  1861  03D9  0BD4               	decfsz	??_introduction+1,f
  1862  03DA  2BD7               	goto	u1557
  1863  03DB  0BD5               	decfsz	??_introduction+2,f
  1864  03DC  2BD7               	goto	u1557
  1865  03DD  2BDE               	nop2
  1866  03DE                     l1516:
  1867                           
  1868                           ;main.c: 176:     _delay((unsigned long)((1000)*(20000000/4000.0)));
  1869  03DE  301A               	movlw	26
  1870  03DF  1283               	bcf	3,5	;RP0=0, select bank0
  1871  03E0  1303               	bcf	3,6	;RP1=0, select bank0
  1872  03E1  00D5               	movwf	??_introduction+2
  1873  03E2  305E               	movlw	94
  1874  03E3  00D4               	movwf	??_introduction+1
  1875  03E4  306D               	movlw	109
  1876  03E5  00D3               	movwf	??_introduction
  1877  03E6                     u1567:
  1878  03E6  0BD3               	decfsz	??_introduction,f
  1879  03E7  2BE6               	goto	u1567
  1880  03E8  0BD4               	decfsz	??_introduction+1,f
  1881  03E9  2BE6               	goto	u1567
  1882  03EA  0BD5               	decfsz	??_introduction+2,f
  1883  03EB  2BE6               	goto	u1567
  1884  03EC  2BED               	nop2
  1885  03ED                     l103:
  1886  03ED  0008               	return
  1887  03EE                     __end_of_introduction:
  1888                           
  1889                           	psect	text5
  1890  0FE7                     __ptext5:	
  1891 ;; *************** function _clear *****************
  1892 ;; Defined at:
  1893 ;;		line 156 in file "main.c"
  1894 ;; Parameters:    Size  Location     Type
  1895 ;;		None
  1896 ;; Auto vars:     Size  Location     Type
  1897 ;;		None
  1898 ;; Return value:  Size  Location     Type
  1899 ;;                  1    wreg      void 
  1900 ;; Registers used:
  1901 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1902 ;; Tracked objects:
  1903 ;;		On entry : 0/0
  1904 ;;		On exit  : 0/0
  1905 ;;		Unchanged: 0/0
  1906 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1907 ;;      Params:         0       0       0       0       0
  1908 ;;      Locals:         0       0       0       0       0
  1909 ;;      Temps:          0       0       0       0       0
  1910 ;;      Totals:         0       0       0       0       0
  1911 ;;Total ram usage:        0 bytes
  1912 ;; Hardware stack levels used:    1
  1913 ;; Hardware stack levels required when called:    4
  1914 ;; This function calls:
  1915 ;;		_lcd_com
  1916 ;;		_lcd_puts
  1917 ;; This function is called by:
  1918 ;;		_main
  1919 ;;		_introduction
  1920 ;; This function uses a non-reentrant model
  1921 ;;
  1922                           
  1923                           
  1924                           ;psect for function _clear
  1925  0FE7                     _clear:
  1926  0FE7                     l1480:	
  1927                           ;incstack = 0
  1928                           ; Regs used in _clear: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1929                           
  1930                           
  1931                           ;main.c: 157:     lcd_com(0x80);
  1932  0FE7  3080               	movlw	128
  1933  0FE8  120A  118A  226B  120A  158A  	fcall	_lcd_com
  1934  0FED                     l1482:
  1935                           
  1936                           ;main.c: 158:     lcd_puts("                ");
  1937  0FED  300B               	movlw	(low ((STR_12-__stringbase)| (0+32768)))& (0+255)
  1938  0FEE  120A  118A  212E  120A  158A  	fcall	_lcd_puts
  1939  0FF3                     l1484:
  1940                           
  1941                           ;main.c: 159:     lcd_com(0xC0);
  1942  0FF3  30C0               	movlw	192
  1943  0FF4  120A  118A  226B  120A  158A  	fcall	_lcd_com
  1944                           
  1945                           ;main.c: 160:     lcd_puts("                ");
  1946  0FF9  300B               	movlw	(low ((STR_12-__stringbase)| (0+32768)))& (0+255)
  1947  0FFA  120A  118A  212E  120A  158A  	fcall	_lcd_puts
  1948  0FFF                     l100:
  1949  0FFF  0008               	return
  1950  1000                     __end_of_clear:
  1951                           
  1952                           	psect	text6
  1953  012E                     __ptext6:	
  1954 ;; *************** function _lcd_puts *****************
  1955 ;; Defined at:
  1956 ;;		line 103 in file "lcd.c"
  1957 ;; Parameters:    Size  Location     Type
  1958 ;;  str             1    wreg     PTR unsigned char 
  1959 ;;		 -> STR_17(16), STR_16(13), STR_15(14), STR_14(10), 
  1960 ;;		 -> STR_13(17), STR_12(17), STR_11(13), STR_10(9), 
  1961 ;;		 -> STR_9(16), STR_4(4), STR_3(11), STR_2(2), 
  1962 ;;		 -> STR_1(7), 
  1963 ;; Auto vars:     Size  Location     Type
  1964 ;;  str             1   11[COMMON] PTR unsigned char 
  1965 ;;		 -> STR_17(16), STR_16(13), STR_15(14), STR_14(10), 
  1966 ;;		 -> STR_13(17), STR_12(17), STR_11(13), STR_10(9), 
  1967 ;;		 -> STR_9(16), STR_4(4), STR_3(11), STR_2(2), 
  1968 ;;		 -> STR_1(7), 
  1969 ;;  i               2    9[COMMON] unsigned int 
  1970 ;; Return value:  Size  Location     Type
  1971 ;;                  1    wreg      void 
  1972 ;; Registers used:
  1973 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1974 ;; Tracked objects:
  1975 ;;		On entry : 0/0
  1976 ;;		On exit  : 0/0
  1977 ;;		Unchanged: 0/0
  1978 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1979 ;;      Params:         0       0       0       0       0
  1980 ;;      Locals:         3       0       0       0       0
  1981 ;;      Temps:          0       0       0       0       0
  1982 ;;      Totals:         3       0       0       0       0
  1983 ;;Total ram usage:        3 bytes
  1984 ;; Hardware stack levels used:    1
  1985 ;; Hardware stack levels required when called:    3
  1986 ;; This function calls:
  1987 ;;		_lcd_data
  1988 ;; This function is called by:
  1989 ;;		_main
  1990 ;;		_clear
  1991 ;;		_introduction
  1992 ;; This function uses a non-reentrant model
  1993 ;;
  1994                           
  1995                           
  1996                           ;psect for function _lcd_puts
  1997  012E                     _lcd_puts:
  1998                           
  1999                           ;incstack = 0
  2000                           ; Regs used in _lcd_puts: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2001                           ;lcd_puts@str stored from wreg
  2002  012E  00FB               	movwf	lcd_puts@str
  2003  012F                     l1472:
  2004                           
  2005                           ;lcd.c: 103: void lcd_puts(char *str);lcd.c: 104: {;lcd.c: 105:   unsigned int i=0;
  2006  012F  01F9               	clrf	lcd_puts@i
  2007  0130  01FA               	clrf	lcd_puts@i+1
  2008                           
  2009                           ;lcd.c: 106:  for(;str[i]!=0;i++)
  2010  0131  2945               	goto	l1478
  2011  0132                     l1474:
  2012                           
  2013                           ;lcd.c: 107:   lcd_data(str[i]);
  2014  0132  0879               	movf	lcd_puts@i,w
  2015  0133  077B               	addwf	lcd_puts@str,w
  2016  0134  0084               	movwf	4
  2017  0135  120A  118A  200D  120A  118A  	fcall	stringdir
  2018  013A  120A  158A  27A2  120A  118A  	fcall	_lcd_data
  2019  013F                     l1476:
  2020  013F  3001               	movlw	1
  2021  0140  07F9               	addwf	lcd_puts@i,f
  2022  0141  1803               	skipnc
  2023  0142  0AFA               	incf	lcd_puts@i+1,f
  2024  0143  3000               	movlw	0
  2025  0144  07FA               	addwf	lcd_puts@i+1,f
  2026  0145                     l1478:
  2027  0145  0879               	movf	lcd_puts@i,w
  2028  0146  077B               	addwf	lcd_puts@str,w
  2029  0147  0084               	movwf	4
  2030  0148  120A  118A  200D  120A  118A  	fcall	stringdir
  2031  014D  3A00               	xorlw	0
  2032  014E  1D03               	skipz
  2033  014F  2951               	goto	u791
  2034  0150  2952               	goto	u790
  2035  0151                     u791:
  2036  0151  2932               	goto	l1474
  2037  0152                     u790:
  2038  0152                     l139:
  2039  0152  0008               	return
  2040  0153                     __end_of_lcd_puts:
  2041                           
  2042                           	psect	text7
  2043  0FA2                     __ptext7:	
  2044 ;; *************** function _lcd_data *****************
  2045 ;; Defined at:
  2046 ;;		line 74 in file "lcd.c"
  2047 ;; Parameters:    Size  Location     Type
  2048 ;;  a               1    wreg     unsigned char 
  2049 ;; Auto vars:     Size  Location     Type
  2050 ;;  a               1    8[COMMON] unsigned char 
  2051 ;; Return value:  Size  Location     Type
  2052 ;;                  1    wreg      void 
  2053 ;; Registers used:
  2054 ;;		wreg, status,2, status,0, pclath, cstack
  2055 ;; Tracked objects:
  2056 ;;		On entry : 0/0
  2057 ;;		On exit  : 0/0
  2058 ;;		Unchanged: 0/0
  2059 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2060 ;;      Params:         0       0       0       0       0
  2061 ;;      Locals:         1       0       0       0       0
  2062 ;;      Temps:          0       0       0       0       0
  2063 ;;      Totals:         1       0       0       0       0
  2064 ;;Total ram usage:        1 bytes
  2065 ;; Hardware stack levels used:    1
  2066 ;; Hardware stack levels required when called:    2
  2067 ;; This function calls:
  2068 ;;		_lcd_com
  2069 ;; This function is called by:
  2070 ;;		_main
  2071 ;;		_lcd_puts
  2072 ;;		_hex2lcd
  2073 ;;		_LCD_ScrollMessage
  2074 ;;		_lcd_print_number
  2075 ;; This function uses a non-reentrant model
  2076 ;;
  2077                           
  2078                           
  2079                           ;psect for function _lcd_data
  2080  0FA2                     _lcd_data:
  2081                           
  2082                           ;incstack = 0
  2083                           ; Regs used in _lcd_data: [wreg+status,2+status,0+pclath+cstack]
  2084                           ;lcd_data@a stored from wreg
  2085  0FA2  00F8               	movwf	lcd_data@a
  2086  0FA3                     l1468:
  2087                           
  2088                           ;lcd.c: 74: void lcd_data(unsigned char a);lcd.c: 75: {;lcd.c: 76:  status=1;
  2089  0FA3  1283               	bcf	3,5	;RP0=0, select bank0
  2090  0FA4  1303               	bcf	3,6	;RP1=0, select bank0
  2091  0FA5  146C               	bsf	_status/(0+8),_status& (0+7)
  2092                           
  2093                           ;lcd.c: 77:  PORTBbits.RB0=1;
  2094  0FA6  1406               	bsf	6,0	;volatile
  2095  0FA7                     l1470:
  2096                           
  2097                           ;lcd.c: 78:  lcd_com(a);
  2098  0FA7  0878               	movf	lcd_data@a,w
  2099  0FA8  120A  118A  226B  120A  158A  	fcall	_lcd_com
  2100  0FAD                     l130:
  2101  0FAD  0008               	return
  2102  0FAE                     __end_of_lcd_data:
  2103                           
  2104                           	psect	text8
  2105  026B                     __ptext8:	
  2106 ;; *************** function _lcd_com *****************
  2107 ;; Defined at:
  2108 ;;		line 47 in file "lcd.c"
  2109 ;; Parameters:    Size  Location     Type
  2110 ;;  a               1    wreg     unsigned char 
  2111 ;; Auto vars:     Size  Location     Type
  2112 ;;  a               1    6[COMMON] unsigned char 
  2113 ;;  temp            1    7[COMMON] unsigned char 
  2114 ;; Return value:  Size  Location     Type
  2115 ;;                  1    wreg      void 
  2116 ;; Registers used:
  2117 ;;		wreg, status,2, status,0, pclath, cstack
  2118 ;; Tracked objects:
  2119 ;;		On entry : 0/0
  2120 ;;		On exit  : 0/0
  2121 ;;		Unchanged: 0/0
  2122 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2123 ;;      Params:         0       0       0       0       0
  2124 ;;      Locals:         2       0       0       0       0
  2125 ;;      Temps:          2       0       0       0       0
  2126 ;;      Totals:         4       0       0       0       0
  2127 ;;Total ram usage:        4 bytes
  2128 ;; Hardware stack levels used:    1
  2129 ;; Hardware stack levels required when called:    1
  2130 ;; This function calls:
  2131 ;;		_delay
  2132 ;; This function is called by:
  2133 ;;		_main
  2134 ;;		_clear
  2135 ;;		_introduction
  2136 ;;		_lcd_data
  2137 ;;		_lcd_init
  2138 ;;		_LCD_ScrollMessage
  2139 ;; This function uses a non-reentrant model
  2140 ;;
  2141                           
  2142                           
  2143                           ;psect for function _lcd_com
  2144  026B                     _lcd_com:
  2145                           
  2146                           ;incstack = 0
  2147                           ; Regs used in _lcd_com: [wreg+status,2+status,0+pclath+cstack]
  2148                           ;lcd_com@a stored from wreg
  2149  026B  00F6               	movwf	lcd_com@a
  2150  026C                     l1436:
  2151                           
  2152                           ;lcd.c: 47: void lcd_com(unsigned char a);lcd.c: 48: {;lcd.c: 49:  unsigned char temp;;l
      +                          cd.c: 50:  if(status)
  2153  026C  1283               	bcf	3,5	;RP0=0, select bank0
  2154  026D  1303               	bcf	3,6	;RP1=0, select bank0
  2155  026E  1C6C               	btfss	_status/(0+8),_status& (0+7)
  2156  026F  2A71               	goto	u771
  2157  0270  2A72               	goto	u770
  2158  0271                     u771:
  2159  0271  2A74               	goto	l125
  2160  0272                     u770:
  2161  0272                     l1438:
  2162                           
  2163                           ;lcd.c: 51:  {;lcd.c: 52:   status=0;
  2164  0272  106C               	bcf	_status/(0+8),_status& (0+7)
  2165                           
  2166                           ;lcd.c: 53:   goto next;
  2167  0273  2A75               	goto	l126
  2168  0274                     l125:	
  2169                           ;lcd.c: 54:  }
  2170                           
  2171                           
  2172                           ;lcd.c: 55:  PORTBbits.RB0=0;
  2173  0274  1006               	bcf	6,0	;volatile
  2174  0275                     l126:	
  2175                           ;lcd.c: 56:  next:
  2176                           
  2177                           
  2178                           ;lcd.c: 57:  PORTBbits.RB1=0;
  2179  0275  1086               	bcf	6,1	;volatile
  2180  0276                     l1440:
  2181                           
  2182                           ;lcd.c: 58:  temp=a;
  2183  0276  0876               	movf	lcd_com@a,w
  2184  0277  00F4               	movwf	??_lcd_com
  2185  0278  0874               	movf	??_lcd_com,w
  2186  0279  00F7               	movwf	lcd_com@temp
  2187  027A                     l1442:
  2188                           
  2189                           ;lcd.c: 59:  temp&=0xf0;
  2190  027A  30F0               	movlw	240
  2191  027B  00F4               	movwf	??_lcd_com
  2192  027C  0874               	movf	??_lcd_com,w
  2193  027D  05F7               	andwf	lcd_com@temp,f
  2194  027E                     l1444:
  2195                           
  2196                           ;lcd.c: 60:  PORTB&=0x0f;
  2197  027E  300F               	movlw	15
  2198  027F  00F4               	movwf	??_lcd_com
  2199  0280  0874               	movf	??_lcd_com,w
  2200  0281  0586               	andwf	6,f	;volatile
  2201  0282                     l1446:
  2202                           
  2203                           ;lcd.c: 61:  PORTB|=temp;
  2204  0282  0877               	movf	lcd_com@temp,w	;volatile
  2205  0283  00F4               	movwf	??_lcd_com
  2206  0284  0874               	movf	??_lcd_com,w
  2207  0285  0486               	iorwf	6,f	;volatile
  2208  0286                     l1448:
  2209                           
  2210                           ;lcd.c: 62:  PORTBbits.RB2=1;
  2211  0286  1506               	bsf	6,2	;volatile
  2212  0287                     l1450:
  2213                           
  2214                           ;lcd.c: 63:  delay(300);
  2215  0287  302C               	movlw	44
  2216  0288  00F0               	movwf	delay@j
  2217  0289  3001               	movlw	1
  2218  028A  00F1               	movwf	delay@j+1
  2219  028B  120A  158A  27D1  120A  118A  	fcall	_delay
  2220  0290                     l1452:
  2221                           
  2222                           ;lcd.c: 64:  PORTBbits.RB2=0;
  2223  0290  1283               	bcf	3,5	;RP0=0, select bank0
  2224  0291  1303               	bcf	3,6	;RP1=0, select bank0
  2225  0292  1106               	bcf	6,2	;volatile
  2226  0293                     l1454:
  2227                           
  2228                           ;lcd.c: 65:  temp=a<<4;
  2229  0293  0876               	movf	lcd_com@a,w
  2230  0294  00F4               	movwf	??_lcd_com
  2231  0295  3003               	movlw	3
  2232  0296                     u785:
  2233  0296  1003               	clrc
  2234  0297  0DF4               	rlf	??_lcd_com,f
  2235  0298  3EFF               	addlw	-1
  2236  0299  1D03               	skipz
  2237  029A  2A96               	goto	u785
  2238  029B  1003               	clrc
  2239  029C  0D74               	rlf	??_lcd_com,w
  2240  029D  00F5               	movwf	??_lcd_com+1
  2241  029E  0875               	movf	??_lcd_com+1,w
  2242  029F  00F7               	movwf	lcd_com@temp
  2243  02A0                     l1456:
  2244                           
  2245                           ;lcd.c: 66:  temp&=0xf0;
  2246  02A0  30F0               	movlw	240
  2247  02A1  00F4               	movwf	??_lcd_com
  2248  02A2  0874               	movf	??_lcd_com,w
  2249  02A3  05F7               	andwf	lcd_com@temp,f
  2250  02A4                     l1458:
  2251                           
  2252                           ;lcd.c: 67:  PORTB&=0x0f;
  2253  02A4  300F               	movlw	15
  2254  02A5  00F4               	movwf	??_lcd_com
  2255  02A6  0874               	movf	??_lcd_com,w
  2256  02A7  0586               	andwf	6,f	;volatile
  2257  02A8                     l1460:
  2258                           
  2259                           ;lcd.c: 68:  PORTB|=temp;
  2260  02A8  0877               	movf	lcd_com@temp,w	;volatile
  2261  02A9  00F4               	movwf	??_lcd_com
  2262  02AA  0874               	movf	??_lcd_com,w
  2263  02AB  0486               	iorwf	6,f	;volatile
  2264  02AC                     l1462:
  2265                           
  2266                           ;lcd.c: 69:  PORTBbits.RB2=1;
  2267  02AC  1506               	bsf	6,2	;volatile
  2268  02AD                     l1464:
  2269                           
  2270                           ;lcd.c: 70:  delay(300);
  2271  02AD  302C               	movlw	44
  2272  02AE  00F0               	movwf	delay@j
  2273  02AF  3001               	movlw	1
  2274  02B0  00F1               	movwf	delay@j+1
  2275  02B1  120A  158A  27D1  120A  118A  	fcall	_delay
  2276  02B6                     l1466:
  2277                           
  2278                           ;lcd.c: 71:  PORTBbits.RB2=0;
  2279  02B6  1283               	bcf	3,5	;RP0=0, select bank0
  2280  02B7  1303               	bcf	3,6	;RP1=0, select bank0
  2281  02B8  1106               	bcf	6,2	;volatile
  2282  02B9                     l127:
  2283  02B9  0008               	return
  2284  02BA                     __end_of_lcd_com:
  2285                           
  2286                           	psect	text9
  2287  0FD1                     __ptext9:	
  2288 ;; *************** function _delay *****************
  2289 ;; Defined at:
  2290 ;;		line 30 in file "lcd.c"
  2291 ;; Parameters:    Size  Location     Type
  2292 ;;  j               2    0[COMMON] unsigned int 
  2293 ;; Auto vars:     Size  Location     Type
  2294 ;;  i               2    2[COMMON] unsigned int 
  2295 ;; Return value:  Size  Location     Type
  2296 ;;                  1    wreg      void 
  2297 ;; Registers used:
  2298 ;;		wreg, status,2
  2299 ;; Tracked objects:
  2300 ;;		On entry : 0/0
  2301 ;;		On exit  : 0/0
  2302 ;;		Unchanged: 0/0
  2303 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2304 ;;      Params:         2       0       0       0       0
  2305 ;;      Locals:         2       0       0       0       0
  2306 ;;      Temps:          0       0       0       0       0
  2307 ;;      Totals:         4       0       0       0       0
  2308 ;;Total ram usage:        4 bytes
  2309 ;; Hardware stack levels used:    1
  2310 ;; This function calls:
  2311 ;;		Nothing
  2312 ;; This function is called by:
  2313 ;;		_lcd_init_write
  2314 ;;		_lcd_com
  2315 ;;		_lcd_init
  2316 ;;		_LCD_ScrollMessage
  2317 ;; This function uses a non-reentrant model
  2318 ;;
  2319                           
  2320                           
  2321                           ;psect for function _delay
  2322  0FD1                     _delay:
  2323  0FD1                     l1432:	
  2324                           ;incstack = 0
  2325                           ; Regs used in _delay: [wreg+status,2]
  2326                           
  2327                           
  2328                           ;lcd.c: 30: void delay(unsigned int j);lcd.c: 31: {;lcd.c: 32:  unsigned int i=0;
  2329  0FD1  01F2               	clrf	delay@i
  2330  0FD2  01F3               	clrf	delay@i+1
  2331                           
  2332                           ;lcd.c: 33:  for(i=0;i<j;i++);
  2333  0FD3  01F2               	clrf	delay@i
  2334  0FD4  01F3               	clrf	delay@i+1
  2335  0FD5  2FDC               	goto	l116
  2336  0FD6                     l1434:
  2337  0FD6  3001               	movlw	1
  2338  0FD7  07F2               	addwf	delay@i,f
  2339  0FD8  1803               	skipnc
  2340  0FD9  0AF3               	incf	delay@i+1,f
  2341  0FDA  3000               	movlw	0
  2342  0FDB  07F3               	addwf	delay@i+1,f
  2343  0FDC                     l116:
  2344  0FDC  0871               	movf	delay@j+1,w
  2345  0FDD  0273               	subwf	delay@i+1,w
  2346  0FDE  1D03               	skipz
  2347  0FDF  2FE2               	goto	u765
  2348  0FE0  0870               	movf	delay@j,w
  2349  0FE1  0272               	subwf	delay@i,w
  2350  0FE2                     u765:
  2351  0FE2  1C03               	skipc
  2352  0FE3  2FE5               	goto	u761
  2353  0FE4  2FE6               	goto	u760
  2354  0FE5                     u761:
  2355  0FE5  2FD6               	goto	l1434
  2356  0FE6                     u760:
  2357  0FE6                     l119:
  2358  0FE6  0008               	return
  2359  0FE7                     __end_of_delay:
  2360                           
  2361                           	psect	text10
  2362  0522                     __ptext10:	
  2363 ;; *************** function _sprintf *****************
  2364 ;; Defined at:
  2365 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  2366 ;; Parameters:    Size  Location     Type
  2367 ;;  sp              1    wreg     PTR unsigned char 
  2368 ;;		 -> value(20), 
  2369 ;;  f               1    0[BANK0 ] PTR const unsigned char 
  2370 ;;		 -> STR_7(15), STR_5(13), 
  2371 ;; Auto vars:     Size  Location     Type
  2372 ;;  sp              1   13[BANK0 ] PTR unsigned char 
  2373 ;;		 -> value(20), 
  2374 ;;  tmpval          4    0        struct .
  2375 ;;  val             2   11[BANK0 ] unsigned int 
  2376 ;;  cp              2    0        PTR const unsigned char 
  2377 ;;  len             2    0        unsigned int 
  2378 ;;  c               1   14[BANK0 ] unsigned char 
  2379 ;;  prec            1   10[BANK0 ] char 
  2380 ;;  flag            1    9[BANK0 ] unsigned char 
  2381 ;;  ap              1    8[BANK0 ] PTR void [1]
  2382 ;;		 -> ?_sprintf(2), 
  2383 ;; Return value:  Size  Location     Type
  2384 ;;                  2    0[BANK0 ] int 
  2385 ;; Registers used:
  2386 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2387 ;; Tracked objects:
  2388 ;;		On entry : 0/0
  2389 ;;		On exit  : 0/0
  2390 ;;		Unchanged: 0/0
  2391 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2392 ;;      Params:         0       5       0       0       0
  2393 ;;      Locals:         0       7       0       0       0
  2394 ;;      Temps:          0       3       0       0       0
  2395 ;;      Totals:         0      15       0       0       0
  2396 ;;Total ram usage:       15 bytes
  2397 ;; Hardware stack levels used:    1
  2398 ;; Hardware stack levels required when called:    1
  2399 ;; This function calls:
  2400 ;;		___lwdiv
  2401 ;;		___lwmod
  2402 ;; This function is called by:
  2403 ;;		_main
  2404 ;; This function uses a non-reentrant model
  2405 ;;
  2406                           
  2407                           
  2408                           ;psect for function _sprintf
  2409  0522                     _sprintf:
  2410                           
  2411                           ;incstack = 0
  2412                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2413                           ;sprintf@sp stored from wreg
  2414  0522  1283               	bcf	3,5	;RP0=0, select bank0
  2415  0523  1303               	bcf	3,6	;RP1=0, select bank0
  2416  0524  00E0               	movwf	sprintf@sp
  2417  0525                     l1686:
  2418                           
  2419                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 521: 
      +                           signed char prec;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c:
      +                           525:  unsigned char flag;
  2420  0525  3054               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  2421  0526  00D8               	movwf	??_sprintf
  2422  0527  0858               	movf	??_sprintf,w
  2423  0528  00DB               	movwf	sprintf@ap
  2424                           
  2425                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  2426  0529  2DF3               	goto	l1738
  2427  052A                     l1688:
  2428                           
  2429                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  2430  052A  3025               	movlw	37
  2431  052B  0661               	xorwf	sprintf@c,w
  2432  052C  1903               	btfsc	3,2
  2433  052D  2D2F               	goto	u1141
  2434  052E  2D30               	goto	u1140
  2435  052F                     u1141:
  2436  052F  2D3C               	goto	l1694
  2437  0530                     u1140:
  2438  0530                     l1690:
  2439                           
  2440                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  2441  0530  0861               	movf	sprintf@c,w
  2442  0531  00D8               	movwf	??_sprintf
  2443  0532  0860               	movf	sprintf@sp,w
  2444  0533  0084               	movwf	4
  2445  0534  0858               	movf	??_sprintf,w
  2446  0535  1383               	bcf	3,7	;select IRP bank0
  2447  0536  0080               	movwf	0
  2448  0537                     l1692:
  2449  0537  3001               	movlw	1
  2450  0538  00D8               	movwf	??_sprintf
  2451  0539  0858               	movf	??_sprintf,w
  2452  053A  07E0               	addwf	sprintf@sp,f
  2453                           
  2454                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
  2455  053B  2DF3               	goto	l1738
  2456  053C                     l1694:
  2457                           
  2458                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  2459  053C  01DC               	clrf	sprintf@flag
  2460  053D                     l1698:	
  2461                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
  2462                           
  2463  053D  3001               	movlw	1
  2464  053E  07D3               	addwf	sprintf@f,f
  2465  053F  30FF               	movlw	-1
  2466  0540  0753               	addwf	sprintf@f,w
  2467  0541  0084               	movwf	4
  2468  0542  120A  118A  200D  120A  118A  	fcall	stringdir
  2469  0547  00E1               	movwf	sprintf@c
  2470  0548  00D8               	movwf	??_sprintf
  2471  0549  01D9               	clrf	??_sprintf+1
  2472                           
  2473                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2474                           ; Switch size 1, requested type "simple"
  2475                           ; Number of cases is 1, Range of values is 0 to 0
  2476                           ; switch strategies available:
  2477                           ; Name         Instructions Cycles
  2478                           ; simple_byte            4     3 (average)
  2479                           ; direct_byte           11     8 (fixed)
  2480                           ; jumptable            260     6 (fixed)
  2481                           ;	Chosen strategy is simple_byte
  2482  054A  0859               	movf	??_sprintf+1,w
  2483  054B  3A00               	xorlw	0	; case 0
  2484  054C  1903               	skipnz
  2485  054D  2D4F               	goto	l2016
  2486  054E  2DF3               	goto	l1738
  2487  054F                     l2016:
  2488                           
  2489                           ; Switch size 1, requested type "simple"
  2490                           ; Number of cases is 3, Range of values is 0 to 105
  2491                           ; switch strategies available:
  2492                           ; Name         Instructions Cycles
  2493                           ; simple_byte           10     6 (average)
  2494                           ; jumptable            260     6 (fixed)
  2495                           ;	Chosen strategy is simple_byte
  2496  054F  0858               	movf	??_sprintf,w
  2497  0550  3A00               	xorlw	0	; case 0
  2498  0551  1903               	skipnz
  2499  0552  2E05               	goto	l1740
  2500  0553  3A64               	xorlw	100	; case 100
  2501  0554  1903               	skipnz
  2502  0555  2D5A               	goto	l1700
  2503  0556  3A0D               	xorlw	13	; case 105
  2504  0557  1903               	skipnz
  2505  0558  2D5A               	goto	l1700
  2506  0559  2DF3               	goto	l1738
  2507  055A                     l1700:
  2508                           
  2509                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  2510  055A  085B               	movf	sprintf@ap,w
  2511  055B  0084               	movwf	4
  2512  055C  1383               	bcf	3,7	;select IRP bank0
  2513  055D  0800               	movf	0,w
  2514  055E  00DE               	movwf	sprintf@val
  2515  055F  0A84               	incf	4,f
  2516  0560  0800               	movf	0,w
  2517  0561  00DF               	movwf	sprintf@val+1
  2518  0562                     l1702:
  2519  0562  3002               	movlw	2
  2520  0563  00D8               	movwf	??_sprintf
  2521  0564  0858               	movf	??_sprintf,w
  2522  0565  07DB               	addwf	sprintf@ap,f
  2523  0566                     l1704:
  2524                           
  2525                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  2526  0566  1FDF               	btfss	sprintf@val+1,7
  2527  0567  2D69               	goto	u1151
  2528  0568  2D6A               	goto	u1150
  2529  0569                     u1151:
  2530  0569  2D73               	goto	l1710
  2531  056A                     u1150:
  2532  056A                     l1706:
  2533                           
  2534                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  2535  056A  3003               	movlw	3
  2536  056B  00D8               	movwf	??_sprintf
  2537  056C  0858               	movf	??_sprintf,w
  2538  056D  04DC               	iorwf	sprintf@flag,f
  2539  056E                     l1708:
  2540                           
  2541                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  2542  056E  09DE               	comf	sprintf@val,f
  2543  056F  09DF               	comf	sprintf@val+1,f
  2544  0570  0ADE               	incf	sprintf@val,f
  2545  0571  1903               	skipnz
  2546  0572  0ADF               	incf	sprintf@val+1,f
  2547  0573                     l1710:
  2548                           
  2549                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  2550  0573  01E1               	clrf	sprintf@c
  2551  0574  0AE1               	incf	sprintf@c,f
  2552  0575                     l1716:
  2553                           
  2554                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  2555  0575  0861               	movf	sprintf@c,w
  2556  0576  00D8               	movwf	??_sprintf
  2557  0577  0758               	addwf	??_sprintf,w
  2558  0578  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2559  0579  0084               	movwf	4
  2560  057A  120A  118A  200D  120A  118A  	fcall	stringdir
  2561  057F  00D9               	movwf	??_sprintf+1
  2562  0580  120A  118A  200D  120A  118A  	fcall	stringdir
  2563  0585  00DA               	movwf	??_sprintf+2
  2564  0586  085A               	movf	??_sprintf+2,w
  2565  0587  025F               	subwf	sprintf@val+1,w
  2566  0588  1D03               	skipz
  2567  0589  2D8C               	goto	u1165
  2568  058A  0859               	movf	??_sprintf+1,w
  2569  058B  025E               	subwf	sprintf@val,w
  2570  058C                     u1165:
  2571  058C  1803               	skipnc
  2572  058D  2D8F               	goto	u1161
  2573  058E  2D90               	goto	u1160
  2574  058F                     u1161:
  2575  058F  2D91               	goto	l1720
  2576  0590                     u1160:
  2577  0590  2D9B               	goto	l1722
  2578  0591                     l1720:
  2579  0591  3001               	movlw	1
  2580  0592  00D8               	movwf	??_sprintf
  2581  0593  0858               	movf	??_sprintf,w
  2582  0594  07E1               	addwf	sprintf@c,f
  2583  0595  3005               	movlw	5
  2584  0596  0661               	xorwf	sprintf@c,w
  2585  0597  1D03               	btfss	3,2
  2586  0598  2D9A               	goto	u1171
  2587  0599  2D9B               	goto	u1170
  2588  059A                     u1171:
  2589  059A  2D75               	goto	l1716
  2590  059B                     u1170:
  2591  059B                     l1722:
  2592                           
  2593                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  2594  059B  085C               	movf	sprintf@flag,w
  2595  059C  3903               	andlw	3
  2596  059D  1903               	btfsc	3,2
  2597  059E  2DA0               	goto	u1181
  2598  059F  2DA1               	goto	u1180
  2599  05A0                     u1181:
  2600  05A0  2DAC               	goto	l1728
  2601  05A1                     u1180:
  2602  05A1                     l1724:
  2603                           
  2604                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  2605  05A1  302D               	movlw	45
  2606  05A2  00D8               	movwf	??_sprintf
  2607  05A3  0860               	movf	sprintf@sp,w
  2608  05A4  0084               	movwf	4
  2609  05A5  0858               	movf	??_sprintf,w
  2610  05A6  1383               	bcf	3,7	;select IRP bank0
  2611  05A7  0080               	movwf	0
  2612  05A8                     l1726:
  2613  05A8  3001               	movlw	1
  2614  05A9  00D8               	movwf	??_sprintf
  2615  05AA  0858               	movf	??_sprintf,w
  2616  05AB  07E0               	addwf	sprintf@sp,f
  2617  05AC                     l1728:
  2618                           
  2619                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1495:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  2620  05AC  0861               	movf	sprintf@c,w
  2621  05AD  00D8               	movwf	??_sprintf
  2622  05AE  0858               	movf	??_sprintf,w
  2623  05AF  00DD               	movwf	sprintf@prec
  2624                           
  2625                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  2626  05B0  2DEA               	goto	l1736
  2627  05B1                     l1730:
  2628                           
  2629                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  2630  05B1  300A               	movlw	10
  2631  05B2  00F8               	movwf	___lwmod@divisor
  2632  05B3  3000               	movlw	0
  2633  05B4  00F9               	movwf	___lwmod@divisor+1
  2634  05B5  085D               	movf	sprintf@prec,w
  2635  05B6  00D8               	movwf	??_sprintf
  2636  05B7  0758               	addwf	??_sprintf,w
  2637  05B8  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2638  05B9  0084               	movwf	4
  2639  05BA  120A  118A  200D  120A  118A  	fcall	stringdir
  2640  05BF  00F0               	movwf	___lwdiv@divisor
  2641  05C0  120A  118A  200D  120A  118A  	fcall	stringdir
  2642  05C5  00F1               	movwf	___lwdiv@divisor+1
  2643  05C6  085F               	movf	sprintf@val+1,w
  2644  05C7  00F3               	movwf	___lwdiv@dividend+1
  2645  05C8  085E               	movf	sprintf@val,w
  2646  05C9  00F2               	movwf	___lwdiv@dividend
  2647  05CA  120A  118A  2227  120A  118A  	fcall	___lwdiv
  2648  05CF  0871               	movf	?___lwdiv+1,w
  2649  05D0  00FB               	movwf	___lwmod@dividend+1
  2650  05D1  0870               	movf	?___lwdiv,w
  2651  05D2  00FA               	movwf	___lwmod@dividend
  2652  05D3  120A  118A  21AB  120A  118A  	fcall	___lwmod
  2653  05D8  0878               	movf	?___lwmod,w
  2654  05D9  3E30               	addlw	48
  2655  05DA  1283               	bcf	3,5	;RP0=0, select bank0
  2656  05DB  1303               	bcf	3,6	;RP1=0, select bank0
  2657  05DC  00D9               	movwf	??_sprintf+1
  2658  05DD  0859               	movf	??_sprintf+1,w
  2659  05DE  00E1               	movwf	sprintf@c
  2660  05DF                     l1732:
  2661                           
  2662                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  2663  05DF  0861               	movf	sprintf@c,w
  2664  05E0  00D8               	movwf	??_sprintf
  2665  05E1  0860               	movf	sprintf@sp,w
  2666  05E2  0084               	movwf	4
  2667  05E3  0858               	movf	??_sprintf,w
  2668  05E4  1383               	bcf	3,7	;select IRP bank0
  2669  05E5  0080               	movwf	0
  2670  05E6                     l1734:
  2671  05E6  3001               	movlw	1
  2672  05E7  00D8               	movwf	??_sprintf
  2673  05E8  0858               	movf	??_sprintf,w
  2674  05E9  07E0               	addwf	sprintf@sp,f
  2675  05EA                     l1736:
  2676                           
  2677                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  2678  05EA  30FF               	movlw	255
  2679  05EB  00D8               	movwf	??_sprintf
  2680  05EC  0858               	movf	??_sprintf,w
  2681  05ED  07DD               	addwf	sprintf@prec,f
  2682  05EE  0A5D               	incf	sprintf@prec,w
  2683  05EF  1D03               	btfss	3,2
  2684  05F0  2DF2               	goto	u1191
  2685  05F1  2DF3               	goto	u1190
  2686  05F2                     u1191:
  2687  05F2  2DB1               	goto	l1730
  2688  05F3                     u1190:
  2689  05F3                     l1738:
  2690                           
  2691                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  2692  05F3  3001               	movlw	1
  2693  05F4  07D3               	addwf	sprintf@f,f
  2694  05F5  30FF               	movlw	-1
  2695  05F6  0753               	addwf	sprintf@f,w
  2696  05F7  0084               	movwf	4
  2697  05F8  120A  118A  200D  120A  118A  	fcall	stringdir
  2698  05FD  00D8               	movwf	??_sprintf
  2699  05FE  0858               	movf	??_sprintf,w
  2700  05FF  00E1               	movwf	sprintf@c
  2701  0600  0861               	movf	sprintf@c,w
  2702  0601  1D03               	btfss	3,2
  2703  0602  2E04               	goto	u1201
  2704  0603  2E05               	goto	u1200
  2705  0604                     u1201:
  2706  0604  2D2A               	goto	l1688
  2707  0605                     u1200:
  2708  0605                     l1740:
  2709                           
  2710                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  2711  0605  0860               	movf	sprintf@sp,w
  2712  0606  0084               	movwf	4
  2713  0607  1383               	bcf	3,7	;select IRP bank0
  2714  0608  0180               	clrf	0
  2715  0609                     l338:
  2716  0609  0008               	return
  2717  060A                     __end_of_sprintf:
  2718                           
  2719                           	psect	text11
  2720  01AB                     __ptext11:	
  2721 ;; *************** function ___lwmod *****************
  2722 ;; Defined at:
  2723 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  2724 ;; Parameters:    Size  Location     Type
  2725 ;;  divisor         2    8[COMMON] unsigned int 
  2726 ;;  dividend        2   10[COMMON] unsigned int 
  2727 ;; Auto vars:     Size  Location     Type
  2728 ;;  counter         1   13[COMMON] unsigned char 
  2729 ;; Return value:  Size  Location     Type
  2730 ;;                  2    8[COMMON] unsigned int 
  2731 ;; Registers used:
  2732 ;;		wreg, status,2, status,0
  2733 ;; Tracked objects:
  2734 ;;		On entry : 0/0
  2735 ;;		On exit  : 0/0
  2736 ;;		Unchanged: 0/0
  2737 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2738 ;;      Params:         4       0       0       0       0
  2739 ;;      Locals:         1       0       0       0       0
  2740 ;;      Temps:          1       0       0       0       0
  2741 ;;      Totals:         6       0       0       0       0
  2742 ;;Total ram usage:        6 bytes
  2743 ;; Hardware stack levels used:    1
  2744 ;; This function calls:
  2745 ;;		Nothing
  2746 ;; This function is called by:
  2747 ;;		_sprintf
  2748 ;;		_lcd_print_number
  2749 ;; This function uses a non-reentrant model
  2750 ;;
  2751                           
  2752                           
  2753                           ;psect for function ___lwmod
  2754  01AB                     ___lwmod:
  2755  01AB                     l1596:	
  2756                           ;incstack = 0
  2757                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2758                           
  2759  01AB  0878               	movf	___lwmod@divisor,w
  2760  01AC  0479               	iorwf	___lwmod@divisor+1,w
  2761  01AD  1903               	btfsc	3,2
  2762  01AE  29B0               	goto	u1001
  2763  01AF  29B1               	goto	u1000
  2764  01B0                     u1001:
  2765  01B0  29E0               	goto	l1614
  2766  01B1                     u1000:
  2767  01B1                     l1598:
  2768  01B1  01FD               	clrf	___lwmod@counter
  2769  01B2  0AFD               	incf	___lwmod@counter,f
  2770  01B3  29BF               	goto	l1604
  2771  01B4                     l1600:
  2772  01B4  3001               	movlw	1
  2773  01B5                     u1015:
  2774  01B5  1003               	clrc
  2775  01B6  0DF8               	rlf	___lwmod@divisor,f
  2776  01B7  0DF9               	rlf	___lwmod@divisor+1,f
  2777  01B8  3EFF               	addlw	-1
  2778  01B9  1D03               	skipz
  2779  01BA  29B5               	goto	u1015
  2780  01BB                     l1602:
  2781  01BB  3001               	movlw	1
  2782  01BC  00FC               	movwf	??___lwmod
  2783  01BD  087C               	movf	??___lwmod,w
  2784  01BE  07FD               	addwf	___lwmod@counter,f
  2785  01BF                     l1604:
  2786  01BF  1FF9               	btfss	___lwmod@divisor+1,7
  2787  01C0  29C2               	goto	u1021
  2788  01C1  29C3               	goto	u1020
  2789  01C2                     u1021:
  2790  01C2  29B4               	goto	l1600
  2791  01C3                     u1020:
  2792  01C3                     l1606:
  2793  01C3  0879               	movf	___lwmod@divisor+1,w
  2794  01C4  027B               	subwf	___lwmod@dividend+1,w
  2795  01C5  1D03               	skipz
  2796  01C6  29C9               	goto	u1035
  2797  01C7  0878               	movf	___lwmod@divisor,w
  2798  01C8  027A               	subwf	___lwmod@dividend,w
  2799  01C9                     u1035:
  2800  01C9  1C03               	skipc
  2801  01CA  29CC               	goto	u1031
  2802  01CB  29CD               	goto	u1030
  2803  01CC                     u1031:
  2804  01CC  29D3               	goto	l1610
  2805  01CD                     u1030:
  2806  01CD                     l1608:
  2807  01CD  0878               	movf	___lwmod@divisor,w
  2808  01CE  02FA               	subwf	___lwmod@dividend,f
  2809  01CF  0879               	movf	___lwmod@divisor+1,w
  2810  01D0  1C03               	skipc
  2811  01D1  03FB               	decf	___lwmod@dividend+1,f
  2812  01D2  02FB               	subwf	___lwmod@dividend+1,f
  2813  01D3                     l1610:
  2814  01D3  3001               	movlw	1
  2815  01D4                     u1045:
  2816  01D4  1003               	clrc
  2817  01D5  0CF9               	rrf	___lwmod@divisor+1,f
  2818  01D6  0CF8               	rrf	___lwmod@divisor,f
  2819  01D7  3EFF               	addlw	-1
  2820  01D8  1D03               	skipz
  2821  01D9  29D4               	goto	u1045
  2822  01DA                     l1612:
  2823  01DA  3001               	movlw	1
  2824  01DB  02FD               	subwf	___lwmod@counter,f
  2825  01DC  1D03               	btfss	3,2
  2826  01DD  29DF               	goto	u1051
  2827  01DE  29E0               	goto	u1050
  2828  01DF                     u1051:
  2829  01DF  29C3               	goto	l1606
  2830  01E0                     u1050:
  2831  01E0                     l1614:
  2832  01E0  087B               	movf	___lwmod@dividend+1,w
  2833  01E1  00F9               	movwf	?___lwmod+1
  2834  01E2  087A               	movf	___lwmod@dividend,w
  2835  01E3  00F8               	movwf	?___lwmod
  2836  01E4                     l624:
  2837  01E4  0008               	return
  2838  01E5                     __end_of___lwmod:
  2839                           
  2840                           	psect	text12
  2841  0227                     __ptext12:	
  2842 ;; *************** function ___lwdiv *****************
  2843 ;; Defined at:
  2844 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  2845 ;; Parameters:    Size  Location     Type
  2846 ;;  divisor         2    0[COMMON] unsigned int 
  2847 ;;  dividend        2    2[COMMON] unsigned int 
  2848 ;; Auto vars:     Size  Location     Type
  2849 ;;  quotient        2    5[COMMON] unsigned int 
  2850 ;;  counter         1    7[COMMON] unsigned char 
  2851 ;; Return value:  Size  Location     Type
  2852 ;;                  2    0[COMMON] unsigned int 
  2853 ;; Registers used:
  2854 ;;		wreg, status,2, status,0
  2855 ;; Tracked objects:
  2856 ;;		On entry : 0/0
  2857 ;;		On exit  : 0/0
  2858 ;;		Unchanged: 0/0
  2859 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2860 ;;      Params:         4       0       0       0       0
  2861 ;;      Locals:         3       0       0       0       0
  2862 ;;      Temps:          1       0       0       0       0
  2863 ;;      Totals:         8       0       0       0       0
  2864 ;;Total ram usage:        8 bytes
  2865 ;; Hardware stack levels used:    1
  2866 ;; This function calls:
  2867 ;;		Nothing
  2868 ;; This function is called by:
  2869 ;;		_sprintf
  2870 ;;		_lcd_print_number
  2871 ;; This function uses a non-reentrant model
  2872 ;;
  2873                           
  2874                           
  2875                           ;psect for function ___lwdiv
  2876  0227                     ___lwdiv:
  2877  0227                     l1570:	
  2878                           ;incstack = 0
  2879                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2880                           
  2881  0227  01F5               	clrf	___lwdiv@quotient
  2882  0228  01F6               	clrf	___lwdiv@quotient+1
  2883  0229                     l1572:
  2884  0229  0870               	movf	___lwdiv@divisor,w
  2885  022A  0471               	iorwf	___lwdiv@divisor+1,w
  2886  022B  1903               	btfsc	3,2
  2887  022C  2A2E               	goto	u931
  2888  022D  2A2F               	goto	u930
  2889  022E                     u931:
  2890  022E  2A66               	goto	l1592
  2891  022F                     u930:
  2892  022F                     l1574:
  2893  022F  01F7               	clrf	___lwdiv@counter
  2894  0230  0AF7               	incf	___lwdiv@counter,f
  2895  0231  2A3D               	goto	l1580
  2896  0232                     l1576:
  2897  0232  3001               	movlw	1
  2898  0233                     u945:
  2899  0233  1003               	clrc
  2900  0234  0DF0               	rlf	___lwdiv@divisor,f
  2901  0235  0DF1               	rlf	___lwdiv@divisor+1,f
  2902  0236  3EFF               	addlw	-1
  2903  0237  1D03               	skipz
  2904  0238  2A33               	goto	u945
  2905  0239                     l1578:
  2906  0239  3001               	movlw	1
  2907  023A  00F4               	movwf	??___lwdiv
  2908  023B  0874               	movf	??___lwdiv,w
  2909  023C  07F7               	addwf	___lwdiv@counter,f
  2910  023D                     l1580:
  2911  023D  1FF1               	btfss	___lwdiv@divisor+1,7
  2912  023E  2A40               	goto	u951
  2913  023F  2A41               	goto	u950
  2914  0240                     u951:
  2915  0240  2A32               	goto	l1576
  2916  0241                     u950:
  2917  0241                     l1582:
  2918  0241  3001               	movlw	1
  2919  0242                     u965:
  2920  0242  1003               	clrc
  2921  0243  0DF5               	rlf	___lwdiv@quotient,f
  2922  0244  0DF6               	rlf	___lwdiv@quotient+1,f
  2923  0245  3EFF               	addlw	-1
  2924  0246  1D03               	skipz
  2925  0247  2A42               	goto	u965
  2926  0248  0871               	movf	___lwdiv@divisor+1,w
  2927  0249  0273               	subwf	___lwdiv@dividend+1,w
  2928  024A  1D03               	skipz
  2929  024B  2A4E               	goto	u975
  2930  024C  0870               	movf	___lwdiv@divisor,w
  2931  024D  0272               	subwf	___lwdiv@dividend,w
  2932  024E                     u975:
  2933  024E  1C03               	skipc
  2934  024F  2A51               	goto	u971
  2935  0250  2A52               	goto	u970
  2936  0251                     u971:
  2937  0251  2A59               	goto	l1588
  2938  0252                     u970:
  2939  0252                     l1584:
  2940  0252  0870               	movf	___lwdiv@divisor,w
  2941  0253  02F2               	subwf	___lwdiv@dividend,f
  2942  0254  0871               	movf	___lwdiv@divisor+1,w
  2943  0255  1C03               	skipc
  2944  0256  03F3               	decf	___lwdiv@dividend+1,f
  2945  0257  02F3               	subwf	___lwdiv@dividend+1,f
  2946  0258                     l1586:
  2947  0258  1475               	bsf	___lwdiv@quotient,0
  2948  0259                     l1588:
  2949  0259  3001               	movlw	1
  2950  025A                     u985:
  2951  025A  1003               	clrc
  2952  025B  0CF1               	rrf	___lwdiv@divisor+1,f
  2953  025C  0CF0               	rrf	___lwdiv@divisor,f
  2954  025D  3EFF               	addlw	-1
  2955  025E  1D03               	skipz
  2956  025F  2A5A               	goto	u985
  2957  0260                     l1590:
  2958  0260  3001               	movlw	1
  2959  0261  02F7               	subwf	___lwdiv@counter,f
  2960  0262  1D03               	btfss	3,2
  2961  0263  2A65               	goto	u991
  2962  0264  2A66               	goto	u990
  2963  0265                     u991:
  2964  0265  2A41               	goto	l1582
  2965  0266                     u990:
  2966  0266                     l1592:
  2967  0266  0876               	movf	___lwdiv@quotient+1,w
  2968  0267  00F1               	movwf	?___lwdiv+1
  2969  0268  0875               	movf	___lwdiv@quotient,w
  2970  0269  00F0               	movwf	?___lwdiv
  2971  026A                     l614:
  2972  026A  0008               	return
  2973  026B                     __end_of___lwdiv:
  2974                           
  2975                           	psect	text13
  2976  02BA                     __ptext13:	
  2977 ;; *************** function ___awmod *****************
  2978 ;; Defined at:
  2979 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  2980 ;; Parameters:    Size  Location     Type
  2981 ;;  divisor         2    9[COMMON] int 
  2982 ;;  dividend        2   11[COMMON] int 
  2983 ;; Auto vars:     Size  Location     Type
  2984 ;;  sign            1    1[BANK0 ] unsigned char 
  2985 ;;  counter         1    0[BANK0 ] unsigned char 
  2986 ;; Return value:  Size  Location     Type
  2987 ;;                  2    9[COMMON] int 
  2988 ;; Registers used:
  2989 ;;		wreg, status,2, status,0
  2990 ;; Tracked objects:
  2991 ;;		On entry : 0/0
  2992 ;;		On exit  : 0/0
  2993 ;;		Unchanged: 0/0
  2994 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2995 ;;      Params:         4       0       0       0       0
  2996 ;;      Locals:         0       2       0       0       0
  2997 ;;      Temps:          1       0       0       0       0
  2998 ;;      Totals:         5       2       0       0       0
  2999 ;;Total ram usage:        7 bytes
  3000 ;; Hardware stack levels used:    1
  3001 ;; This function calls:
  3002 ;;		Nothing
  3003 ;; This function is called by:
  3004 ;;		_main
  3005 ;; This function uses a non-reentrant model
  3006 ;;
  3007                           
  3008                           
  3009                           ;psect for function ___awmod
  3010  02BA                     ___awmod:
  3011  02BA                     l1808:	
  3012                           ;incstack = 0
  3013                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3014                           
  3015  02BA  1283               	bcf	3,5	;RP0=0, select bank0
  3016  02BB  1303               	bcf	3,6	;RP1=0, select bank0
  3017  02BC  01D4               	clrf	___awmod@sign
  3018  02BD                     l1810:
  3019  02BD  1FFC               	btfss	___awmod@dividend+1,7
  3020  02BE  2AC0               	goto	u1331
  3021  02BF  2AC1               	goto	u1330
  3022  02C0                     u1331:
  3023  02C0  2AC8               	goto	l1816
  3024  02C1                     u1330:
  3025  02C1                     l1812:
  3026  02C1  09FB               	comf	___awmod@dividend,f
  3027  02C2  09FC               	comf	___awmod@dividend+1,f
  3028  02C3  0AFB               	incf	___awmod@dividend,f
  3029  02C4  1903               	skipnz
  3030  02C5  0AFC               	incf	___awmod@dividend+1,f
  3031  02C6                     l1814:
  3032  02C6  01D4               	clrf	___awmod@sign
  3033  02C7  0AD4               	incf	___awmod@sign,f
  3034  02C8                     l1816:
  3035  02C8  1FFA               	btfss	___awmod@divisor+1,7
  3036  02C9  2ACB               	goto	u1341
  3037  02CA  2ACC               	goto	u1340
  3038  02CB                     u1341:
  3039  02CB  2AD1               	goto	l1820
  3040  02CC                     u1340:
  3041  02CC                     l1818:
  3042  02CC  09F9               	comf	___awmod@divisor,f
  3043  02CD  09FA               	comf	___awmod@divisor+1,f
  3044  02CE  0AF9               	incf	___awmod@divisor,f
  3045  02CF  1903               	skipnz
  3046  02D0  0AFA               	incf	___awmod@divisor+1,f
  3047  02D1                     l1820:
  3048  02D1  0879               	movf	___awmod@divisor,w
  3049  02D2  047A               	iorwf	___awmod@divisor+1,w
  3050  02D3  1903               	btfsc	3,2
  3051  02D4  2AD6               	goto	u1351
  3052  02D5  2AD7               	goto	u1350
  3053  02D6                     u1351:
  3054  02D6  2B06               	goto	l1838
  3055  02D7                     u1350:
  3056  02D7                     l1822:
  3057  02D7  01D3               	clrf	___awmod@counter
  3058  02D8  0AD3               	incf	___awmod@counter,f
  3059  02D9  2AE5               	goto	l1828
  3060  02DA                     l1824:
  3061  02DA  3001               	movlw	1
  3062  02DB                     u1365:
  3063  02DB  1003               	clrc
  3064  02DC  0DF9               	rlf	___awmod@divisor,f
  3065  02DD  0DFA               	rlf	___awmod@divisor+1,f
  3066  02DE  3EFF               	addlw	-1
  3067  02DF  1D03               	skipz
  3068  02E0  2ADB               	goto	u1365
  3069  02E1                     l1826:
  3070  02E1  3001               	movlw	1
  3071  02E2  00FD               	movwf	??___awmod
  3072  02E3  087D               	movf	??___awmod,w
  3073  02E4  07D3               	addwf	___awmod@counter,f
  3074  02E5                     l1828:
  3075  02E5  1FFA               	btfss	___awmod@divisor+1,7
  3076  02E6  2AE8               	goto	u1371
  3077  02E7  2AE9               	goto	u1370
  3078  02E8                     u1371:
  3079  02E8  2ADA               	goto	l1824
  3080  02E9                     u1370:
  3081  02E9                     l1830:
  3082  02E9  087A               	movf	___awmod@divisor+1,w
  3083  02EA  027C               	subwf	___awmod@dividend+1,w
  3084  02EB  1D03               	skipz
  3085  02EC  2AEF               	goto	u1385
  3086  02ED  0879               	movf	___awmod@divisor,w
  3087  02EE  027B               	subwf	___awmod@dividend,w
  3088  02EF                     u1385:
  3089  02EF  1C03               	skipc
  3090  02F0  2AF2               	goto	u1381
  3091  02F1  2AF3               	goto	u1380
  3092  02F2                     u1381:
  3093  02F2  2AF9               	goto	l1834
  3094  02F3                     u1380:
  3095  02F3                     l1832:
  3096  02F3  0879               	movf	___awmod@divisor,w
  3097  02F4  02FB               	subwf	___awmod@dividend,f
  3098  02F5  087A               	movf	___awmod@divisor+1,w
  3099  02F6  1C03               	skipc
  3100  02F7  03FC               	decf	___awmod@dividend+1,f
  3101  02F8  02FC               	subwf	___awmod@dividend+1,f
  3102  02F9                     l1834:
  3103  02F9  3001               	movlw	1
  3104  02FA                     u1395:
  3105  02FA  1003               	clrc
  3106  02FB  0CFA               	rrf	___awmod@divisor+1,f
  3107  02FC  0CF9               	rrf	___awmod@divisor,f
  3108  02FD  3EFF               	addlw	-1
  3109  02FE  1D03               	skipz
  3110  02FF  2AFA               	goto	u1395
  3111  0300                     l1836:
  3112  0300  3001               	movlw	1
  3113  0301  02D3               	subwf	___awmod@counter,f
  3114  0302  1D03               	btfss	3,2
  3115  0303  2B05               	goto	u1401
  3116  0304  2B06               	goto	u1400
  3117  0305                     u1401:
  3118  0305  2AE9               	goto	l1830
  3119  0306                     u1400:
  3120  0306                     l1838:
  3121  0306  0854               	movf	___awmod@sign,w
  3122  0307  1903               	btfsc	3,2
  3123  0308  2B0A               	goto	u1411
  3124  0309  2B0B               	goto	u1410
  3125  030A                     u1411:
  3126  030A  2B10               	goto	l1842
  3127  030B                     u1410:
  3128  030B                     l1840:
  3129  030B  09FB               	comf	___awmod@dividend,f
  3130  030C  09FC               	comf	___awmod@dividend+1,f
  3131  030D  0AFB               	incf	___awmod@dividend,f
  3132  030E  1903               	skipnz
  3133  030F  0AFC               	incf	___awmod@dividend+1,f
  3134  0310                     l1842:
  3135  0310  087C               	movf	___awmod@dividend+1,w
  3136  0311  00FA               	movwf	?___awmod+1
  3137  0312  087B               	movf	___awmod@dividend,w
  3138  0313  00F9               	movwf	?___awmod
  3139  0314                     l508:
  3140  0314  0008               	return
  3141  0315                     __end_of___awmod:
  3142                           
  3143                           	psect	text14
  3144  0315                     __ptext14:	
  3145 ;; *************** function ___awdiv *****************
  3146 ;; Defined at:
  3147 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  3148 ;; Parameters:    Size  Location     Type
  3149 ;;  divisor         2    0[COMMON] int 
  3150 ;;  dividend        2    2[COMMON] int 
  3151 ;; Auto vars:     Size  Location     Type
  3152 ;;  quotient        2    7[COMMON] int 
  3153 ;;  sign            1    6[COMMON] unsigned char 
  3154 ;;  counter         1    5[COMMON] unsigned char 
  3155 ;; Return value:  Size  Location     Type
  3156 ;;                  2    0[COMMON] int 
  3157 ;; Registers used:
  3158 ;;		wreg, status,2, status,0
  3159 ;; Tracked objects:
  3160 ;;		On entry : 0/0
  3161 ;;		On exit  : 0/0
  3162 ;;		Unchanged: 0/0
  3163 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3164 ;;      Params:         4       0       0       0       0
  3165 ;;      Locals:         4       0       0       0       0
  3166 ;;      Temps:          1       0       0       0       0
  3167 ;;      Totals:         9       0       0       0       0
  3168 ;;Total ram usage:        9 bytes
  3169 ;; Hardware stack levels used:    1
  3170 ;; This function calls:
  3171 ;;		Nothing
  3172 ;; This function is called by:
  3173 ;;		_main
  3174 ;; This function uses a non-reentrant model
  3175 ;;
  3176                           
  3177                           
  3178                           ;psect for function ___awdiv
  3179  0315                     ___awdiv:
  3180  0315                     l1764:	
  3181                           ;incstack = 0
  3182                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3183                           
  3184  0315  01F6               	clrf	___awdiv@sign
  3185  0316                     l1766:
  3186  0316  1FF1               	btfss	___awdiv@divisor+1,7
  3187  0317  2B19               	goto	u1231
  3188  0318  2B1A               	goto	u1230
  3189  0319                     u1231:
  3190  0319  2B21               	goto	l1772
  3191  031A                     u1230:
  3192  031A                     l1768:
  3193  031A  09F0               	comf	___awdiv@divisor,f
  3194  031B  09F1               	comf	___awdiv@divisor+1,f
  3195  031C  0AF0               	incf	___awdiv@divisor,f
  3196  031D  1903               	skipnz
  3197  031E  0AF1               	incf	___awdiv@divisor+1,f
  3198  031F                     l1770:
  3199  031F  01F6               	clrf	___awdiv@sign
  3200  0320  0AF6               	incf	___awdiv@sign,f
  3201  0321                     l1772:
  3202  0321  1FF3               	btfss	___awdiv@dividend+1,7
  3203  0322  2B24               	goto	u1241
  3204  0323  2B25               	goto	u1240
  3205  0324                     u1241:
  3206  0324  2B2E               	goto	l1778
  3207  0325                     u1240:
  3208  0325                     l1774:
  3209  0325  09F2               	comf	___awdiv@dividend,f
  3210  0326  09F3               	comf	___awdiv@dividend+1,f
  3211  0327  0AF2               	incf	___awdiv@dividend,f
  3212  0328  1903               	skipnz
  3213  0329  0AF3               	incf	___awdiv@dividend+1,f
  3214  032A                     l1776:
  3215  032A  3001               	movlw	1
  3216  032B  00F4               	movwf	??___awdiv
  3217  032C  0874               	movf	??___awdiv,w
  3218  032D  06F6               	xorwf	___awdiv@sign,f
  3219  032E                     l1778:
  3220  032E  01F7               	clrf	___awdiv@quotient
  3221  032F  01F8               	clrf	___awdiv@quotient+1
  3222  0330                     l1780:
  3223  0330  0870               	movf	___awdiv@divisor,w
  3224  0331  0471               	iorwf	___awdiv@divisor+1,w
  3225  0332  1903               	btfsc	3,2
  3226  0333  2B35               	goto	u1251
  3227  0334  2B36               	goto	u1250
  3228  0335                     u1251:
  3229  0335  2B6D               	goto	l1800
  3230  0336                     u1250:
  3231  0336                     l1782:
  3232  0336  01F5               	clrf	___awdiv@counter
  3233  0337  0AF5               	incf	___awdiv@counter,f
  3234  0338  2B44               	goto	l1788
  3235  0339                     l1784:
  3236  0339  3001               	movlw	1
  3237  033A                     u1265:
  3238  033A  1003               	clrc
  3239  033B  0DF0               	rlf	___awdiv@divisor,f
  3240  033C  0DF1               	rlf	___awdiv@divisor+1,f
  3241  033D  3EFF               	addlw	-1
  3242  033E  1D03               	skipz
  3243  033F  2B3A               	goto	u1265
  3244  0340                     l1786:
  3245  0340  3001               	movlw	1
  3246  0341  00F4               	movwf	??___awdiv
  3247  0342  0874               	movf	??___awdiv,w
  3248  0343  07F5               	addwf	___awdiv@counter,f
  3249  0344                     l1788:
  3250  0344  1FF1               	btfss	___awdiv@divisor+1,7
  3251  0345  2B47               	goto	u1271
  3252  0346  2B48               	goto	u1270
  3253  0347                     u1271:
  3254  0347  2B39               	goto	l1784
  3255  0348                     u1270:
  3256  0348                     l1790:
  3257  0348  3001               	movlw	1
  3258  0349                     u1285:
  3259  0349  1003               	clrc
  3260  034A  0DF7               	rlf	___awdiv@quotient,f
  3261  034B  0DF8               	rlf	___awdiv@quotient+1,f
  3262  034C  3EFF               	addlw	-1
  3263  034D  1D03               	skipz
  3264  034E  2B49               	goto	u1285
  3265  034F  0871               	movf	___awdiv@divisor+1,w
  3266  0350  0273               	subwf	___awdiv@dividend+1,w
  3267  0351  1D03               	skipz
  3268  0352  2B55               	goto	u1295
  3269  0353  0870               	movf	___awdiv@divisor,w
  3270  0354  0272               	subwf	___awdiv@dividend,w
  3271  0355                     u1295:
  3272  0355  1C03               	skipc
  3273  0356  2B58               	goto	u1291
  3274  0357  2B59               	goto	u1290
  3275  0358                     u1291:
  3276  0358  2B60               	goto	l1796
  3277  0359                     u1290:
  3278  0359                     l1792:
  3279  0359  0870               	movf	___awdiv@divisor,w
  3280  035A  02F2               	subwf	___awdiv@dividend,f
  3281  035B  0871               	movf	___awdiv@divisor+1,w
  3282  035C  1C03               	skipc
  3283  035D  03F3               	decf	___awdiv@dividend+1,f
  3284  035E  02F3               	subwf	___awdiv@dividend+1,f
  3285  035F                     l1794:
  3286  035F  1477               	bsf	___awdiv@quotient,0
  3287  0360                     l1796:
  3288  0360  3001               	movlw	1
  3289  0361                     u1305:
  3290  0361  1003               	clrc
  3291  0362  0CF1               	rrf	___awdiv@divisor+1,f
  3292  0363  0CF0               	rrf	___awdiv@divisor,f
  3293  0364  3EFF               	addlw	-1
  3294  0365  1D03               	skipz
  3295  0366  2B61               	goto	u1305
  3296  0367                     l1798:
  3297  0367  3001               	movlw	1
  3298  0368  02F5               	subwf	___awdiv@counter,f
  3299  0369  1D03               	btfss	3,2
  3300  036A  2B6C               	goto	u1311
  3301  036B  2B6D               	goto	u1310
  3302  036C                     u1311:
  3303  036C  2B48               	goto	l1790
  3304  036D                     u1310:
  3305  036D                     l1800:
  3306  036D  0876               	movf	___awdiv@sign,w
  3307  036E  1903               	btfsc	3,2
  3308  036F  2B71               	goto	u1321
  3309  0370  2B72               	goto	u1320
  3310  0371                     u1321:
  3311  0371  2B77               	goto	l1804
  3312  0372                     u1320:
  3313  0372                     l1802:
  3314  0372  09F7               	comf	___awdiv@quotient,f
  3315  0373  09F8               	comf	___awdiv@quotient+1,f
  3316  0374  0AF7               	incf	___awdiv@quotient,f
  3317  0375  1903               	skipnz
  3318  0376  0AF8               	incf	___awdiv@quotient+1,f
  3319  0377                     l1804:
  3320  0377  0878               	movf	___awdiv@quotient+1,w
  3321  0378  00F1               	movwf	?___awdiv+1
  3322  0379  0877               	movf	___awdiv@quotient,w
  3323  037A  00F0               	movwf	?___awdiv
  3324  037B                     l495:
  3325  037B  0008               	return
  3326  037C                     __end_of___awdiv:
  3327                           
  3328                           	psect	text15
  3329  0153                     __ptext15:	
  3330 ;; *************** function _UART_sendString *****************
  3331 ;; Defined at:
  3332 ;;		line 47 in file "uart.c"
  3333 ;; Parameters:    Size  Location     Type
  3334 ;;  str             2    1[COMMON] PTR unsigned char 
  3335 ;;		 -> STR_8(2), STR_6(2), value(20), 
  3336 ;; Auto vars:     Size  Location     Type
  3337 ;;		None
  3338 ;; Return value:  Size  Location     Type
  3339 ;;                  1    wreg      void 
  3340 ;; Registers used:
  3341 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3342 ;; Tracked objects:
  3343 ;;		On entry : 0/0
  3344 ;;		On exit  : 0/0
  3345 ;;		Unchanged: 0/0
  3346 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3347 ;;      Params:         2       0       0       0       0
  3348 ;;      Locals:         0       0       0       0       0
  3349 ;;      Temps:          0       0       0       0       0
  3350 ;;      Totals:         2       0       0       0       0
  3351 ;;Total ram usage:        2 bytes
  3352 ;; Hardware stack levels used:    1
  3353 ;; Hardware stack levels required when called:    1
  3354 ;; This function calls:
  3355 ;;		_UART_sendChar
  3356 ;; This function is called by:
  3357 ;;		_main
  3358 ;; This function uses a non-reentrant model
  3359 ;;
  3360                           
  3361                           
  3362                           ;psect for function _UART_sendString
  3363  0153                     _UART_sendString:
  3364  0153                     l1748:	
  3365                           ;incstack = 0
  3366                           ; Regs used in _UART_sendString: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3367                           
  3368                           
  3369                           ;uart.c: 47: void UART_sendString(char* str);uart.c: 48: {;uart.c: 49:     while (*str)
  3370  0153  2968               	goto	l1754
  3371  0154                     l1750:
  3372                           
  3373                           ;uart.c: 50:     {;uart.c: 51:         UART_sendChar(*str++);
  3374  0154  0872               	movf	UART_sendString@str+1,w
  3375  0155  00FF               	movwf	btemp+1
  3376  0156  0871               	movf	UART_sendString@str,w
  3377  0157  0084               	movwf	4
  3378  0158  120A  118A  2003  120A  118A  	fcall	stringtab
  3379  015D  120A  158A  2798  120A  118A  	fcall	_UART_sendChar
  3380  0162                     l1752:
  3381  0162  3001               	movlw	1
  3382  0163  07F1               	addwf	UART_sendString@str,f
  3383  0164  1803               	skipnc
  3384  0165  0AF2               	incf	UART_sendString@str+1,f
  3385  0166  3000               	movlw	0
  3386  0167  07F2               	addwf	UART_sendString@str+1,f
  3387  0168                     l1754:
  3388                           
  3389                           ;uart.c: 49:     while (*str)
  3390  0168  0872               	movf	UART_sendString@str+1,w
  3391  0169  1283               	bcf	3,5	;RP0=0, select bank0
  3392  016A  1303               	bcf	3,6	;RP1=0, select bank0
  3393  016B  00FF               	movwf	btemp+1
  3394  016C  0871               	movf	UART_sendString@str,w
  3395  016D  0084               	movwf	4
  3396  016E  120A  118A  2003  120A  118A  	fcall	stringtab
  3397  0173  3A00               	xorlw	0
  3398  0174  1D03               	skipz
  3399  0175  2977               	goto	u1211
  3400  0176  2978               	goto	u1210
  3401  0177                     u1211:
  3402  0177  2954               	goto	l1750
  3403  0178                     u1210:
  3404  0178                     l222:
  3405  0178  0008               	return
  3406  0179                     __end_of_UART_sendString:
  3407                           
  3408                           	psect	text16
  3409  0F98                     __ptext16:	
  3410 ;; *************** function _UART_sendChar *****************
  3411 ;; Defined at:
  3412 ;;		line 32 in file "uart.c"
  3413 ;; Parameters:    Size  Location     Type
  3414 ;;  bt              1    wreg     unsigned char 
  3415 ;; Auto vars:     Size  Location     Type
  3416 ;;  bt              1    0[COMMON] unsigned char 
  3417 ;; Return value:  Size  Location     Type
  3418 ;;                  1    wreg      void 
  3419 ;; Registers used:
  3420 ;;		wreg
  3421 ;; Tracked objects:
  3422 ;;		On entry : 0/0
  3423 ;;		On exit  : 0/0
  3424 ;;		Unchanged: 0/0
  3425 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3426 ;;      Params:         0       0       0       0       0
  3427 ;;      Locals:         1       0       0       0       0
  3428 ;;      Temps:          0       0       0       0       0
  3429 ;;      Totals:         1       0       0       0       0
  3430 ;;Total ram usage:        1 bytes
  3431 ;; Hardware stack levels used:    1
  3432 ;; This function calls:
  3433 ;;		Nothing
  3434 ;; This function is called by:
  3435 ;;		_UART_sendString
  3436 ;; This function uses a non-reentrant model
  3437 ;;
  3438                           
  3439                           
  3440                           ;psect for function _UART_sendChar
  3441  0F98                     _UART_sendChar:
  3442                           
  3443                           ;incstack = 0
  3444                           ; Regs used in _UART_sendChar: [wreg]
  3445                           ;UART_sendChar@bt stored from wreg
  3446  0F98  00F0               	movwf	UART_sendChar@bt
  3447  0F99                     l1518:
  3448  0F99                     l206:	
  3449                           ;uart.c: 32: void UART_sendChar(char bt);uart.c: 33: {;uart.c: 34:     while (!TXIF);
  3450                           
  3451  0F99  1283               	bcf	3,5	;RP0=0, select bank0
  3452  0F9A  1303               	bcf	3,6	;RP1=0, select bank0
  3453  0F9B  1E0C               	btfss	12,4	;volatile
  3454  0F9C  2F9E               	goto	u801
  3455  0F9D  2F9F               	goto	u800
  3456  0F9E                     u801:
  3457  0F9E  2F99               	goto	l206
  3458  0F9F                     u800:
  3459  0F9F                     l1520:
  3460                           
  3461                           ;uart.c: 35:     TXREG = bt;
  3462  0F9F  0870               	movf	UART_sendChar@bt,w
  3463  0FA0  0099               	movwf	25	;volatile
  3464  0FA1                     l209:
  3465  0FA1  0008               	return
  3466  0FA2                     __end_of_UART_sendChar:
  3467                           
  3468                           	psect	text17
  3469  0179                     __ptext17:	
  3470 ;; *************** function _UART_init *****************
  3471 ;; Defined at:
  3472 ;;		line 11 in file "uart.c"
  3473 ;; Parameters:    Size  Location     Type
  3474 ;;  baudRate        4    6[BANK0 ] long 
  3475 ;; Auto vars:     Size  Location     Type
  3476 ;;		None
  3477 ;; Return value:  Size  Location     Type
  3478 ;;                  1    wreg      void 
  3479 ;; Registers used:
  3480 ;;		wreg, status,2, status,0, pclath, cstack
  3481 ;; Tracked objects:
  3482 ;;		On entry : 0/0
  3483 ;;		On exit  : 0/0
  3484 ;;		Unchanged: 0/0
  3485 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3486 ;;      Params:         0       4       0       0       0
  3487 ;;      Locals:         0       0       0       0       0
  3488 ;;      Temps:          0       0       0       0       0
  3489 ;;      Totals:         0       4       0       0       0
  3490 ;;Total ram usage:        4 bytes
  3491 ;; Hardware stack levels used:    1
  3492 ;; Hardware stack levels required when called:    1
  3493 ;; This function calls:
  3494 ;;		___aldiv
  3495 ;; This function is called by:
  3496 ;;		_main
  3497 ;; This function uses a non-reentrant model
  3498 ;;
  3499                           
  3500                           
  3501                           ;psect for function _UART_init
  3502  0179                     _UART_init:
  3503  0179                     l1624:	
  3504                           ;incstack = 0
  3505                           ; Regs used in _UART_init: [wreg+status,2+status,0+pclath+cstack]
  3506                           
  3507                           
  3508                           ;uart.c: 11: void UART_init(long baudRate);uart.c: 12: {;uart.c: 13:     TRISC6 = 0;
  3509  0179  1683               	bsf	3,5	;RP0=1, select bank1
  3510  017A  1303               	bcf	3,6	;RP1=0, select bank1
  3511  017B  1307               	bcf	7,6	;volatile
  3512                           
  3513                           ;uart.c: 14:     TRISC7 = 1;
  3514  017C  1787               	bsf	7,7	;volatile
  3515  017D                     l1626:
  3516                           
  3517                           ;uart.c: 17:     SPBRG = ((20000000 / 16) / baudRate) - 1;
  3518  017D  1283               	bcf	3,5	;RP0=0, select bank0
  3519  017E  1303               	bcf	3,6	;RP1=0, select bank0
  3520  017F  085C               	movf	UART_init@baudRate+3,w
  3521  0180  00F3               	movwf	___aldiv@divisor+3
  3522  0181  085B               	movf	UART_init@baudRate+2,w
  3523  0182  00F2               	movwf	___aldiv@divisor+2
  3524  0183  085A               	movf	UART_init@baudRate+1,w
  3525  0184  00F1               	movwf	___aldiv@divisor+1
  3526  0185  0859               	movf	UART_init@baudRate,w
  3527  0186  00F0               	movwf	___aldiv@divisor
  3528  0187  3000               	movlw	0
  3529  0188  00F7               	movwf	___aldiv@dividend+3
  3530  0189  3013               	movlw	19
  3531  018A  00F6               	movwf	___aldiv@dividend+2
  3532  018B  3012               	movlw	18
  3533  018C  00F5               	movwf	___aldiv@dividend+1
  3534  018D  30D0               	movlw	208
  3535  018E  00F4               	movwf	___aldiv@dividend
  3536  018F  120A  118A  2485  120A  118A  	fcall	___aldiv
  3537  0194  0870               	movf	?___aldiv,w
  3538  0195  3EFF               	addlw	255
  3539  0196  1683               	bsf	3,5	;RP0=1, select bank1
  3540  0197  1303               	bcf	3,6	;RP1=0, select bank1
  3541  0198  0099               	movwf	25	;volatile
  3542  0199                     l1628:
  3543                           
  3544                           ;uart.c: 18:     BRGH = 1;
  3545  0199  1518               	bsf	24,2	;volatile
  3546  019A                     l1630:
  3547                           
  3548                           ;uart.c: 21:     SYNC = 0;
  3549  019A  1218               	bcf	24,4	;volatile
  3550  019B                     l1632:
  3551                           
  3552                           ;uart.c: 22:     SPEN = 1;
  3553  019B  1283               	bcf	3,5	;RP0=0, select bank0
  3554  019C  1303               	bcf	3,6	;RP1=0, select bank0
  3555  019D  1798               	bsf	24,7	;volatile
  3556  019E                     l1634:
  3557                           
  3558                           ;uart.c: 25:     TXEN = 1;
  3559  019E  1683               	bsf	3,5	;RP0=1, select bank1
  3560  019F  1303               	bcf	3,6	;RP1=0, select bank1
  3561  01A0  1698               	bsf	24,5	;volatile
  3562  01A1                     l1636:
  3563                           
  3564                           ;uart.c: 26:     CREN = 1;
  3565  01A1  1283               	bcf	3,5	;RP0=0, select bank0
  3566  01A2  1303               	bcf	3,6	;RP1=0, select bank0
  3567  01A3  1618               	bsf	24,4	;volatile
  3568  01A4                     l1638:
  3569                           
  3570                           ;uart.c: 29:     TX9 = 0;
  3571  01A4  1683               	bsf	3,5	;RP0=1, select bank1
  3572  01A5  1303               	bcf	3,6	;RP1=0, select bank1
  3573  01A6  1318               	bcf	24,6	;volatile
  3574  01A7                     l1640:
  3575                           
  3576                           ;uart.c: 30:     RX9 = 0;
  3577  01A7  1283               	bcf	3,5	;RP0=0, select bank0
  3578  01A8  1303               	bcf	3,6	;RP1=0, select bank0
  3579  01A9  1318               	bcf	24,6	;volatile
  3580  01AA                     l203:
  3581  01AA  0008               	return
  3582  01AB                     __end_of_UART_init:
  3583                           
  3584                           	psect	text18
  3585  0485                     __ptext18:	
  3586 ;; *************** function ___aldiv *****************
  3587 ;; Defined at:
  3588 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\aldiv.c"
  3589 ;; Parameters:    Size  Location     Type
  3590 ;;  divisor         4    0[COMMON] long 
  3591 ;;  dividend        4    4[COMMON] long 
  3592 ;; Auto vars:     Size  Location     Type
  3593 ;;  quotient        4    2[BANK0 ] long 
  3594 ;;  sign            1    1[BANK0 ] unsigned char 
  3595 ;;  counter         1    0[BANK0 ] unsigned char 
  3596 ;; Return value:  Size  Location     Type
  3597 ;;                  4    0[COMMON] long 
  3598 ;; Registers used:
  3599 ;;		wreg, status,2, status,0
  3600 ;; Tracked objects:
  3601 ;;		On entry : 0/0
  3602 ;;		On exit  : 0/0
  3603 ;;		Unchanged: 0/0
  3604 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3605 ;;      Params:         8       0       0       0       0
  3606 ;;      Locals:         0       6       0       0       0
  3607 ;;      Temps:          1       0       0       0       0
  3608 ;;      Totals:         9       6       0       0       0
  3609 ;;Total ram usage:       15 bytes
  3610 ;; Hardware stack levels used:    1
  3611 ;; This function calls:
  3612 ;;		Nothing
  3613 ;; This function is called by:
  3614 ;;		_UART_init
  3615 ;; This function uses a non-reentrant model
  3616 ;;
  3617                           
  3618                           
  3619                           ;psect for function ___aldiv
  3620  0485                     ___aldiv:
  3621  0485                     l1530:	
  3622                           ;incstack = 0
  3623                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  3624                           
  3625  0485  1283               	bcf	3,5	;RP0=0, select bank0
  3626  0486  1303               	bcf	3,6	;RP1=0, select bank0
  3627  0487  01D4               	clrf	___aldiv@sign
  3628  0488                     l1532:
  3629  0488  1FF3               	btfss	___aldiv@divisor+3,7
  3630  0489  2C8B               	goto	u831
  3631  048A  2C8C               	goto	u830
  3632  048B                     u831:
  3633  048B  2C99               	goto	l407
  3634  048C                     u830:
  3635  048C                     l1534:
  3636  048C  09F0               	comf	___aldiv@divisor,f
  3637  048D  09F1               	comf	___aldiv@divisor+1,f
  3638  048E  09F2               	comf	___aldiv@divisor+2,f
  3639  048F  09F3               	comf	___aldiv@divisor+3,f
  3640  0490  0AF0               	incf	___aldiv@divisor,f
  3641  0491  1903               	skipnz
  3642  0492  0AF1               	incf	___aldiv@divisor+1,f
  3643  0493  1903               	skipnz
  3644  0494  0AF2               	incf	___aldiv@divisor+2,f
  3645  0495  1903               	skipnz
  3646  0496  0AF3               	incf	___aldiv@divisor+3,f
  3647  0497  01D4               	clrf	___aldiv@sign
  3648  0498  0AD4               	incf	___aldiv@sign,f
  3649  0499                     l407:
  3650  0499  1FF7               	btfss	___aldiv@dividend+3,7
  3651  049A  2C9C               	goto	u841
  3652  049B  2C9D               	goto	u840
  3653  049C                     u841:
  3654  049C  2CAC               	goto	l1540
  3655  049D                     u840:
  3656  049D                     l1536:
  3657  049D  09F4               	comf	___aldiv@dividend,f
  3658  049E  09F5               	comf	___aldiv@dividend+1,f
  3659  049F  09F6               	comf	___aldiv@dividend+2,f
  3660  04A0  09F7               	comf	___aldiv@dividend+3,f
  3661  04A1  0AF4               	incf	___aldiv@dividend,f
  3662  04A2  1903               	skipnz
  3663  04A3  0AF5               	incf	___aldiv@dividend+1,f
  3664  04A4  1903               	skipnz
  3665  04A5  0AF6               	incf	___aldiv@dividend+2,f
  3666  04A6  1903               	skipnz
  3667  04A7  0AF7               	incf	___aldiv@dividend+3,f
  3668  04A8                     l1538:
  3669  04A8  3001               	movlw	1
  3670  04A9  00F8               	movwf	??___aldiv
  3671  04AA  0878               	movf	??___aldiv,w
  3672  04AB  06D4               	xorwf	___aldiv@sign,f
  3673  04AC                     l1540:
  3674  04AC  3000               	movlw	0
  3675  04AD  00D8               	movwf	___aldiv@quotient+3
  3676  04AE  3000               	movlw	0
  3677  04AF  00D7               	movwf	___aldiv@quotient+2
  3678  04B0  3000               	movlw	0
  3679  04B1  00D6               	movwf	___aldiv@quotient+1
  3680  04B2  3000               	movlw	0
  3681  04B3  00D5               	movwf	___aldiv@quotient
  3682  04B4                     l1542:
  3683  04B4  0873               	movf	___aldiv@divisor+3,w
  3684  04B5  0472               	iorwf	___aldiv@divisor+2,w
  3685  04B6  0471               	iorwf	___aldiv@divisor+1,w
  3686  04B7  0470               	iorwf	___aldiv@divisor,w
  3687  04B8  1903               	skipnz
  3688  04B9  2CBB               	goto	u851
  3689  04BA  2CBC               	goto	u850
  3690  04BB                     u851:
  3691  04BB  2D09               	goto	l1562
  3692  04BC                     u850:
  3693  04BC                     l1544:
  3694  04BC  01D3               	clrf	___aldiv@counter
  3695  04BD  0AD3               	incf	___aldiv@counter,f
  3696  04BE  2CCC               	goto	l1548
  3697  04BF                     l1546:
  3698  04BF  3001               	movlw	1
  3699  04C0  00F8               	movwf	??___aldiv
  3700  04C1                     u865:
  3701  04C1  1003               	clrc
  3702  04C2  0DF0               	rlf	___aldiv@divisor,f
  3703  04C3  0DF1               	rlf	___aldiv@divisor+1,f
  3704  04C4  0DF2               	rlf	___aldiv@divisor+2,f
  3705  04C5  0DF3               	rlf	___aldiv@divisor+3,f
  3706  04C6  0BF8               	decfsz	??___aldiv,f
  3707  04C7  2CC1               	goto	u865
  3708  04C8  3001               	movlw	1
  3709  04C9  00F8               	movwf	??___aldiv
  3710  04CA  0878               	movf	??___aldiv,w
  3711  04CB  07D3               	addwf	___aldiv@counter,f
  3712  04CC                     l1548:
  3713  04CC  1FF3               	btfss	___aldiv@divisor+3,7
  3714  04CD  2CCF               	goto	u871
  3715  04CE  2CD0               	goto	u870
  3716  04CF                     u871:
  3717  04CF  2CBF               	goto	l1546
  3718  04D0                     u870:
  3719  04D0                     l1550:
  3720  04D0  3001               	movlw	1
  3721  04D1  00F8               	movwf	??___aldiv
  3722  04D2                     u885:
  3723  04D2  1003               	clrc
  3724  04D3  0DD5               	rlf	___aldiv@quotient,f
  3725  04D4  0DD6               	rlf	___aldiv@quotient+1,f
  3726  04D5  0DD7               	rlf	___aldiv@quotient+2,f
  3727  04D6  0DD8               	rlf	___aldiv@quotient+3,f
  3728  04D7  0BF8               	decfsz	??___aldiv,f
  3729  04D8  2CD2               	goto	u885
  3730  04D9                     l1552:
  3731  04D9  0873               	movf	___aldiv@divisor+3,w
  3732  04DA  0277               	subwf	___aldiv@dividend+3,w
  3733  04DB  1D03               	skipz
  3734  04DC  2CE7               	goto	u895
  3735  04DD  0872               	movf	___aldiv@divisor+2,w
  3736  04DE  0276               	subwf	___aldiv@dividend+2,w
  3737  04DF  1D03               	skipz
  3738  04E0  2CE7               	goto	u895
  3739  04E1  0871               	movf	___aldiv@divisor+1,w
  3740  04E2  0275               	subwf	___aldiv@dividend+1,w
  3741  04E3  1D03               	skipz
  3742  04E4  2CE7               	goto	u895
  3743  04E5  0870               	movf	___aldiv@divisor,w
  3744  04E6  0274               	subwf	___aldiv@dividend,w
  3745  04E7                     u895:
  3746  04E7  1C03               	skipc
  3747  04E8  2CEA               	goto	u891
  3748  04E9  2CEB               	goto	u890
  3749  04EA                     u891:
  3750  04EA  2CFA               	goto	l1558
  3751  04EB                     u890:
  3752  04EB                     l1554:
  3753  04EB  0870               	movf	___aldiv@divisor,w
  3754  04EC  02F4               	subwf	___aldiv@dividend,f
  3755  04ED  0871               	movf	___aldiv@divisor+1,w
  3756  04EE  1C03               	skipc
  3757  04EF  0F71               	incfsz	___aldiv@divisor+1,w
  3758  04F0  02F5               	subwf	___aldiv@dividend+1,f
  3759  04F1  0872               	movf	___aldiv@divisor+2,w
  3760  04F2  1C03               	skipc
  3761  04F3  0F72               	incfsz	___aldiv@divisor+2,w
  3762  04F4  02F6               	subwf	___aldiv@dividend+2,f
  3763  04F5  0873               	movf	___aldiv@divisor+3,w
  3764  04F6  1C03               	skipc
  3765  04F7  0F73               	incfsz	___aldiv@divisor+3,w
  3766  04F8  02F7               	subwf	___aldiv@dividend+3,f
  3767  04F9                     l1556:
  3768  04F9  1455               	bsf	___aldiv@quotient,0
  3769  04FA                     l1558:
  3770  04FA  3001               	movlw	1
  3771  04FB                     u905:
  3772  04FB  1003               	clrc
  3773  04FC  0CF3               	rrf	___aldiv@divisor+3,f
  3774  04FD  0CF2               	rrf	___aldiv@divisor+2,f
  3775  04FE  0CF1               	rrf	___aldiv@divisor+1,f
  3776  04FF  0CF0               	rrf	___aldiv@divisor,f
  3777  0500  3EFF               	addlw	-1
  3778  0501  1D03               	skipz
  3779  0502  2CFB               	goto	u905
  3780  0503                     l1560:
  3781  0503  3001               	movlw	1
  3782  0504  02D3               	subwf	___aldiv@counter,f
  3783  0505  1D03               	btfss	3,2
  3784  0506  2D08               	goto	u911
  3785  0507  2D09               	goto	u910
  3786  0508                     u911:
  3787  0508  2CD0               	goto	l1550
  3788  0509                     u910:
  3789  0509                     l1562:
  3790  0509  0854               	movf	___aldiv@sign,w
  3791  050A  1903               	btfsc	3,2
  3792  050B  2D0D               	goto	u921
  3793  050C  2D0E               	goto	u920
  3794  050D                     u921:
  3795  050D  2D19               	goto	l1566
  3796  050E                     u920:
  3797  050E                     l1564:
  3798  050E  09D5               	comf	___aldiv@quotient,f
  3799  050F  09D6               	comf	___aldiv@quotient+1,f
  3800  0510  09D7               	comf	___aldiv@quotient+2,f
  3801  0511  09D8               	comf	___aldiv@quotient+3,f
  3802  0512  0AD5               	incf	___aldiv@quotient,f
  3803  0513  1903               	skipnz
  3804  0514  0AD6               	incf	___aldiv@quotient+1,f
  3805  0515  1903               	skipnz
  3806  0516  0AD7               	incf	___aldiv@quotient+2,f
  3807  0517  1903               	skipnz
  3808  0518  0AD8               	incf	___aldiv@quotient+3,f
  3809  0519                     l1566:
  3810  0519  0858               	movf	___aldiv@quotient+3,w
  3811  051A  00F3               	movwf	?___aldiv+3
  3812  051B  0857               	movf	___aldiv@quotient+2,w
  3813  051C  00F2               	movwf	?___aldiv+2
  3814  051D  0856               	movf	___aldiv@quotient+1,w
  3815  051E  00F1               	movwf	?___aldiv+1
  3816  051F  0855               	movf	___aldiv@quotient,w
  3817  0520  00F0               	movwf	?___aldiv
  3818  0521                     l417:
  3819  0521  0008               	return
  3820  0522                     __end_of___aldiv:
  3821                           
  3822                           	psect	text19
  3823  010B                     __ptext19:	
  3824 ;; *************** function _UART_getString *****************
  3825 ;; Defined at:
  3826 ;;		line 55 in file "uart.c"
  3827 ;; Parameters:    Size  Location     Type
  3828 ;;  buf             1    wreg     PTR unsigned char 
  3829 ;;		 -> buffer(20), 
  3830 ;;  length          2    0[COMMON] unsigned int 
  3831 ;; Auto vars:     Size  Location     Type
  3832 ;;  buf             1    4[COMMON] PTR unsigned char 
  3833 ;;		 -> buffer(20), 
  3834 ;;  i               2    5[COMMON] unsigned int 
  3835 ;; Return value:  Size  Location     Type
  3836 ;;                  1    wreg      void 
  3837 ;; Registers used:
  3838 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3839 ;; Tracked objects:
  3840 ;;		On entry : 0/0
  3841 ;;		On exit  : 0/0
  3842 ;;		Unchanged: 0/0
  3843 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3844 ;;      Params:         2       0       0       0       0
  3845 ;;      Locals:         3       0       0       0       0
  3846 ;;      Temps:          2       0       0       0       0
  3847 ;;      Totals:         7       0       0       0       0
  3848 ;;Total ram usage:        7 bytes
  3849 ;; Hardware stack levels used:    1
  3850 ;; Hardware stack levels required when called:    1
  3851 ;; This function calls:
  3852 ;;		_UART_getChar
  3853 ;; This function is called by:
  3854 ;;		_main
  3855 ;; This function uses a non-reentrant model
  3856 ;;
  3857                           
  3858                           
  3859                           ;psect for function _UART_getString
  3860  010B                     _UART_getString:
  3861                           
  3862                           ;incstack = 0
  3863                           ; Regs used in _UART_getString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3864                           ;UART_getString@buf stored from wreg
  3865  010B  00F4               	movwf	UART_getString@buf
  3866  010C                     l1756:
  3867                           
  3868                           ;uart.c: 55: void UART_getString(char *buf, unsigned int length);uart.c: 56: {;uart.c: 5
      +                          7:     for(unsigned int i = 0; i < length; i++)
  3869  010C  01F5               	clrf	UART_getString@i
  3870  010D  01F6               	clrf	UART_getString@i+1
  3871  010E  2923               	goto	l1762
  3872  010F                     l1758:
  3873                           
  3874                           ;uart.c: 58:     {;uart.c: 59:         buf[i] = UART_getChar();
  3875  010F  120A  158A  27AE  120A  118A  	fcall	_UART_getChar
  3876  0114  00F2               	movwf	??_UART_getString
  3877  0115  0875               	movf	UART_getString@i,w
  3878  0116  0774               	addwf	UART_getString@buf,w
  3879  0117  00F3               	movwf	??_UART_getString+1
  3880  0118  0873               	movf	??_UART_getString+1,w
  3881  0119  0084               	movwf	4
  3882  011A  0872               	movf	??_UART_getString,w
  3883  011B  1383               	bcf	3,7	;select IRP bank0
  3884  011C  0080               	movwf	0
  3885  011D                     l1760:
  3886                           
  3887                           ;uart.c: 60:     }
  3888  011D  3001               	movlw	1
  3889  011E  07F5               	addwf	UART_getString@i,f
  3890  011F  1803               	skipnc
  3891  0120  0AF6               	incf	UART_getString@i+1,f
  3892  0121  3000               	movlw	0
  3893  0122  07F6               	addwf	UART_getString@i+1,f
  3894  0123                     l1762:
  3895  0123  0871               	movf	UART_getString@length+1,w
  3896  0124  0276               	subwf	UART_getString@i+1,w
  3897  0125  1D03               	skipz
  3898  0126  2929               	goto	u1225
  3899  0127  0870               	movf	UART_getString@length,w
  3900  0128  0275               	subwf	UART_getString@i,w
  3901  0129                     u1225:
  3902  0129  1C03               	skipc
  3903  012A  292C               	goto	u1221
  3904  012B  292D               	goto	u1220
  3905  012C                     u1221:
  3906  012C  290F               	goto	l1758
  3907  012D                     u1220:
  3908  012D                     l228:
  3909  012D  0008               	return
  3910  012E                     __end_of_UART_getString:
  3911                           
  3912                           	psect	text20
  3913  0FAE                     __ptext20:	
  3914 ;; *************** function _UART_getChar *****************
  3915 ;; Defined at:
  3916 ;;		line 37 in file "uart.c"
  3917 ;; Parameters:    Size  Location     Type
  3918 ;;		None
  3919 ;; Auto vars:     Size  Location     Type
  3920 ;;		None
  3921 ;; Return value:  Size  Location     Type
  3922 ;;                  1    wreg      unsigned char 
  3923 ;; Registers used:
  3924 ;;		wreg
  3925 ;; Tracked objects:
  3926 ;;		On entry : 0/0
  3927 ;;		On exit  : 0/0
  3928 ;;		Unchanged: 0/0
  3929 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3930 ;;      Params:         0       0       0       0       0
  3931 ;;      Locals:         0       0       0       0       0
  3932 ;;      Temps:          0       0       0       0       0
  3933 ;;      Totals:         0       0       0       0       0
  3934 ;;Total ram usage:        0 bytes
  3935 ;; Hardware stack levels used:    1
  3936 ;; This function calls:
  3937 ;;		Nothing
  3938 ;; This function is called by:
  3939 ;;		_UART_getString
  3940 ;; This function uses a non-reentrant model
  3941 ;;
  3942                           
  3943                           
  3944                           ;psect for function _UART_getChar
  3945  0FAE                     _UART_getChar:
  3946  0FAE                     l1522:	
  3947                           ;incstack = 0
  3948                           ; Regs used in _UART_getChar: [wreg]
  3949                           
  3950                           
  3951                           ;uart.c: 39:     if (OERR)
  3952  0FAE  1283               	bcf	3,5	;RP0=0, select bank0
  3953  0FAF  1303               	bcf	3,6	;RP1=0, select bank0
  3954  0FB0  1C98               	btfss	24,1	;volatile
  3955  0FB1  2FB3               	goto	u811
  3956  0FB2  2FB4               	goto	u810
  3957  0FB3                     u811:
  3958  0FB3  2FB6               	goto	l213
  3959  0FB4                     u810:
  3960  0FB4                     l1524:
  3961                           
  3962                           ;uart.c: 40:     {;uart.c: 41:         CREN = 0;
  3963  0FB4  1218               	bcf	24,4	;volatile
  3964                           
  3965                           ;uart.c: 42:         CREN = 1;
  3966  0FB5  1618               	bsf	24,4	;volatile
  3967  0FB6                     l213:
  3968  0FB6  1E8C               	btfss	12,5	;volatile
  3969  0FB7  2FB9               	goto	u821
  3970  0FB8  2FBA               	goto	u820
  3971  0FB9                     u821:
  3972  0FB9  2FB6               	goto	l213
  3973  0FBA                     u820:
  3974  0FBA                     l1526:
  3975                           
  3976                           ;uart.c: 45:     return RCREG;
  3977  0FBA  081A               	movf	26,w	;volatile
  3978  0FBB                     l216:
  3979  0FBB  0008               	return
  3980  0FBC                     __end_of_UART_getChar:
  3981                           
  3982                           	psect	text21
  3983  01E5                     __ptext21:	
  3984 ;; *************** function _DHT11_read *****************
  3985 ;; Defined at:
  3986 ;;		line 134 in file "main.c"
  3987 ;; Parameters:    Size  Location     Type
  3988 ;;		None
  3989 ;; Auto vars:     Size  Location     Type
  3990 ;;  for_count       1    3[COMMON] unsigned char 
  3991 ;;  data            1    2[COMMON] unsigned char 
  3992 ;; Return value:  Size  Location     Type
  3993 ;;                  1    wreg      unsigned char 
  3994 ;; Registers used:
  3995 ;;		wreg, status,2, status,0
  3996 ;; Tracked objects:
  3997 ;;		On entry : 0/0
  3998 ;;		On exit  : 0/0
  3999 ;;		Unchanged: 0/0
  4000 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4001 ;;      Params:         0       0       0       0       0
  4002 ;;      Locals:         2       0       0       0       0
  4003 ;;      Temps:          2       0       0       0       0
  4004 ;;      Totals:         4       0       0       0       0
  4005 ;;Total ram usage:        4 bytes
  4006 ;; Hardware stack levels used:    1
  4007 ;; This function calls:
  4008 ;;		Nothing
  4009 ;; This function is called by:
  4010 ;;		_main
  4011 ;; This function uses a non-reentrant model
  4012 ;;
  4013                           
  4014                           
  4015                           ;psect for function _DHT11_read
  4016  01E5                     _DHT11_read:
  4017  01E5                     l1664:	
  4018                           ;incstack = 0
  4019                           ; Regs used in _DHT11_read: [wreg+status,2+status,0]
  4020                           
  4021                           
  4022                           ;main.c: 135:     char data, for_count;;main.c: 136:     for (for_count = 0; for_count <
      +                           8; for_count++) {
  4023  01E5  01F3               	clrf	DHT11_read@for_count
  4024  01E6                     l86:
  4025  01E6  1283               	bcf	3,5	;RP0=0, select bank0
  4026  01E7  1303               	bcf	3,6	;RP1=0, select bank0
  4027  01E8  1E88               	btfss	8,5	;volatile
  4028  01E9  29EB               	goto	u1081
  4029  01EA  29EC               	goto	u1080
  4030  01EB                     u1081:
  4031  01EB  29E6               	goto	l86
  4032  01EC                     u1080:
  4033  01EC                     l1670:
  4034                           
  4035                           ;main.c: 138:         _delay((unsigned long)((30)*(20000000/4000000.0)));
  4036  01EC  3031               	movlw	49
  4037  01ED  00F0               	movwf	??_DHT11_read
  4038  01EE                     u1577:
  4039  01EE  0BF0               	decfsz	??_DHT11_read,f
  4040  01EF  29EE               	goto	u1577
  4041  01F0  29F1               	nop2
  4042  01F1                     l1672:
  4043                           
  4044                           ;main.c: 139:         if (PORTDbits.RD5 == 0) {
  4045  01F1  1283               	bcf	3,5	;RP0=0, select bank0
  4046  01F2  1303               	bcf	3,6	;RP1=0, select bank0
  4047  01F3  1A88               	btfsc	8,5	;volatile
  4048  01F4  29F6               	goto	u1091
  4049  01F5  29F7               	goto	u1090
  4050  01F6                     u1091:
  4051  01F6  2A08               	goto	l1676
  4052  01F7                     u1090:
  4053  01F7                     l1674:
  4054                           
  4055                           ;main.c: 140:             data &= ~(1 << (7 - for_count));
  4056  01F7  3001               	movlw	1
  4057  01F8  00F0               	movwf	??_DHT11_read
  4058  01F9  0873               	movf	DHT11_read@for_count,w
  4059  01FA  3C07               	sublw	7
  4060  01FB  3E01               	addlw	1
  4061  01FC  29FF               	goto	u1104
  4062  01FD                     u1105:
  4063  01FD  1003               	clrc
  4064  01FE  0DF0               	rlf	??_DHT11_read,f
  4065  01FF                     u1104:
  4066  01FF  3EFF               	addlw	-1
  4067  0200  1D03               	skipz
  4068  0201  29FD               	goto	u1105
  4069  0202  0870               	movf	??_DHT11_read,w
  4070  0203  3AFF               	xorlw	255
  4071  0204  00F1               	movwf	??_DHT11_read+1
  4072  0205  0871               	movf	??_DHT11_read+1,w
  4073  0206  05F2               	andwf	DHT11_read@data,f
  4074                           
  4075                           ;main.c: 141:         }
  4076  0207  2A1B               	goto	l1678
  4077  0208                     l1676:
  4078                           
  4079                           ;main.c: 143:             data |= (1 << (7 - for_count));
  4080  0208  3001               	movlw	1
  4081  0209  00F0               	movwf	??_DHT11_read
  4082  020A  0873               	movf	DHT11_read@for_count,w
  4083  020B  3C07               	sublw	7
  4084  020C  3E01               	addlw	1
  4085  020D  2A10               	goto	u1114
  4086  020E                     u1115:
  4087  020E  1003               	clrc
  4088  020F  0DF0               	rlf	??_DHT11_read,f
  4089  0210                     u1114:
  4090  0210  3EFF               	addlw	-1
  4091  0211  1D03               	skipz
  4092  0212  2A0E               	goto	u1115
  4093  0213  0870               	movf	??_DHT11_read,w
  4094  0214  00F1               	movwf	??_DHT11_read+1
  4095  0215  0871               	movf	??_DHT11_read+1,w
  4096  0216  04F2               	iorwf	DHT11_read@data,f
  4097  0217                     l91:	
  4098                           ;main.c: 144:             while (PORTDbits.RD5);
  4099                           
  4100  0217  1A88               	btfsc	8,5	;volatile
  4101  0218  2A1A               	goto	u1121
  4102  0219  2A1B               	goto	u1120
  4103  021A                     u1121:
  4104  021A  2A17               	goto	l91
  4105  021B                     u1120:
  4106  021B                     l1678:
  4107                           
  4108                           ;main.c: 146:     }
  4109  021B  3001               	movlw	1
  4110  021C  00F0               	movwf	??_DHT11_read
  4111  021D  0870               	movf	??_DHT11_read,w
  4112  021E  07F3               	addwf	DHT11_read@for_count,f
  4113  021F                     l1680:
  4114  021F  3008               	movlw	8
  4115  0220  0273               	subwf	DHT11_read@for_count,w
  4116  0221  1C03               	skipc
  4117  0222  2A24               	goto	u1131
  4118  0223  2A25               	goto	u1130
  4119  0224                     u1131:
  4120  0224  29E6               	goto	l86
  4121  0225                     u1130:
  4122  0225                     l1682:
  4123                           
  4124                           ;main.c: 147:     return data;
  4125  0225  0872               	movf	DHT11_read@data,w
  4126  0226                     l94:
  4127  0226  0008               	return
  4128  0227                     __end_of_DHT11_read:
  4129                           
  4130                           	psect	text22
  4131  00D2                     __ptext22:	
  4132 ;; *************** function _DHT11_init *****************
  4133 ;; Defined at:
  4134 ;;		line 113 in file "main.c"
  4135 ;; Parameters:    Size  Location     Type
  4136 ;;		None
  4137 ;; Auto vars:     Size  Location     Type
  4138 ;;		None
  4139 ;; Return value:  Size  Location     Type
  4140 ;;                  1    wreg      void 
  4141 ;; Registers used:
  4142 ;;		wreg
  4143 ;; Tracked objects:
  4144 ;;		On entry : 0/0
  4145 ;;		On exit  : 0/0
  4146 ;;		Unchanged: 0/0
  4147 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4148 ;;      Params:         0       0       0       0       0
  4149 ;;      Locals:         0       0       0       0       0
  4150 ;;      Temps:          2       0       0       0       0
  4151 ;;      Totals:         2       0       0       0       0
  4152 ;;Total ram usage:        2 bytes
  4153 ;; Hardware stack levels used:    1
  4154 ;; This function calls:
  4155 ;;		Nothing
  4156 ;; This function is called by:
  4157 ;;		_main
  4158 ;; This function uses a non-reentrant model
  4159 ;;
  4160                           
  4161                           
  4162                           ;psect for function _DHT11_init
  4163  00D2                     _DHT11_init:
  4164  00D2                     l1642:	
  4165                           ;incstack = 0
  4166                           ; Regs used in _DHT11_init: [wreg]
  4167                           
  4168                           
  4169                           ;main.c: 114:     TRISDbits.TRISD5 = 0;
  4170  00D2  1683               	bsf	3,5	;RP0=1, select bank1
  4171  00D3  1303               	bcf	3,6	;RP1=0, select bank1
  4172  00D4  1288               	bcf	8,5	;volatile
  4173                           
  4174                           ;main.c: 115:     PORTDbits.RD5 = 0;
  4175  00D5  1283               	bcf	3,5	;RP0=0, select bank0
  4176  00D6  1303               	bcf	3,6	;RP1=0, select bank0
  4177  00D7  1288               	bcf	8,5	;volatile
  4178  00D8                     l1644:
  4179                           
  4180                           ;main.c: 116:     _delay((unsigned long)((18)*(20000000/4000.0)));
  4181  00D8  3075               	movlw	117
  4182  00D9  00F1               	movwf	??_DHT11_init+1
  4183  00DA  30E1               	movlw	225
  4184  00DB  00F0               	movwf	??_DHT11_init
  4185  00DC                     u1587:
  4186  00DC  0BF0               	decfsz	??_DHT11_init,f
  4187  00DD  28DC               	goto	u1587
  4188  00DE  0BF1               	decfsz	??_DHT11_init+1,f
  4189  00DF  28DC               	goto	u1587
  4190  00E0                     l1646:
  4191                           
  4192                           ;main.c: 117:     PORTDbits.RD5 = 1;
  4193  00E0  1283               	bcf	3,5	;RP0=0, select bank0
  4194  00E1  1303               	bcf	3,6	;RP1=0, select bank0
  4195  00E2  1688               	bsf	8,5	;volatile
  4196                           
  4197                           ;main.c: 118:     _delay((unsigned long)((30)*(20000000/4000000.0)));
  4198  00E3  3031               	movlw	49
  4199  00E4  00F0               	movwf	??_DHT11_init
  4200  00E5                     u1597:
  4201  00E5  0BF0               	decfsz	??_DHT11_init,f
  4202  00E6  28E5               	goto	u1597
  4203  00E7  28E8               	nop2
  4204  00E8                     l1648:
  4205                           
  4206                           ;main.c: 119:     TRISDbits.TRISD5 = 1;
  4207  00E8  1683               	bsf	3,5	;RP0=1, select bank1
  4208  00E9  1303               	bcf	3,6	;RP1=0, select bank1
  4209  00EA  1688               	bsf	8,5	;volatile
  4210  00EB                     l76:
  4211  00EB  0008               	return
  4212  00EC                     __end_of_DHT11_init:
  4213                           
  4214                           	psect	text23
  4215  00EC                     __ptext23:	
  4216 ;; *************** function _DHT11_checkResponse *****************
  4217 ;; Defined at:
  4218 ;;		line 122 in file "main.c"
  4219 ;; Parameters:    Size  Location     Type
  4220 ;;		None
  4221 ;; Auto vars:     Size  Location     Type
  4222 ;;		None
  4223 ;; Return value:  Size  Location     Type
  4224 ;;                  1    wreg      void 
  4225 ;; Registers used:
  4226 ;;		wreg, status,2
  4227 ;; Tracked objects:
  4228 ;;		On entry : 0/0
  4229 ;;		On exit  : 0/0
  4230 ;;		Unchanged: 0/0
  4231 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4232 ;;      Params:         0       0       0       0       0
  4233 ;;      Locals:         0       0       0       0       0
  4234 ;;      Temps:          1       0       0       0       0
  4235 ;;      Totals:         1       0       0       0       0
  4236 ;;Total ram usage:        1 bytes
  4237 ;; Hardware stack levels used:    1
  4238 ;; This function calls:
  4239 ;;		Nothing
  4240 ;; This function is called by:
  4241 ;;		_main
  4242 ;; This function uses a non-reentrant model
  4243 ;;
  4244                           
  4245                           
  4246                           ;psect for function _DHT11_checkResponse
  4247  00EC                     _DHT11_checkResponse:
  4248  00EC                     l1650:	
  4249                           ;incstack = 0
  4250                           ; Regs used in _DHT11_checkResponse: [wreg+status,2]
  4251                           
  4252                           
  4253                           ;main.c: 123:     Check_bit = 0;
  4254  00EC  1283               	bcf	3,5	;RP0=0, select bank0
  4255  00ED  1303               	bcf	3,6	;RP1=0, select bank0
  4256  00EE  01BE               	clrf	_Check_bit
  4257  00EF                     l1652:
  4258                           
  4259                           ;main.c: 124:     _delay((unsigned long)((40)*(20000000/4000000.0)));
  4260  00EF  3042               	movlw	66
  4261  00F0  00F0               	movwf	??_DHT11_checkResponse
  4262  00F1                     u1607:
  4263  00F1  0BF0               	decfsz	??_DHT11_checkResponse,f
  4264  00F2  28F1               	goto	u1607
  4265  00F3  0000               	nop
  4266  00F4                     l1654:
  4267                           
  4268                           ;main.c: 125:     if (PORTDbits.RD5 == 0) {
  4269  00F4  1283               	bcf	3,5	;RP0=0, select bank0
  4270  00F5  1303               	bcf	3,6	;RP1=0, select bank0
  4271  00F6  1A88               	btfsc	8,5	;volatile
  4272  00F7  28F9               	goto	u1061
  4273  00F8  28FA               	goto	u1060
  4274  00F9                     u1061:
  4275  00F9  290A               	goto	l81
  4276  00FA                     u1060:
  4277  00FA                     l1656:
  4278                           
  4279                           ;main.c: 126:         _delay((unsigned long)((80)*(20000000/4000000.0)));
  4280  00FA  3085               	movlw	133
  4281  00FB  00F0               	movwf	??_DHT11_checkResponse
  4282  00FC                     u1617:
  4283  00FC  0BF0               	decfsz	??_DHT11_checkResponse,f
  4284  00FD  28FC               	goto	u1617
  4285  00FE                     l1658:
  4286                           
  4287                           ;main.c: 127:         if (PORTDbits.RD5 == 1) {
  4288  00FE  1283               	bcf	3,5	;RP0=0, select bank0
  4289  00FF  1303               	bcf	3,6	;RP1=0, select bank0
  4290  0100  1E88               	btfss	8,5	;volatile
  4291  0101  2903               	goto	u1071
  4292  0102  2904               	goto	u1070
  4293  0103                     u1071:
  4294  0103  2906               	goto	l1662
  4295  0104                     u1070:
  4296  0104                     l1660:
  4297                           
  4298                           ;main.c: 128:             Check_bit = 1;
  4299  0104  01BE               	clrf	_Check_bit
  4300  0105  0ABE               	incf	_Check_bit,f
  4301  0106                     l1662:
  4302                           
  4303                           ;main.c: 130:         _delay((unsigned long)((50)*(20000000/4000000.0)));
  4304  0106  3053               	movlw	83
  4305  0107  00F0               	movwf	??_DHT11_checkResponse
  4306  0108                     u1627:
  4307  0108  0BF0               	decfsz	??_DHT11_checkResponse,f
  4308  0109  2908               	goto	u1627
  4309  010A                     l81:
  4310  010A  0008               	return
  4311  010B                     __end_of_DHT11_checkResponse:
  4312  007E                     btemp	set	126	;btemp
  4313  007E                     wtemp0	set	126
  4314                           
  4315                           	psect	config
  4316                           
  4317                           ;Config register CONFIG @ 0x2007
  4318                           ;	Oscillator Selection bits
  4319                           ;	FOSC = HS, HS oscillator
  4320                           ;	Watchdog Timer Enable bit
  4321                           ;	WDTE = OFF, WDT disabled
  4322                           ;	Power-up Timer Enable bit
  4323                           ;	PWRTE = ON, PWRT enabled
  4324                           ;	Brown-out Reset Enable bit
  4325                           ;	BOREN = ON, BOR enabled
  4326                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  4327                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  4328                           ;	Data EEPROM Memory Code Protection bit
  4329                           ;	CPD = OFF, Data EEPROM code protection off
  4330                           ;	Flash Program Memory Write Enable bits
  4331                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  4332                           ;	In-Circuit Debugger Mode bit
  4333                           ;	DEBUG = 0x1, unprogrammed default
  4334                           ;	Flash Program Memory Code Protection bit
  4335                           ;	CP = OFF, Code protection off
  4336  2007                     	org	8199
  4337  2007  3F72               	dw	16242

Data Sizes:
    Strings     162
    Constant    10
    Data        0
    BSS         71
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     25      77
    BANK1            80      0      20
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 15
		 -> STR_7(CODE[15]), STR_5(CODE[13]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 20
		 -> value(BANK0[20]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    UART_getString@buf	PTR unsigned char  size(1) Largest target is 20
		 -> buffer(BANK1[20]), 

    UART_sendString@str	PTR unsigned char  size(2) Largest target is 20
		 -> STR_8(CODE[2]), STR_6(CODE[2]), value(BANK0[20]), 

    lcd_puts@str	PTR unsigned char  size(1) Largest target is 17
		 -> STR_17(CODE[16]), STR_16(CODE[13]), STR_15(CODE[14]), STR_14(CODE[10]), 
		 -> STR_13(CODE[17]), STR_12(CODE[17]), STR_11(CODE[13]), STR_10(CODE[9]), 
		 -> STR_9(CODE[16]), STR_4(CODE[4]), STR_3(CODE[11]), STR_2(CODE[2]), 
		 -> STR_1(CODE[7]), 


Critical Paths under _main in COMMON

    _main->___awmod
    _lcd_init->_lcd_com
    _lcd_init_write->_delay
    _introduction->_lcd_puts
    _clear->_lcd_puts
    _lcd_puts->_lcd_data
    _lcd_data->_lcd_com
    _lcd_com->_delay
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    ___awmod->___awdiv
    _UART_sendString->_UART_sendChar
    _UART_init->___aldiv

Critical Paths under _main in BANK0

    _main->_sprintf
    _system_init->_introduction
    _UART_init->___aldiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                10    10      0   21738
                                             15 BANK0     10    10      0
                _DHT11_checkResponse
                         _DHT11_init
                         _DHT11_read
                     _UART_getString
                          _UART_init
                    _UART_sendString
                            ___awdiv
                            ___awmod
                              _clear
                            _lcd_com
                           _lcd_data
                           _lcd_puts
                            _sprintf
                        _system_init
 ---------------------------------------------------------------------------------
 (1) _system_init                                          0     0      0    9873
                       _introduction
                           _lcd_init
 ---------------------------------------------------------------------------------
 (2) _lcd_init                                             0     0      0    3675
                              _delay
                            _lcd_com
                     _lcd_init_write
 ---------------------------------------------------------------------------------
 (3) _lcd_init_write                                       1     1      0    1209
                                              4 COMMON     1     1      0
                              _delay
 ---------------------------------------------------------------------------------
 (2) _introduction                                         3     3      0    6198
                                              0 BANK0      3     3      0
                              _clear
                            _lcd_com
                           _lcd_puts
 ---------------------------------------------------------------------------------
 (3) _clear                                                0     0      0    3099
                            _lcd_com
                           _lcd_puts
 ---------------------------------------------------------------------------------
 (3) _lcd_puts                                             3     3      0    1820
                                              9 COMMON     3     3      0
                           _lcd_data
 ---------------------------------------------------------------------------------
 (4) _lcd_data                                             1     1      0    1301
                                              8 COMMON     1     1      0
                            _lcd_com
 ---------------------------------------------------------------------------------
 (3) _lcd_com                                              4     4      0    1279
                                              4 COMMON     4     4      0
                              _delay
 ---------------------------------------------------------------------------------
 (4) _delay                                                4     2      2    1187
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             23    18      5    1624
                                              0 BANK0     15    10      5
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     463
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     466
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              7     3      4     904
                                              9 COMMON     5     1      4
                                              0 BANK0      2     2      0
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4     604
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (1) _UART_sendString                                      2     0      2     371
                                              1 COMMON     2     0      2
                      _UART_sendChar
 ---------------------------------------------------------------------------------
 (2) _UART_sendChar                                        1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_init                                            4     0      4     550
                                              6 BANK0      4     0      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     452
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (1) _UART_getString                                       7     5      2     199
                                              0 COMMON     7     5      2
                       _UART_getChar
 ---------------------------------------------------------------------------------
 (2) _UART_getChar                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DHT11_read                                           4     4      0     114
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (1) _DHT11_init                                           2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _DHT11_checkResponse                                  1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DHT11_checkResponse
   _DHT11_init
   _DHT11_read
   _UART_getString
     _UART_getChar
   _UART_init
     ___aldiv
   _UART_sendString
     _UART_sendChar
   ___awdiv
   ___awmod
     ___awdiv (ARG)
   _clear
     _lcd_com
       _delay
     _lcd_puts
       _lcd_data
         _lcd_com
           _delay
   _lcd_com
     _delay
   _lcd_data
     _lcd_com
       _delay
   _lcd_puts
     _lcd_data
       _lcd_com
         _delay
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
   _system_init
     _introduction
       _clear
         _lcd_com
           _delay
         _lcd_puts
           _lcd_data
             _lcd_com
               _delay
       _lcd_com
         _delay
       _lcd_puts
         _lcd_data
           _lcd_com
             _delay
     _lcd_init
       _delay
       _lcd_com
         _delay
       _lcd_init_write
         _delay

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      6F       3        0.0%
BITBANK0            50      0       1       4        1.2%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     19      4D       5       96.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0      14       7       25.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      6F      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Wed Apr 07 22:19:06 2021

                           _c 0036                             _j 0034                             pc 0002  
                 lcd_com@temp 0077                            l81 010A                            l91 0217  
                          l76 00EB                            l94 0226                            l86 01E6  
                          l97 00D1                            _RH 0038                  ___awdiv@sign 0076  
                          fsr 0004           __end_of_system_init 00D2                           l100 0FFF  
                         l103 03ED                           l130 0FAD                           l122 0FD0  
                         l203 01AA                           l116 0FDC                           l213 0FB6  
                         l125 0274                           l133 0484                           l206 0F99  
                         l222 0178                           l126 0275                           l119 0FE6  
                         l127 02B9                           l216 0FBB                           l209 0FA1  
                         l139 0152                           l228 012D                           l407 0499  
                         l417 0521                           l338 0609                           l508 0314  
                         l614 026A                           l624 01E4                           l495 037B  
                         u800 0F9F                           u801 0F9E                           u810 0FB4  
                         u811 0FB3                           u820 0FBA                           u821 0FB9  
                         u910 0509                           u830 048C                           u911 0508  
                         u831 048B                           u920 050E                           u840 049D  
                         u760 0FE6                           u921 050D                           u905 04FB  
                         u841 049C                           u761 0FE5                           u850 04BC  
                         u930 022F                           u770 0272                           u851 04BB  
                         u931 022E                           u771 0271                           u765 0FE2  
                         u870 04D0                           u950 0241                           u790 0152  
                         u871 04CF                           u951 0240                           u791 0151  
                         u865 04C1                           u945 0233                           u785 0296  
                         _RX9 00C6                           u890 04EB                           u970 0252  
                         u891 04EA                           u971 0251                           u885 04D2  
                         u965 0242                           u990 0266                           u895 04E7  
                         u991 0265                           u975 024E                           u985 025A  
                         _TX9 04C6                           _num 0020                           fsr0 0004  
                         indf 0000                  ___awmod@sign 0054           __size_of_DHT11_init 001A  
         __size_of_DHT11_read 0042                          l2016 054F                          l1500 0382  
                        l1510 03BD                          l1502 0388                          l1520 0F9F  
                        l1600 01B4                          l1432 0FD1                          l1440 0276  
                        l1512 03C9                          l1504 0394                          l1522 0FAE  
                        l1530 0485                          l1610 01D3                          l1602 01BB  
                        l1434 0FD6                          l1450 0287                          l1442 027A  
                        l1514 03CF                          l1506 03A3                          l1524 0FB4  
                        l1540 04AC                          l1532 0488                          l1612 01DA  
                        l1604 01BF                          l1700 055A                          l1460 02A8  
                        l1452 0290                          l1444 027E                          l1436 026C  
                        l1516 03DE                          l1508 03B7                          l1620 00C7  
                        l1526 0FBA                          l1550 04D0                          l1542 04B4  
                        l1534 048C                          l1630 019A                          l1518 0F99  
                        l1606 01C3                          l1614 01E0                          l1710 0573  
                        l1702 0562                          l1462 02AC                          l1454 0293  
                        l1446 0282                          l1438 0272                          l1470 0FA7  
                        l1622 00CC                          l1560 0503                          l1552 04D9  
                        l1544 04BC                          l1536 049D                          l1640 01A7  
                        l1632 019B                          l1624 0179                          l1800 036D  
                        l1608 01CD                          l1720 0591                          l1704 0566  
                        l1464 02AD                          l1456 02A0                          l1448 0286  
                        l1472 012F                          l1480 0FE7                          l1650 00EC  
                        l1642 00D2                          l1554 04EB                          l1546 04BF  
                        l1562 0509                          l1538 04A8                          l1634 019E  
                        l1626 017D                          l1802 0372                          l1810 02BD  
                        l1570 0227                          l1730 05B1                          l1722 059B  
                        l1706 056A                          l1466 02B6                          l1458 02A4  
                        l1474 0132                          l1482 0FED                          l1490 0FC3  
                        l1618 00C4                          l1660 0104                          l1652 00EF  
                        l1644 00D8                          l1564 050E                          l1556 04F9  
                        l1548 04CC                          l1636 01A1                          l1628 0199  
                        l1804 0377                          l1820 02D1                          l1812 02C1  
                        l1580 023D                          l1572 0229                          l1732 05DF  
                        l1724 05A1                          l1716 0575                          l1708 056E  
                        l1740 0605                          l1468 0FA3                          l1476 013F  
                        l1484 0FF3                          l1492 0FC4                          l1900 07A6  
                        l1662 0106                          l1654 00F4                          l1646 00E0  
                        l1670 01EC                          l1566 0519                          l1558 04FA  
                        l1638 01A4                          l1750 0154                          l1830 02E9  
                        l1822 02D7                          l1814 02C6                          l1590 0260  
                        l1582 0241                          l1574 022F                          l1734 05E6  
                        l1726 05A8                          l1478 0145                          l1494 0FCD  
                        l1486 0FBD                          l1910 07CF                          l1902 07B1  
              DHT11_read@data 0072                          l1656 00FA                          l1648 00E8  
                        l1680 021F                          l1672 01F1                          l1664 01E5  
                        l1760 011D                          l1752 0162                          l1840 030B  
                        l1832 02F3                          l1824 02DA                          l1816 02C8  
                        l1808 02BA                          l1584 0252                          l1576 0232  
                        l1592 0266                          l1736 05EA                          l1728 05AC  
                        l1488 0FC1                          l1496 03EE                          l1912 07D5  
                        l1904 07B8                          l1658 00FE                          l1682 0225  
                        l1674 01F7                          l1762 0123                          l1754 0168  
                        l1770 031F                          l1842 0310                          l1834 02F9  
                        l1826 02E1                          l1818 02CC                          l1586 0258  
                        l1578 0239                          l1690 0530                          l1738 05F3  
                        l1498 037C                          l1906 07BD                          l1850 061E  
                        l1676 0208                          l1756 010C                          l1748 0153  
                        l1780 0330                          l1772 0321                          l1764 0315  
                        l1836 0300                          l1828 02E5                          l1588 0259  
                        l1596 01AB                          l1692 0537                          l1908 07C3  
                        l1860 0670                          l1852 062D                          l1678 021B  
                        l1758 010F                          l1790 0348                          l1782 0336  
                        l1774 0325                          l1766 0316                          l1838 0306  
                        l1598 01B1                          l1694 053C                          l1686 0525  
                        l1870 06D2                          l1862 0698                          l1854 0632  
                        l1846 060A                          l1792 0359                          l1784 0339  
                        l1776 032A                          l1768 031A                          l1688 052A  
                        l1880 0703                          l1872 06EB                          l1864 06A0  
                        l1856 0637                          l1848 060F                          l1794 035F  
                        l1786 0340                          l1778 032E                          l1698 053D  
                        l1890 076B                          l1882 0729                          l1874 06F1  
                        l1866 06A6                          l1858 063E                          l1796 0360  
                        l1788 0344                          l1892 0774                          l1884 0742  
                        l1876 06F7                          l1868 06AC                          l1798 0367  
                        l1894 078E                          l1886 0748                          l1878 06FD  
                        l1896 0797                          l1888 0762                          l1898 07A0  
                        STR_1 00B0                          STR_2 00BD                          STR_3 0092  
                        STR_4 00B7                          STR_5 006B                          STR_6 00BB  
                        STR_7 004E                          STR_8 00BB                          STR_9 003E  
                        _BRGH 04C2                          u1000 01B1                          _CREN 00C4  
                        u1001 01B0                          u1020 01C3                          u1021 01C2  
                        u1030 01CD                          u1031 01CC                          u1015 01B5  
                        u1120 021B                          u1104 01FF                          u1200 0605  
                        u1121 021A                          u1105 01FD                          u1201 0604  
                        u1130 0225                          u1114 0210                          u1210 0178  
                        u1050 01E0                          u1131 0224                          u1115 020E  
                        u1211 0177                          u1051 01DF                          u1035 01C9  
                        u1060 00FA                          u1220 012D                          u1140 0530  
                        u1061 00F9                          u1221 012C                          u1045 01D4  
                        u1141 052F                          u1070 0104                          u1310 036D  
                        u1230 031A                          u1150 056A                          u1071 0103  
                        u1311 036C                          u1231 0319                          u1151 0569  
                        u1080 01EC                          u1320 0372                          u1240 0325  
                        u1400 0306                          u1160 0590                          u1081 01EB  
                        u1225 0129                          u1321 0371                          u1305 0361  
                        u1241 0324                          u1401 0305                          u1161 058F  
                        u1090 01F7                          u1250 0336                          u1410 030B  
                        u1330 02C1                          u1170 059B                          u1091 01F6  
                        u1251 0335                          u1411 030A                          u1331 02C0  
                        u1171 059A                          u1340 02CC                          u1180 05A1  
                        u1420 063E                          u1341 02CB                          u1181 05A0  
                        u1165 058C                          u1421 063D                          u1270 0348  
                        u1350 02D7                          u1190 05F3                          u1430 0698  
                        u1271 0347                          u1351 02D6                          u1191 05F2  
                        u1431 0697                          u1440 07A6                          u1265 033A  
                        u1441 07A5                          u1290 0359                          u1370 02E9  
                        u1291 0358                          u1371 02E8                          u1435 0694  
                        u1380 02F3                          u1285 0349                          u1381 02F2  
                        u1365 02DB                          u1517 0626                          u1607 00F1  
                        u1295 0355                          u1527 07DD                          u1617 00FC  
                        u1385 02EF                          u1537 039C                          u1627 0108  
                        u1395 02FA                          u1547 03AB                          u1557 03D7  
                        u1567 03E6                          u1577 01EE                          u1587 00DC  
                        u1597 00E5                          _RCIF 0065                          _OERR 00C1  
                        _SPEN 00C7                          _TXEN 04C5                          _TXIF 0064  
                        _SYNC 04C4                          _main 060A                          btemp 007E  
                 lcd_puts@str 007B                          start 0000          UART_getString@length 0070  
             __end_of___aldiv 0522                         ?_main 0070               __end_of___awdiv 037C  
                       STR_10 00A7                         STR_11 0078                         STR_12 001D  
                       STR_13 001D                         STR_14 009D                         STR_15 005D  
                       STR_16 0085                         STR_17 002E               __end_of___awmod 0315  
             ___awdiv@divisor 0070               __end_of___lwdiv 026B               __end_of___lwmod 01E5  
             ___awdiv@counter 0075                         _RCREG 001A                         _SPBRG 0099  
                       _PORTB 0006                         _TRISB 0086                         _TXREG 0019  
             __end_of_lcd_com 02BA                         _delay 0FD1                         _clear 0FE7  
          __size_of_UART_init 0032               __end_of_dpowers 001D                         _value 003F  
__size_of_DHT11_checkResponse 001F                         pclath 000A                         status 0003  
                       wtemp0 007E               __end_of_sprintf 060A               _UART_sendString 0153  
             __initialization 07E8                   _system_init 00C4                  __end_of_main 07E8  
                      ??_main 0062               UART_getString@i 0075                        ?_delay 0070  
                      ?_clear 0070              ___awdiv@dividend 0072                        _TRISC6 043E  
                      _TRISC7 043F                  ??_DHT11_init 0070                  ??_DHT11_read 0070  
            __end_of_lcd_data 0FAE              __end_of_lcd_init 0485              __end_of_lcd_puts 0153  
                   ??___aldiv 0078             __end_of_UART_init 01AB                     ??___awdiv 0074  
                   ??___awmod 007D                     ??___lwdiv 0074                     ??___lwmod 007C  
                      _buffer 00A0                        delay@i 0072                        delay@j 0070  
            ___awdiv@quotient 0077               ___awmod@divisor 0079               ___awmod@counter 0053  
                      _status 0360                     ??_lcd_com 0074            __end_of_DHT11_init 00EC  
          __end_of_DHT11_read 0227                     ??_sprintf 0058              ??_lcd_init_write 0074  
     __end_of_UART_sendString 0179       __end_of__initialization 07FC                __pcstackCOMMON 0070  
               __end_of_delay 0FE7                 __end_of_clear 1000                 ?_introduction 0070  
                     ??_delay 0072                       ??_clear 007C         __end_of_UART_sendChar 0FA2  
                  __pbssBANK0 0020                    __pbssBANK1 00A0               UART_sendChar@bt 0070  
     __size_of_UART_getString 0023                    __pmaintext 060A           _DHT11_checkResponse 00EC  
              ??_introduction 0053                     ?_lcd_data 0070                     ?_lcd_init 0070  
        ?_DHT11_checkResponse 0070                     ?_lcd_puts 0070                    __stringtab 0003  
            ?_UART_sendString 0071                  ?_system_init 0070                   _Temp_byte_1 003D  
                 _Temp_byte_2 003C                       ___aldiv 0485                       ___awdiv 0315  
                     ___awmod 02BA                 ?_UART_getChar 0070                       ___lwdiv 0227  
                     ___lwmod 01AB           DHT11_read@for_count 0073                       __ptext1 00C4  
                     __ptext2 03EE                       __ptext3 0FBC                       __ptext4 037C  
                     __ptext5 0FE7                       __ptext6 012E                       __ptext7 0FA2  
                     __ptext8 026B                       __ptext9 0FD1                       _lcd_com 026B  
                     _dpowers 0013              ___awmod@dividend 007B              ___aldiv@dividend 0074  
       ??_DHT11_checkResponse 0070                    ??_lcd_data 0078                       _sprintf 0522  
                     clrloop0 0F91                    ??_lcd_init 0078                    ??_lcd_puts 0079  
        end_of_initialization 07FC              ___aldiv@quotient 0055                ??_UART_getChar 0070  
                   _PORTBbits 0006                     _UART_init 0179                     _PORTDbits 0008  
                   _TRISDbits 0088                     _RH_byte_1 003B                     _RH_byte_2 003A  
              _UART_getString 010B                     _Check_bit 003E               lcd_init_write@a 0074  
        __end_of_introduction 03EE                    ?_UART_init 0059                 __pbitbssBANK0 0360  
         start_initialization 07E8        __end_of_UART_getString 012E          __size_of_system_init 000E  
                   ___latbits 0002                 __pcstackBANK0 0053             UART_getString@buf 0074  
        __end_of_UART_getChar 0FBC               ?_UART_getString 0070             __size_of_lcd_data 000C  
           __size_of_lcd_init 0097                   sprintf@flag 005C             __size_of_lcd_puts 0025  
                 sprintf@prec 005D              ___lwdiv@dividend 0072       __size_of_lcd_init_write 0015  
                    ?___aldiv 0070                      ?___awdiv 0070                      ?___awmod 0079  
                    ?___lwdiv 0070                      ?___lwmod 0078        __size_of_UART_sendChar 000A  
                   __pstrings 0003                   ??_UART_init 0079                      ?_lcd_com 0070  
            ___lwdiv@quotient 0075                __size_of_delay 0016                __size_of_clear 0019  
                    ?_sprintf 0053               ___aldiv@divisor 0070               ___aldiv@counter 0053  
       __size_of_introduction 0072                     clear_ram0 0F90            UART_sendString@str 0071  
    __size_of_UART_sendString 0026                     lcd_data@a 0078                   __stringbase 0012  
 __end_of_DHT11_checkResponse 010B                     lcd_puts@i 0079                  _introduction 037C  
               _UART_sendChar 0F98                    _DHT11_init 00D2                    _DHT11_read 01E5  
            __size_of___aldiv 009D              __size_of___awdiv 0067              __size_of___awmod 005B  
            __size_of___lwdiv 0044              __size_of___lwmod 003A            __end_of__stringtab 0013  
            __size_of_lcd_com 004F                    sprintf@val 005E         __size_of_UART_getChar 000E  
                    _checksum 0037               ___lwdiv@divisor 0070               ___lwdiv@counter 0077  
                    __ptext10 0522                      __ptext11 01AB                      __ptext20 0FAE  
                    __ptext12 0227                      __ptext21 01E5                      __ptext13 02BA  
                    __ptext22 00D2                      __ptext14 0315                      __ptext23 00EC  
                    __ptext15 0153                      __ptext16 0F98                      __ptext17 0179  
                    __ptext18 0485                      __ptext19 010B                      _lcd_data 0FA2  
                    _lcd_init 03EE                ?_UART_sendChar 0070                      _lcd_puts 012E  
            __size_of_sprintf 00E8                 __size_of_main 01DE                      _humidity 0039  
              _lcd_init_write 0FBC                      lcd_com@a 0076                  _UART_getChar 0FAE  
           ??_UART_sendString 0073              ??_UART_getString 0072             UART_init@baudRate 0059  
                   sprintf@ap 005B                     sprintf@sp 0060              ___lwmod@dividend 007A  
      __end_of_lcd_init_write 0FD1                     stringcode 000D                   ?_DHT11_init 0070  
                 ?_DHT11_read 0070                 ??_system_init 007C                      sprintf@c 0061  
                    sprintf@f 0053               ___lwmod@divisor 0078               ___lwmod@counter 007D  
                    stringdir 000D                      stringtab 0003                  ___aldiv@sign 0054  
             ??_UART_sendChar 0070               ?_lcd_init_write 0070  
