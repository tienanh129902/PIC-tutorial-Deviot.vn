

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Mon Apr 19 15:44:09 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bitbssBANK1,global,bit,class=BANK1,space=1,delta=1,noexec
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     8                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2,group=3
    19                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text22,local,class=CODE,merge=1,delta=2
    36                           	psect	text23,local,class=CODE,merge=1,delta=2
    37                           	psect	text24,local,class=CODE,merge=1,delta=2
    38                           	psect	text25,local,class=CODE,merge=1,delta=2
    39                           	psect	text26,local,class=CODE,merge=1,delta=2
    40                           	psect	text27,local,class=CODE,merge=1,delta=2
    41                           	psect	text28,local,class=CODE,merge=1,delta=2,group=2
    42                           	psect	text29,local,class=CODE,merge=1,delta=2
    43                           	psect	text30,local,class=CODE,merge=1,delta=2,group=2
    44                           	psect	text31,local,class=CODE,merge=1,delta=2
    45                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    46                           	dabs	1,0x7E,2
    47  0000                     
    48                           ; Version 2.20
    49                           ; Generated 12/02/2020 GMT
    50                           ; 
    51                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    52                           ; All rights reserved.
    53                           ; 
    54                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    55                           ; 
    56                           ; Redistribution and use in source and binary forms, with or without modification, are
    57                           ; permitted provided that the following conditions are met:
    58                           ; 
    59                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    60                           ;        conditions and the following disclaimer.
    61                           ; 
    62                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    63                           ;        of conditions and the following disclaimer in the documentation and/or other
    64                           ;        materials provided with the distribution.
    65                           ; 
    66                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    67                           ;        software without specific prior written permission.
    68                           ; 
    69                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    70                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    71                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    72                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    73                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    74                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    75                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    76                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    77                           ; 
    78                           ; 
    79                           ; Code-generator required, PIC16F887 Definitions
    80                           ; 
    81                           ; SFR Addresses
    82  0000                     	;# 
    83  0001                     	;# 
    84  0002                     	;# 
    85  0003                     	;# 
    86  0004                     	;# 
    87  0005                     	;# 
    88  0006                     	;# 
    89  0007                     	;# 
    90  0008                     	;# 
    91  0009                     	;# 
    92  000A                     	;# 
    93  000B                     	;# 
    94  000C                     	;# 
    95  000D                     	;# 
    96  000E                     	;# 
    97  000E                     	;# 
    98  000F                     	;# 
    99  0010                     	;# 
   100  0011                     	;# 
   101  0012                     	;# 
   102  0013                     	;# 
   103  0014                     	;# 
   104  0015                     	;# 
   105  0015                     	;# 
   106  0016                     	;# 
   107  0017                     	;# 
   108  0018                     	;# 
   109  0019                     	;# 
   110  001A                     	;# 
   111  001B                     	;# 
   112  001B                     	;# 
   113  001C                     	;# 
   114  001D                     	;# 
   115  001E                     	;# 
   116  001F                     	;# 
   117  0081                     	;# 
   118  0085                     	;# 
   119  0086                     	;# 
   120  0087                     	;# 
   121  0088                     	;# 
   122  0089                     	;# 
   123  008C                     	;# 
   124  008D                     	;# 
   125  008E                     	;# 
   126  008F                     	;# 
   127  0090                     	;# 
   128  0091                     	;# 
   129  0092                     	;# 
   130  0093                     	;# 
   131  0093                     	;# 
   132  0093                     	;# 
   133  0094                     	;# 
   134  0095                     	;# 
   135  0096                     	;# 
   136  0097                     	;# 
   137  0098                     	;# 
   138  0099                     	;# 
   139  009A                     	;# 
   140  009B                     	;# 
   141  009C                     	;# 
   142  009D                     	;# 
   143  009E                     	;# 
   144  009F                     	;# 
   145  0105                     	;# 
   146  0107                     	;# 
   147  0108                     	;# 
   148  0109                     	;# 
   149  010C                     	;# 
   150  010C                     	;# 
   151  010D                     	;# 
   152  010E                     	;# 
   153  010F                     	;# 
   154  0185                     	;# 
   155  0187                     	;# 
   156  0188                     	;# 
   157  0189                     	;# 
   158  018C                     	;# 
   159  018D                     	;# 
   160  0000                     	;# 
   161  0001                     	;# 
   162  0002                     	;# 
   163  0003                     	;# 
   164  0004                     	;# 
   165  0005                     	;# 
   166  0006                     	;# 
   167  0007                     	;# 
   168  0008                     	;# 
   169  0009                     	;# 
   170  000A                     	;# 
   171  000B                     	;# 
   172  000C                     	;# 
   173  000D                     	;# 
   174  000E                     	;# 
   175  000E                     	;# 
   176  000F                     	;# 
   177  0010                     	;# 
   178  0011                     	;# 
   179  0012                     	;# 
   180  0013                     	;# 
   181  0014                     	;# 
   182  0015                     	;# 
   183  0015                     	;# 
   184  0016                     	;# 
   185  0017                     	;# 
   186  0018                     	;# 
   187  0019                     	;# 
   188  001A                     	;# 
   189  001B                     	;# 
   190  001B                     	;# 
   191  001C                     	;# 
   192  001D                     	;# 
   193  001E                     	;# 
   194  001F                     	;# 
   195  0081                     	;# 
   196  0085                     	;# 
   197  0086                     	;# 
   198  0087                     	;# 
   199  0088                     	;# 
   200  0089                     	;# 
   201  008C                     	;# 
   202  008D                     	;# 
   203  008E                     	;# 
   204  008F                     	;# 
   205  0090                     	;# 
   206  0091                     	;# 
   207  0092                     	;# 
   208  0093                     	;# 
   209  0093                     	;# 
   210  0093                     	;# 
   211  0094                     	;# 
   212  0095                     	;# 
   213  0096                     	;# 
   214  0097                     	;# 
   215  0098                     	;# 
   216  0099                     	;# 
   217  009A                     	;# 
   218  009B                     	;# 
   219  009C                     	;# 
   220  009D                     	;# 
   221  009E                     	;# 
   222  009F                     	;# 
   223  0105                     	;# 
   224  0107                     	;# 
   225  0108                     	;# 
   226  0109                     	;# 
   227  010C                     	;# 
   228  010C                     	;# 
   229  010D                     	;# 
   230  010E                     	;# 
   231  010F                     	;# 
   232  0185                     	;# 
   233  0187                     	;# 
   234  0188                     	;# 
   235  0189                     	;# 
   236  018C                     	;# 
   237  018D                     	;# 
   238  0000                     	;# 
   239  0001                     	;# 
   240  0002                     	;# 
   241  0003                     	;# 
   242  0004                     	;# 
   243  0005                     	;# 
   244  0006                     	;# 
   245  0007                     	;# 
   246  0008                     	;# 
   247  0009                     	;# 
   248  000A                     	;# 
   249  000B                     	;# 
   250  000C                     	;# 
   251  000D                     	;# 
   252  000E                     	;# 
   253  000E                     	;# 
   254  000F                     	;# 
   255  0010                     	;# 
   256  0011                     	;# 
   257  0012                     	;# 
   258  0013                     	;# 
   259  0014                     	;# 
   260  0015                     	;# 
   261  0015                     	;# 
   262  0016                     	;# 
   263  0017                     	;# 
   264  0018                     	;# 
   265  0019                     	;# 
   266  001A                     	;# 
   267  001B                     	;# 
   268  001B                     	;# 
   269  001C                     	;# 
   270  001D                     	;# 
   271  001E                     	;# 
   272  001F                     	;# 
   273  0081                     	;# 
   274  0085                     	;# 
   275  0086                     	;# 
   276  0087                     	;# 
   277  0088                     	;# 
   278  0089                     	;# 
   279  008C                     	;# 
   280  008D                     	;# 
   281  008E                     	;# 
   282  008F                     	;# 
   283  0090                     	;# 
   284  0091                     	;# 
   285  0092                     	;# 
   286  0093                     	;# 
   287  0093                     	;# 
   288  0093                     	;# 
   289  0094                     	;# 
   290  0095                     	;# 
   291  0096                     	;# 
   292  0097                     	;# 
   293  0098                     	;# 
   294  0099                     	;# 
   295  009A                     	;# 
   296  009B                     	;# 
   297  009C                     	;# 
   298  009D                     	;# 
   299  009E                     	;# 
   300  009F                     	;# 
   301  0105                     	;# 
   302  0107                     	;# 
   303  0108                     	;# 
   304  0109                     	;# 
   305  010C                     	;# 
   306  010C                     	;# 
   307  010D                     	;# 
   308  010E                     	;# 
   309  010F                     	;# 
   310  0185                     	;# 
   311  0187                     	;# 
   312  0188                     	;# 
   313  0189                     	;# 
   314  018C                     	;# 
   315  018D                     	;# 
   316  0000                     	;# 
   317  0001                     	;# 
   318  0002                     	;# 
   319  0003                     	;# 
   320  0004                     	;# 
   321  0005                     	;# 
   322  0006                     	;# 
   323  0007                     	;# 
   324  0008                     	;# 
   325  0009                     	;# 
   326  000A                     	;# 
   327  000B                     	;# 
   328  000C                     	;# 
   329  000D                     	;# 
   330  000E                     	;# 
   331  000E                     	;# 
   332  000F                     	;# 
   333  0010                     	;# 
   334  0011                     	;# 
   335  0012                     	;# 
   336  0013                     	;# 
   337  0014                     	;# 
   338  0015                     	;# 
   339  0015                     	;# 
   340  0016                     	;# 
   341  0017                     	;# 
   342  0018                     	;# 
   343  0019                     	;# 
   344  001A                     	;# 
   345  001B                     	;# 
   346  001B                     	;# 
   347  001C                     	;# 
   348  001D                     	;# 
   349  001E                     	;# 
   350  001F                     	;# 
   351  0081                     	;# 
   352  0085                     	;# 
   353  0086                     	;# 
   354  0087                     	;# 
   355  0088                     	;# 
   356  0089                     	;# 
   357  008C                     	;# 
   358  008D                     	;# 
   359  008E                     	;# 
   360  008F                     	;# 
   361  0090                     	;# 
   362  0091                     	;# 
   363  0092                     	;# 
   364  0093                     	;# 
   365  0093                     	;# 
   366  0093                     	;# 
   367  0094                     	;# 
   368  0095                     	;# 
   369  0096                     	;# 
   370  0097                     	;# 
   371  0098                     	;# 
   372  0099                     	;# 
   373  009A                     	;# 
   374  009B                     	;# 
   375  009C                     	;# 
   376  009D                     	;# 
   377  009E                     	;# 
   378  009F                     	;# 
   379  0105                     	;# 
   380  0107                     	;# 
   381  0108                     	;# 
   382  0109                     	;# 
   383  010C                     	;# 
   384  010C                     	;# 
   385  010D                     	;# 
   386  010E                     	;# 
   387  010F                     	;# 
   388  0185                     	;# 
   389  0187                     	;# 
   390  0188                     	;# 
   391  0189                     	;# 
   392  018C                     	;# 
   393  018D                     	;# 
   394                           
   395                           	psect	strings
   396  1800                     __pstrings:
   397  1800                     stringtab:
   398  1800                     __stringtab:
   399  1800                     stringcode:	
   400                           ;	String table - string pointers are 1 byte each
   401                           
   402  1800                     stringdir:
   403  1800  3018               	movlw	high stringdir
   404  1801  008A               	movwf	10
   405  1802  0804               	movf	4,w
   406  1803  0A84               	incf	4,f
   407  1804  0782               	addwf	2,f
   408  1805                     __stringbase:
   409  1805  3400               	retlw	0
   410  1806                     __end_of__stringtab:
   411  1806                     __powers_:
   412  1806  3400               	retlw	0
   413  1807  3400               	retlw	0
   414  1808  3480               	retlw	128
   415  1809  343F               	retlw	63
   416  180A  3400               	retlw	0
   417  180B  3400               	retlw	0
   418  180C  3420               	retlw	32
   419  180D  3441               	retlw	65
   420  180E  3400               	retlw	0
   421  180F  3400               	retlw	0
   422  1810  34C8               	retlw	200
   423  1811  3442               	retlw	66
   424  1812  3400               	retlw	0
   425  1813  3400               	retlw	0
   426  1814  347A               	retlw	122
   427  1815  3444               	retlw	68
   428  1816  3400               	retlw	0
   429  1817  3440               	retlw	64
   430  1818  341C               	retlw	28
   431  1819  3446               	retlw	70
   432  181A  3400               	retlw	0
   433  181B  3450               	retlw	80
   434  181C  34C3               	retlw	195
   435  181D  3447               	retlw	71
   436  181E  3400               	retlw	0
   437  181F  3424               	retlw	36
   438  1820  3474               	retlw	116
   439  1821  3449               	retlw	73
   440  1822  3480               	retlw	128
   441  1823  3496               	retlw	150
   442  1824  3418               	retlw	24
   443  1825  344B               	retlw	75
   444  1826  3420               	retlw	32
   445  1827  34BC               	retlw	188
   446  1828  34BE               	retlw	190
   447  1829  344C               	retlw	76
   448  182A  3428               	retlw	40
   449  182B  346B               	retlw	107
   450  182C  346E               	retlw	110
   451  182D  344E               	retlw	78
   452  182E  34F9               	retlw	249
   453  182F  3402               	retlw	2
   454  1830  3415               	retlw	21
   455  1831  3450               	retlw	80
   456  1832  34EC               	retlw	236
   457  1833  3478               	retlw	120
   458  1834  34AD               	retlw	173
   459  1835  3460               	retlw	96
   460  1836  34CA               	retlw	202
   461  1837  34F2               	retlw	242
   462  1838  3449               	retlw	73
   463  1839  3471               	retlw	113
   464  183A                     __end_of__powers_:
   465  183A                     __npowers_:
   466  183A  3400               	retlw	0
   467  183B  3400               	retlw	0
   468  183C  3480               	retlw	128
   469  183D  343F               	retlw	63
   470  183E  34CD               	retlw	205
   471  183F  34CC               	retlw	204
   472  1840  34CC               	retlw	204
   473  1841  343D               	retlw	61
   474  1842  340A               	retlw	10
   475  1843  34D7               	retlw	215
   476  1844  3423               	retlw	35
   477  1845  343C               	retlw	60
   478  1846  346F               	retlw	111
   479  1847  3412               	retlw	18
   480  1848  3483               	retlw	131
   481  1849  343A               	retlw	58
   482  184A  3417               	retlw	23
   483  184B  34B7               	retlw	183
   484  184C  34D1               	retlw	209
   485  184D  3438               	retlw	56
   486  184E  34AC               	retlw	172
   487  184F  34C5               	retlw	197
   488  1850  3427               	retlw	39
   489  1851  3437               	retlw	55
   490  1852  34BD               	retlw	189
   491  1853  3437               	retlw	55
   492  1854  3486               	retlw	134
   493  1855  3435               	retlw	53
   494  1856  3495               	retlw	149
   495  1857  34BF               	retlw	191
   496  1858  34D6               	retlw	214
   497  1859  3433               	retlw	51
   498  185A  3477               	retlw	119
   499  185B  34CC               	retlw	204
   500  185C  342B               	retlw	43
   501  185D  3432               	retlw	50
   502  185E  345F               	retlw	95
   503  185F  3470               	retlw	112
   504  1860  3489               	retlw	137
   505  1861  3430               	retlw	48
   506  1862  34FF               	retlw	255
   507  1863  34E6               	retlw	230
   508  1864  34DB               	retlw	219
   509  1865  342E               	retlw	46
   510  1866  3408               	retlw	8
   511  1867  34E5               	retlw	229
   512  1868  343C               	retlw	60
   513  1869  341E               	retlw	30
   514  186A  3460               	retlw	96
   515  186B  3442               	retlw	66
   516  186C  34A2               	retlw	162
   517  186D  340D               	retlw	13
   518  186E                     __end_of__npowers_:
   519  186E                     _dpowers:
   520  186E  3401               	retlw	1
   521  186F  3400               	retlw	0
   522  1870  3400               	retlw	0
   523  1871  3400               	retlw	0
   524  1872  340A               	retlw	10
   525  1873  3400               	retlw	0
   526  1874  3400               	retlw	0
   527  1875  3400               	retlw	0
   528  1876  3464               	retlw	100
   529  1877  3400               	retlw	0
   530  1878  3400               	retlw	0
   531  1879  3400               	retlw	0
   532  187A  34E8               	retlw	232
   533  187B  3403               	retlw	3
   534  187C  3400               	retlw	0
   535  187D  3400               	retlw	0
   536  187E  3410               	retlw	16
   537  187F  3427               	retlw	39
   538  1880  3400               	retlw	0
   539  1881  3400               	retlw	0
   540  1882  34A0               	retlw	160
   541  1883  3486               	retlw	134
   542  1884  3401               	retlw	1
   543  1885  3400               	retlw	0
   544  1886  3440               	retlw	64
   545  1887  3442               	retlw	66
   546  1888  340F               	retlw	15
   547  1889  3400               	retlw	0
   548  188A  3480               	retlw	128
   549  188B  3496               	retlw	150
   550  188C  3498               	retlw	152
   551  188D  3400               	retlw	0
   552  188E  3400               	retlw	0
   553  188F  34E1               	retlw	225
   554  1890  34F5               	retlw	245
   555  1891  3405               	retlw	5
   556  1892  3400               	retlw	0
   557  1893  34CA               	retlw	202
   558  1894  349A               	retlw	154
   559  1895  343B               	retlw	59
   560  1896                     __end_of_dpowers:
   561  001E                     _ADRESH	set	30
   562  001F                     _ADCON0bits	set	31
   563  0008                     _PORTD	set	8
   564  0008                     _PORTDbits	set	8
   565  00F9                     _GO_nDONE	set	249
   566  009E                     _ADRESL	set	158
   567  009F                     _ADCON1bits	set	159
   568  0088                     _TRISD	set	136
   569  0428                     _TRISA0	set	1064
   570  1896                     STR_1:
   571  1896  344E               	retlw	78	;'N'
   572  1897  3468               	retlw	104	;'h'
   573  1898  3469               	retlw	105	;'i'
   574  1899  3465               	retlw	101	;'e'
   575  189A  3474               	retlw	116	;'t'
   576  189B  3420               	retlw	32	;' '
   577  189C  3464               	retlw	100	;'d'
   578  189D  346F               	retlw	111	;'o'
   579  189E  343A               	retlw	58	;':'
   580  189F  3420               	retlw	32	;' '
   581  18A0  3425               	retlw	37	;'%'
   582  18A1  3433               	retlw	51	;'3'
   583  18A2  342E               	retlw	46	;'.'
   584  18A3  3432               	retlw	50	;'2'
   585  18A4  3466               	retlw	102	;'f'
   586  18A5  3400               	retlw	0
   587                           
   588                           	psect	cinit
   589  07E7                     start_initialization:	
   590                           ; #config settings
   591                           
   592  07E7                     __initialization:
   593                           
   594                           ; Clear objects allocated to BITBANK1
   595  07E7  1683               	bsf	3,5	;RP0=1, select bank1
   596  07E8  1303               	bcf	3,6	;RP1=0, select bank1
   597  07E9  01E2               	clrf	(__pbitbssBANK1/(0+8))& (0+127)
   598                           
   599                           ; Clear objects allocated to BANK1
   600  07EA  1383               	bcf	3,7	;select IRP bank0
   601  07EB  30CD               	movlw	low __pbssBANK1
   602  07EC  0084               	movwf	4
   603  07ED  30E2               	movlw	low (__pbssBANK1+21)
   604  07EE  160A  158A  22BF  120A  118A  	fcall	clear_ram0
   605                           
   606                           ; Clear objects allocated to BANK3
   607  07F3  1783               	bsf	3,7	;select IRP bank2
   608  07F4  3090               	movlw	low __pbssBANK3
   609  07F5  0084               	movwf	4
   610  07F6  30A0               	movlw	low (__pbssBANK3+16)
   611  07F7  160A  158A  22BF  120A  118A  	fcall	clear_ram0
   612  07FC                     end_of_initialization:	
   613                           ;End of C runtime variable initialization code
   614                           
   615  07FC                     __end_of__initialization:
   616  07FC  0183               	clrf	3
   617  07FD  160A  158A  2E46   	ljmp	_main	;jump to C main() function
   618                           
   619                           	psect	bitbssBANK1
   620  0710                     __pbitbssBANK1:
   621  0710                     _status:
   622  0710                     	ds	1
   623                           
   624                           	psect	bssBANK1
   625  00CD                     __pbssBANK1:
   626  00CD                     _num:
   627  00CD                     	ds	20
   628  00E1                     _c:
   629  00E1                     	ds	1
   630                           
   631                           	psect	bssBANK3
   632  0190                     __pbssBANK3:
   633  0190                     _buffer:
   634  0190                     	ds	16
   635                           
   636                           	psect	clrtext
   637  1ABF                     clear_ram0:	
   638                           ;	Called with FSR containing the base address, and
   639                           ;	W with the last address+1
   640                           
   641  1ABF  0064               	clrwdt	;clear the watchdog before getting into this loop
   642  1AC0                     clrloop0:
   643  1AC0  0180               	clrf	0	;clear RAM location pointed to by FSR
   644  1AC1  0A84               	incf	4,f	;increment pointer
   645  1AC2  0604               	xorwf	4,w	;XOR with final address
   646  1AC3  1903               	btfsc	3,2	;have we reached the end yet?
   647  1AC4  3400               	retlw	0	;all done for this memory range, return
   648  1AC5  0604               	xorwf	4,w	;XOR again to restore value
   649  1AC6  2AC0               	goto	clrloop0	;do the next byte
   650                           
   651                           	psect	cstackBANK1
   652  00A0                     __pcstackBANK1:
   653  00A0                     ?_sprintf:
   654  00A0                     sprintf@f:	
   655                           ; 2 bytes @ 0x0
   656                           
   657                           
   658                           ; 1 bytes @ 0x0
   659  00A0                     	ds	5
   660  00A5                     ??_sprintf:
   661                           
   662                           ; 1 bytes @ 0x5
   663  00A5                     	ds	5
   664  00AA                     _sprintf$924:
   665                           
   666                           ; 4 bytes @ 0xA
   667  00AA                     	ds	4
   668  00AE                     sprintf@ap:
   669                           
   670                           ; 1 bytes @ 0xE
   671  00AE                     	ds	1
   672  00AF                     sprintf@val:
   673                           
   674                           ; 4 bytes @ 0xF
   675  00AF                     	ds	4
   676  00B3                     sprintf@flag:
   677                           
   678                           ; 2 bytes @ 0x13
   679  00B3                     	ds	2
   680  00B5                     sprintf@width:
   681                           
   682                           ; 2 bytes @ 0x15
   683  00B5                     	ds	2
   684  00B7                     sprintf@tmpval:
   685                           
   686                           ; 4 bytes @ 0x17
   687  00B7                     	ds	4
   688  00BB                     sprintf@eexp:
   689                           
   690                           ; 2 bytes @ 0x1B
   691  00BB                     	ds	2
   692  00BD                     sprintf@fval:
   693                           
   694                           ; 4 bytes @ 0x1D
   695  00BD                     	ds	4
   696  00C1                     sprintf@sp:
   697                           
   698                           ; 1 bytes @ 0x21
   699  00C1                     	ds	1
   700  00C2                     sprintf@prec:
   701                           
   702                           ; 2 bytes @ 0x22
   703  00C2                     	ds	2
   704  00C4                     sprintf@c:
   705                           
   706                           ; 1 bytes @ 0x24
   707  00C4                     	ds	1
   708  00C5                     main@adc_input:
   709                           
   710                           ; 4 bytes @ 0x25
   711  00C5                     	ds	4
   712  00C9                     main@temp:
   713                           
   714                           ; 4 bytes @ 0x29
   715  00C9                     	ds	4
   716                           
   717                           	psect	cstackCOMMON
   718  0070                     __pcstackCOMMON:
   719  0070                     ?_isdigit:
   720  0070                     ?___fleq:	
   721                           ; 1 bit 
   722                           
   723  0070                     ?___flge:	
   724                           ; 1 bit 
   725                           
   726  0070                     ?_ADC_init:	
   727                           ; 1 bit 
   728                           
   729  0070                     ?_lcd_init:	
   730                           ; 1 bytes @ 0x0
   731                           
   732  0070                     ?_lcd_com:	
   733                           ; 1 bytes @ 0x0
   734                           
   735  0070                     ?_lcd_puts:	
   736                           ; 1 bytes @ 0x0
   737                           
   738  0070                     ??_isdigit:	
   739                           ; 1 bytes @ 0x0
   740                           
   741  0070                     ?_main:	
   742                           ; 1 bytes @ 0x0
   743                           
   744  0070                     ?_delay:	
   745                           ; 1 bytes @ 0x0
   746                           
   747  0070                     ?_lcd_init_write:	
   748                           ; 1 bytes @ 0x0
   749                           
   750  0070                     ?_lcd_data:	
   751                           ; 1 bytes @ 0x0
   752                           
   753  0070                     ?__Umul8_16:	
   754                           ; 1 bytes @ 0x0
   755                           
   756  0070                     ?___wmul:	
   757                           ; 2 bytes @ 0x0
   758                           
   759  0070                     ?___awmod:	
   760                           ; 2 bytes @ 0x0
   761                           
   762  0070                     ?___lwmod:	
   763                           ; 2 bytes @ 0x0
   764                           
   765  0070                     ?__tdiv_to_l_:	
   766                           ; 2 bytes @ 0x0
   767                           
   768  0070                     ?__div_to_l_:	
   769                           ; 4 bytes @ 0x0
   770                           
   771  0070                     ?___lldiv:	
   772                           ; 4 bytes @ 0x0
   773                           
   774  0070                     ?___flneg:	
   775                           ; 4 bytes @ 0x0
   776                           
   777  0070                     ?___llmod:	
   778                           ; 4 bytes @ 0x0
   779                           
   780  0070                     ?___fldiv:	
   781                           ; 4 bytes @ 0x0
   782                           
   783  0070                     ?___xxtofl:	
   784                           ; 4 bytes @ 0x0
   785                           
   786  0070                     ADC_init@r:	
   787                           ; 4 bytes @ 0x0
   788                           
   789  0070                     __Umul8_16@multiplicand:	
   790                           ; 1 bytes @ 0x0
   791                           
   792  0070                     _isdigit$740:	
   793                           ; 1 bytes @ 0x0
   794                           
   795  0070                     delay@j:	
   796                           ; 1 bytes @ 0x0
   797                           
   798  0070                     ___wmul@multiplier:	
   799                           ; 2 bytes @ 0x0
   800                           
   801  0070                     ___awmod@divisor:	
   802                           ; 2 bytes @ 0x0
   803                           
   804  0070                     ___lwmod@divisor:	
   805                           ; 2 bytes @ 0x0
   806                           
   807  0070                     ___lldiv@divisor:	
   808                           ; 2 bytes @ 0x0
   809                           
   810  0070                     __div_to_l_@f1:	
   811                           ; 4 bytes @ 0x0
   812                           
   813  0070                     ___fleq@ff1:	
   814                           ; 4 bytes @ 0x0
   815                           
   816  0070                     ___flge@ff1:	
   817                           ; 4 bytes @ 0x0
   818                           
   819  0070                     ___flneg@f1:	
   820                           ; 4 bytes @ 0x0
   821                           
   822  0070                     __tdiv_to_l_@f1:	
   823                           ; 4 bytes @ 0x0
   824                           
   825  0070                     ___llmod@divisor:	
   826                           ; 4 bytes @ 0x0
   827                           
   828  0070                     ___fldiv@a:	
   829                           ; 4 bytes @ 0x0
   830                           
   831  0070                     ___xxtofl@val:	
   832                           ; 4 bytes @ 0x0
   833                           
   834                           
   835                           ; 4 bytes @ 0x0
   836  0070                     	ds	1
   837  0071                     ??_ADC_init:
   838  0071                     isdigit@c:	
   839                           ; 1 bytes @ 0x1
   840                           
   841                           
   842                           ; 1 bytes @ 0x1
   843  0071                     	ds	1
   844  0072                     ??__Umul8_16:
   845  0072                     ??_delay:	
   846                           ; 1 bytes @ 0x2
   847                           
   848  0072                     delay@i:	
   849                           ; 1 bytes @ 0x2
   850                           
   851  0072                     ___wmul@multiplicand:	
   852                           ; 2 bytes @ 0x2
   853                           
   854  0072                     ___awmod@dividend:	
   855                           ; 2 bytes @ 0x2
   856                           
   857  0072                     ___lwmod@dividend:	
   858                           ; 2 bytes @ 0x2
   859                           
   860                           
   861                           ; 2 bytes @ 0x2
   862  0072                     	ds	1
   863  0073                     ADC_init@s:
   864                           
   865                           ; 1 bytes @ 0x3
   866  0073                     	ds	1
   867  0074                     ??_lcd_com:
   868  0074                     ??_lcd_init_write:	
   869                           ; 1 bytes @ 0x4
   870                           
   871  0074                     ??___wmul:	
   872                           ; 1 bytes @ 0x4
   873                           
   874  0074                     ??___awmod:	
   875                           ; 1 bytes @ 0x4
   876                           
   877  0074                     ??___flneg:	
   878                           ; 1 bytes @ 0x4
   879                           
   880  0074                     ??___lwmod:	
   881                           ; 1 bytes @ 0x4
   882                           
   883  0074                     ??___xxtofl:	
   884                           ; 1 bytes @ 0x4
   885                           
   886  0074                     lcd_init_write@a:	
   887                           ; 1 bytes @ 0x4
   888                           
   889  0074                     ___wmul@product:	
   890                           ; 1 bytes @ 0x4
   891                           
   892  0074                     __Umul8_16@product:	
   893                           ; 2 bytes @ 0x4
   894                           
   895  0074                     ___lldiv@dividend:	
   896                           ; 2 bytes @ 0x4
   897                           
   898  0074                     __div_to_l_@f2:	
   899                           ; 4 bytes @ 0x4
   900                           
   901  0074                     ___fleq@ff2:	
   902                           ; 4 bytes @ 0x4
   903                           
   904  0074                     ___flge@ff2:	
   905                           ; 4 bytes @ 0x4
   906                           
   907  0074                     __tdiv_to_l_@f2:	
   908                           ; 4 bytes @ 0x4
   909                           
   910  0074                     ___llmod@dividend:	
   911                           ; 4 bytes @ 0x4
   912                           
   913  0074                     ___fldiv@b:	
   914                           ; 4 bytes @ 0x4
   915                           
   916                           
   917                           ; 4 bytes @ 0x4
   918  0074                     	ds	1
   919  0075                     ___awmod@counter:
   920  0075                     ___lwmod@counter:	
   921                           ; 1 bytes @ 0x5
   922                           
   923                           
   924                           ; 1 bytes @ 0x5
   925  0075                     	ds	1
   926  0076                     ?___lwdiv:
   927  0076                     lcd_com@a:	
   928                           ; 2 bytes @ 0x6
   929                           
   930  0076                     ___awmod@sign:	
   931                           ; 1 bytes @ 0x6
   932                           
   933  0076                     ___lwdiv@divisor:	
   934                           ; 1 bytes @ 0x6
   935                           
   936  0076                     __Umul8_16@word_mpld:	
   937                           ; 2 bytes @ 0x6
   938                           
   939                           
   940                           ; 2 bytes @ 0x6
   941  0076                     	ds	1
   942  0077                     ?___awdiv:
   943  0077                     lcd_com@temp:	
   944                           ; 2 bytes @ 0x7
   945                           
   946  0077                     ___awdiv@divisor:	
   947                           ; 1 bytes @ 0x7
   948                           
   949                           
   950                           ; 2 bytes @ 0x7
   951  0077                     	ds	1
   952  0078                     ??_lcd_init:
   953  0078                     ??__tdiv_to_l_:	
   954                           ; 1 bytes @ 0x8
   955                           
   956  0078                     ??__div_to_l_:	
   957                           ; 1 bytes @ 0x8
   958                           
   959  0078                     ??_lcd_data:	
   960                           ; 1 bytes @ 0x8
   961                           
   962  0078                     ??___lldiv:	
   963                           ; 1 bytes @ 0x8
   964                           
   965  0078                     ??___fleq:	
   966                           ; 1 bytes @ 0x8
   967                           
   968  0078                     ??___flge:	
   969                           ; 1 bytes @ 0x8
   970                           
   971  0078                     ??___llmod:	
   972                           ; 1 bytes @ 0x8
   973                           
   974  0078                     ??___fldiv:	
   975                           ; 1 bytes @ 0x8
   976                           
   977  0078                     lcd_data@a:	
   978                           ; 1 bytes @ 0x8
   979                           
   980  0078                     __Umul8_16@multiplier:	
   981                           ; 1 bytes @ 0x8
   982                           
   983  0078                     ___xxtofl@sign:	
   984                           ; 1 bytes @ 0x8
   985                           
   986  0078                     ___lwdiv@dividend:	
   987                           ; 1 bytes @ 0x8
   988                           
   989                           
   990                           ; 2 bytes @ 0x8
   991  0078                     	ds	1
   992  0079                     ??_lcd_puts:
   993  0079                     ___llmod@counter:	
   994                           ; 1 bytes @ 0x9
   995                           
   996  0079                     ___xxtofl@exp:	
   997                           ; 1 bytes @ 0x9
   998                           
   999  0079                     ___awdiv@dividend:	
  1000                           ; 1 bytes @ 0x9
  1001                           
  1002  0079                     ___lldiv@quotient:	
  1003                           ; 2 bytes @ 0x9
  1004                           
  1005                           
  1006                           ; 4 bytes @ 0x9
  1007  0079                     	ds	1
  1008  007A                     ??___lwdiv:
  1009  007A                     lcd_puts@str:	
  1010                           ; 1 bytes @ 0xA
  1011                           
  1012  007A                     ___xxtofl@arg:	
  1013                           ; 1 bytes @ 0xA
  1014                           
  1015                           
  1016                           ; 4 bytes @ 0xA
  1017  007A                     	ds	1
  1018  007B                     ??___awdiv:
  1019  007B                     lcd_puts@i:	
  1020                           ; 1 bytes @ 0xB
  1021                           
  1022  007B                     ___lwdiv@quotient:	
  1023                           ; 2 bytes @ 0xB
  1024                           
  1025                           
  1026                           ; 2 bytes @ 0xB
  1027  007B                     	ds	2
  1028  007D                     ___lldiv@counter:
  1029  007D                     ___lwdiv@counter:	
  1030                           ; 1 bytes @ 0xD
  1031                           
  1032                           
  1033                           ; 1 bytes @ 0xD
  1034  007D                     	ds	1
  1035  007E                     ??___flsub:
  1036                           
  1037                           	psect	cstackBANK0
  1038  0020                     __pcstackBANK0:	
  1039                           ; 1 bytes @ 0xE
  1040                           
  1041  0020                     ?_ADC_read:
  1042  0020                     ___awdiv@counter:	
  1043                           ; 4 bytes @ 0x0
  1044                           
  1045  0020                     __div_to_l_@quot:	
  1046                           ; 1 bytes @ 0x0
  1047                           
  1048  0020                     __tdiv_to_l_@quot:	
  1049                           ; 4 bytes @ 0x0
  1050                           
  1051  0020                     ___fldiv@rem:	
  1052                           ; 4 bytes @ 0x0
  1053                           
  1054                           
  1055                           ; 4 bytes @ 0x0
  1056  0020                     	ds	1
  1057  0021                     ___awdiv@sign:
  1058                           
  1059                           ; 1 bytes @ 0x1
  1060  0021                     	ds	1
  1061  0022                     ___awdiv@quotient:
  1062                           
  1063                           ; 2 bytes @ 0x2
  1064  0022                     	ds	2
  1065  0024                     ??_ADC_read:
  1066  0024                     ?___flmul:	
  1067                           ; 1 bytes @ 0x4
  1068                           
  1069  0024                     __div_to_l_@cntr:	
  1070                           ; 4 bytes @ 0x4
  1071                           
  1072  0024                     __tdiv_to_l_@cntr:	
  1073                           ; 1 bytes @ 0x4
  1074                           
  1075  0024                     ___fldiv@sign:	
  1076                           ; 1 bytes @ 0x4
  1077                           
  1078  0024                     ___flmul@b:	
  1079                           ; 1 bytes @ 0x4
  1080                           
  1081                           
  1082                           ; 4 bytes @ 0x4
  1083  0024                     	ds	1
  1084  0025                     __div_to_l_@exp1:
  1085  0025                     __tdiv_to_l_@exp1:	
  1086                           ; 1 bytes @ 0x5
  1087                           
  1088  0025                     ___fldiv@new_exp:	
  1089                           ; 1 bytes @ 0x5
  1090                           
  1091                           
  1092                           ; 2 bytes @ 0x5
  1093  0025                     	ds	1
  1094  0026                     ADC_read@channel:
  1095                           
  1096                           ; 1 bytes @ 0x6
  1097  0026                     	ds	1
  1098  0027                     ___fldiv@grs:
  1099                           
  1100                           ; 4 bytes @ 0x7
  1101  0027                     	ds	1
  1102  0028                     ___flmul@a:
  1103                           
  1104                           ; 4 bytes @ 0x8
  1105  0028                     	ds	3
  1106  002B                     ___fldiv@bexp:
  1107                           
  1108                           ; 1 bytes @ 0xB
  1109  002B                     	ds	1
  1110  002C                     ??___flmul:
  1111  002C                     ___fldiv@aexp:	
  1112                           ; 1 bytes @ 0xC
  1113                           
  1114                           
  1115                           ; 1 bytes @ 0xC
  1116  002C                     	ds	5
  1117  0031                     ___flmul@sign:
  1118                           
  1119                           ; 1 bytes @ 0x11
  1120  0031                     	ds	1
  1121  0032                     ___flmul@grs:
  1122                           
  1123                           ; 4 bytes @ 0x12
  1124  0032                     	ds	4
  1125  0036                     ___flmul@aexp:
  1126                           
  1127                           ; 1 bytes @ 0x16
  1128  0036                     	ds	1
  1129  0037                     ___flmul@bexp:
  1130                           
  1131                           ; 1 bytes @ 0x17
  1132  0037                     	ds	1
  1133  0038                     ___flmul@prod:
  1134                           
  1135                           ; 4 bytes @ 0x18
  1136  0038                     	ds	4
  1137  003C                     ___flmul@temp:
  1138                           
  1139                           ; 2 bytes @ 0x1C
  1140  003C                     	ds	2
  1141  003E                     ?_fround:
  1142  003E                     ?_scale:	
  1143                           ; 4 bytes @ 0x1E
  1144                           
  1145  003E                     ?___fltol:	
  1146                           ; 4 bytes @ 0x1E
  1147                           
  1148  003E                     ___fltol@f1:	
  1149                           ; 4 bytes @ 0x1E
  1150                           
  1151                           
  1152                           ; 4 bytes @ 0x1E
  1153  003E                     	ds	4
  1154  0042                     ??_fround:
  1155  0042                     ??_scale:	
  1156                           ; 1 bytes @ 0x22
  1157                           
  1158  0042                     ??___fltol:	
  1159                           ; 1 bytes @ 0x22
  1160                           
  1161                           
  1162                           ; 1 bytes @ 0x22
  1163  0042                     	ds	5
  1164  0047                     ___fltol@sign1:
  1165                           
  1166                           ; 1 bytes @ 0x27
  1167  0047                     	ds	1
  1168  0048                     ___fltol@exp1:
  1169                           
  1170                           ; 1 bytes @ 0x28
  1171  0048                     	ds	1
  1172  0049                     _fround$922:
  1173                           
  1174                           ; 4 bytes @ 0x29
  1175  0049                     	ds	3
  1176  004C                     _scale$923:
  1177                           
  1178                           ; 4 bytes @ 0x2C
  1179  004C                     	ds	1
  1180  004D                     _fround$921:
  1181                           
  1182                           ; 4 bytes @ 0x2D
  1183  004D                     	ds	3
  1184  0050                     scale@scl:
  1185                           
  1186                           ; 1 bytes @ 0x30
  1187  0050                     	ds	1
  1188  0051                     fround@prec:
  1189                           
  1190                           ; 1 bytes @ 0x31
  1191  0051                     	ds	1
  1192  0052                     ?___fladd:
  1193  0052                     ___fladd@b:	
  1194                           ; 4 bytes @ 0x32
  1195                           
  1196                           
  1197                           ; 4 bytes @ 0x32
  1198  0052                     	ds	4
  1199  0056                     ___fladd@a:
  1200                           
  1201                           ; 4 bytes @ 0x36
  1202  0056                     	ds	4
  1203  005A                     ??___fladd:
  1204                           
  1205                           ; 1 bytes @ 0x3A
  1206  005A                     	ds	8
  1207  0062                     ___fladd@signs:
  1208                           
  1209                           ; 1 bytes @ 0x42
  1210  0062                     	ds	1
  1211  0063                     ___fladd@aexp:
  1212                           
  1213                           ; 1 bytes @ 0x43
  1214  0063                     	ds	1
  1215  0064                     ___fladd@bexp:
  1216                           
  1217                           ; 1 bytes @ 0x44
  1218  0064                     	ds	1
  1219  0065                     ___fladd@grs:
  1220                           
  1221                           ; 1 bytes @ 0x45
  1222  0065                     	ds	1
  1223  0066                     ?___flsub:
  1224  0066                     ___flsub@a:	
  1225                           ; 4 bytes @ 0x46
  1226                           
  1227                           
  1228                           ; 4 bytes @ 0x46
  1229  0066                     	ds	4
  1230  006A                     ___flsub@b:
  1231                           
  1232                           ; 4 bytes @ 0x4A
  1233  006A                     	ds	4
  1234  006E                     ??_main:
  1235                           
  1236                           ; 1 bytes @ 0x4E
  1237  006E                     	ds	1
  1238                           
  1239                           	psect	maintext
  1240  1E46                     __pmaintext:	
  1241 ;;
  1242 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1243 ;;
  1244 ;; *************** function _main *****************
  1245 ;; Defined at:
  1246 ;;		line 27 in file "main.c"
  1247 ;; Parameters:    Size  Location     Type
  1248 ;;		None
  1249 ;; Auto vars:     Size  Location     Type
  1250 ;;  temp            4   41[BANK1 ] float 
  1251 ;;  adc_input       4   37[BANK1 ] float 
  1252 ;; Return value:  Size  Location     Type
  1253 ;;                  1    wreg      void 
  1254 ;; Registers used:
  1255 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1256 ;; Tracked objects:
  1257 ;;		On entry : B00/0
  1258 ;;		On exit  : 0/0
  1259 ;;		Unchanged: 0/0
  1260 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1261 ;;      Params:         0       0       0       0       0
  1262 ;;      Locals:         0       0       8       0       0
  1263 ;;      Temps:          0       1       0       0       0
  1264 ;;      Totals:         0       1       8       0       0
  1265 ;;Total ram usage:        9 bytes
  1266 ;; Hardware stack levels required when called:    4
  1267 ;; This function calls:
  1268 ;;		_ADC_init
  1269 ;;		_ADC_read
  1270 ;;		___fldiv
  1271 ;;		_lcd_com
  1272 ;;		_lcd_init
  1273 ;;		_lcd_puts
  1274 ;;		_sprintf
  1275 ;; This function is called by:
  1276 ;;		Startup code after reset
  1277 ;; This function uses a non-reentrant model
  1278 ;;
  1279                           
  1280                           
  1281                           ;psect for function _main
  1282  1E46                     _main:
  1283  1E46                     l3871:	
  1284                           ;incstack = 0
  1285                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1286                           
  1287                           
  1288                           ;main.c: 28:     TRISD = 0;
  1289  1E46  1683               	bsf	3,5	;RP0=1, select bank1
  1290  1E47  1303               	bcf	3,6	;RP1=0, select bank1
  1291  1E48  0188               	clrf	8	;volatile
  1292  1E49                     l3873:
  1293                           
  1294                           ;main.c: 29:     TRISA0 = 1;
  1295  1E49  1405               	bsf	5,0	;volatile
  1296  1E4A                     l3875:
  1297                           
  1298                           ;main.c: 30:     ADC_init(FOSC_DIV_8, AN2_AN3);
  1299  1E4A  3003               	movlw	3
  1300  1E4B  1283               	bcf	3,5	;RP0=0, select bank0
  1301  1E4C  1303               	bcf	3,6	;RP1=0, select bank0
  1302  1E4D  00EE               	movwf	??_main
  1303  1E4E  086E               	movf	??_main,w
  1304  1E4F  00F0               	movwf	ADC_init@r
  1305  1E50  3001               	movlw	1
  1306  1E51  160A  158A  232C  160A  158A  	fcall	_ADC_init
  1307  1E56                     l3877:
  1308                           
  1309                           ;main.c: 31:     lcd_init();
  1310  1E56  160A  158A  26BE  160A  158A  	fcall	_lcd_init
  1311  1E5B                     l3879:
  1312                           
  1313                           ;main.c: 33:     {;main.c: 34:         double adc_input = ADC_read(0);
  1314  1E5B  3000               	movlw	0
  1315  1E5C  160A  158A  2531  160A  158A  	fcall	_ADC_read
  1316  1E61  1283               	bcf	3,5	;RP0=0, select bank0
  1317  1E62  1303               	bcf	3,6	;RP1=0, select bank0
  1318  1E63  0823               	movf	?_ADC_read+3,w
  1319  1E64  1683               	bsf	3,5	;RP0=1, select bank1
  1320  1E65  1303               	bcf	3,6	;RP1=0, select bank1
  1321  1E66  00C8               	movwf	(main@adc_input+3)^(0+128)
  1322  1E67  1283               	bcf	3,5	;RP0=0, select bank0
  1323  1E68  1303               	bcf	3,6	;RP1=0, select bank0
  1324  1E69  0822               	movf	?_ADC_read+2,w
  1325  1E6A  1683               	bsf	3,5	;RP0=1, select bank1
  1326  1E6B  1303               	bcf	3,6	;RP1=0, select bank1
  1327  1E6C  00C7               	movwf	(main@adc_input+2)^(0+128)
  1328  1E6D  1283               	bcf	3,5	;RP0=0, select bank0
  1329  1E6E  1303               	bcf	3,6	;RP1=0, select bank0
  1330  1E6F  0821               	movf	?_ADC_read+1,w
  1331  1E70  1683               	bsf	3,5	;RP0=1, select bank1
  1332  1E71  1303               	bcf	3,6	;RP1=0, select bank1
  1333  1E72  00C6               	movwf	(main@adc_input+1)^(0+128)
  1334  1E73  1283               	bcf	3,5	;RP0=0, select bank0
  1335  1E74  1303               	bcf	3,6	;RP1=0, select bank0
  1336  1E75  0820               	movf	?_ADC_read,w
  1337  1E76  1683               	bsf	3,5	;RP0=1, select bank1
  1338  1E77  1303               	bcf	3,6	;RP1=0, select bank1
  1339  1E78  00C5               	movwf	main@adc_input^(0+128)
  1340  1E79                     l3881:
  1341                           
  1342                           ;main.c: 35:         float temp = adc_input/ 2.046f;
  1343  1E79  3040               	movlw	64
  1344  1E7A  00F3               	movwf	___fldiv@a+3
  1345  1E7B  3002               	movlw	2
  1346  1E7C  00F2               	movwf	___fldiv@a+2
  1347  1E7D  30F1               	movlw	241
  1348  1E7E  00F1               	movwf	___fldiv@a+1
  1349  1E7F  30AA               	movlw	170
  1350  1E80  00F0               	movwf	___fldiv@a
  1351  1E81  0848               	movf	(main@adc_input+3)^(0+128),w
  1352  1E82  00F7               	movwf	___fldiv@b+3
  1353  1E83  0847               	movf	(main@adc_input+2)^(0+128),w
  1354  1E84  00F6               	movwf	___fldiv@b+2
  1355  1E85  0846               	movf	(main@adc_input+1)^(0+128),w
  1356  1E86  00F5               	movwf	___fldiv@b+1
  1357  1E87  0845               	movf	main@adc_input^(0+128),w
  1358  1E88  00F4               	movwf	___fldiv@b
  1359  1E89  160A  118A  218A  160A  158A  	fcall	___fldiv
  1360  1E8E  0873               	movf	?___fldiv+3,w
  1361  1E8F  1683               	bsf	3,5	;RP0=1, select bank1
  1362  1E90  1303               	bcf	3,6	;RP1=0, select bank1
  1363  1E91  00CC               	movwf	(main@temp+3)^(0+128)
  1364  1E92  0872               	movf	?___fldiv+2,w
  1365  1E93  00CB               	movwf	(main@temp+2)^(0+128)
  1366  1E94  0871               	movf	?___fldiv+1,w
  1367  1E95  00CA               	movwf	(main@temp+1)^(0+128)
  1368  1E96  0870               	movf	?___fldiv,w
  1369  1E97  00C9               	movwf	main@temp^(0+128)
  1370  1E98                     l3883:
  1371                           
  1372                           ;main.c: 36:         sprintf(buffer,"Nhiet do: %3.2f",temp);
  1373  1E98  3091               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1374  1E99  1283               	bcf	3,5	;RP0=0, select bank0
  1375  1E9A  1303               	bcf	3,6	;RP1=0, select bank0
  1376  1E9B  00EE               	movwf	??_main
  1377  1E9C  086E               	movf	??_main,w
  1378  1E9D  1683               	bsf	3,5	;RP0=1, select bank1
  1379  1E9E  1303               	bcf	3,6	;RP1=0, select bank1
  1380  1E9F  00A0               	movwf	sprintf@f^(0+128)
  1381  1EA0  084C               	movf	(main@temp+3)^(0+128),w
  1382  1EA1  00A4               	movwf	((?_sprintf+3)^(0+128)+1)
  1383  1EA2  084B               	movf	(main@temp+2)^(0+128),w
  1384  1EA3  00A3               	movwf	((?_sprintf+2)^(0+128)+1)
  1385  1EA4  084A               	movf	(main@temp+1)^(0+128),w
  1386  1EA5  00A2               	movwf	((?_sprintf+1)^(0+128)+1)
  1387  1EA6  0849               	movf	main@temp^(0+128),w
  1388  1EA7  00A1               	movwf	(?_sprintf^(0+128)+1)
  1389  1EA8  3090               	movlw	(low (_buffer| (0+256)))& (0+255)
  1390  1EA9  120A  118A  206C  160A  158A  	fcall	_sprintf
  1391  1EAE                     l3885:
  1392                           
  1393                           ;main.c: 37:         lcd_com(0x80);
  1394  1EAE  3080               	movlw	128
  1395  1EAF  160A  158A  248B  160A  158A  	fcall	_lcd_com
  1396  1EB4                     l3887:
  1397                           
  1398                           ;main.c: 38:         lcd_puts(buffer);
  1399  1EB4  3090               	movlw	(low (_buffer| (0+256)))& (0+255)
  1400  1EB5  160A  158A  230B  160A  158A  	fcall	_lcd_puts
  1401  1EBA  2E5B               	goto	l3879
  1402  1EBB  120A  118A  2800   	ljmp	start
  1403  1EBE                     __end_of_main:
  1404                           
  1405                           	psect	text1
  1406  006C                     __ptext1:	
  1407 ;; *************** function _sprintf *****************
  1408 ;; Defined at:
  1409 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  1410 ;; Parameters:    Size  Location     Type
  1411 ;;  sp              1    wreg     PTR unsigned char 
  1412 ;;		 -> buffer(16), 
  1413 ;;  f               1    0[BANK1 ] PTR const unsigned char 
  1414 ;;		 -> STR_1(16), 
  1415 ;; Auto vars:     Size  Location     Type
  1416 ;;  sp              1   33[BANK1 ] PTR unsigned char 
  1417 ;;		 -> buffer(16), 
  1418 ;;  fval            4   29[BANK1 ] PTR unsigned char 
  1419 ;;  tmpval          4   23[BANK1 ] struct .
  1420 ;;  val             4   15[BANK1 ] unsigned long 
  1421 ;;  prec            2   34[BANK1 ] int 
  1422 ;;  eexp            2   27[BANK1 ] int 
  1423 ;;  width           2   21[BANK1 ] int 
  1424 ;;  flag            2   19[BANK1 ] unsigned short 
  1425 ;;  cp              2    0        PTR const unsigned char 
  1426 ;;  len             2    0        unsigned int 
  1427 ;;  c               1   36[BANK1 ] unsigned char 
  1428 ;;  ap              1   14[BANK1 ] PTR void [1]
  1429 ;;		 -> ?_sprintf(2), 
  1430 ;;  d               1    0        unsigned char 
  1431 ;; Return value:  Size  Location     Type
  1432 ;;                  2    0[BANK1 ] int 
  1433 ;; Registers used:
  1434 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1435 ;; Tracked objects:
  1436 ;;		On entry : 0/0
  1437 ;;		On exit  : 0/0
  1438 ;;		Unchanged: 0/0
  1439 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1440 ;;      Params:         0       0       5       0       0
  1441 ;;      Locals:         0       0      27       0       0
  1442 ;;      Temps:          0       0       5       0       0
  1443 ;;      Totals:         0       0      37       0       0
  1444 ;;Total ram usage:       37 bytes
  1445 ;; Hardware stack levels used:    1
  1446 ;; Hardware stack levels required when called:    3
  1447 ;; This function calls:
  1448 ;;		___awdiv
  1449 ;;		___fladd
  1450 ;;		___fleq
  1451 ;;		___flge
  1452 ;;		___flmul
  1453 ;;		___flneg
  1454 ;;		___flsub
  1455 ;;		___fltol
  1456 ;;		___lldiv
  1457 ;;		___llmod
  1458 ;;		___wmul
  1459 ;;		___xxtofl
  1460 ;;		__div_to_l_
  1461 ;;		__tdiv_to_l_
  1462 ;;		_fround
  1463 ;;		_isdigit
  1464 ;;		_scale
  1465 ;; This function is called by:
  1466 ;;		_main
  1467 ;; This function uses a non-reentrant model
  1468 ;;
  1469                           
  1470                           
  1471                           ;psect for function _sprintf
  1472  006C                     _sprintf:
  1473                           
  1474                           ;incstack = 0
  1475                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1476                           ;sprintf@sp stored from wreg
  1477  006C  1683               	bsf	3,5	;RP0=1, select bank1
  1478  006D  1303               	bcf	3,6	;RP1=0, select bank1
  1479  006E  00C1               	movwf	sprintf@sp^(0+128)
  1480  006F                     l3269:
  1481                           
  1482                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 517:  
      +                          int prec;
  1483  006F  30A1               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1484  0070  00A5               	movwf	??_sprintf^(0+128)
  1485  0071  0825               	movf	??_sprintf^(0+128),w
  1486  0072  00AE               	movwf	sprintf@ap^(0+128)
  1487                           
  1488                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1489  0073  2FD0               	goto	l3519
  1490  0074                     l3271:
  1491                           
  1492                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1493  0074  3025               	movlw	37
  1494  0075  0644               	xorwf	sprintf@c^(0+128),w
  1495  0076  1903               	btfsc	3,2
  1496  0077  2879               	goto	u5411
  1497  0078  287A               	goto	u5410
  1498  0079                     u5411:
  1499  0079  2886               	goto	l3277
  1500  007A                     u5410:
  1501  007A                     l3273:
  1502                           
  1503                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1504  007A  0844               	movf	sprintf@c^(0+128),w
  1505  007B  00A5               	movwf	??_sprintf^(0+128)
  1506  007C  0841               	movf	sprintf@sp^(0+128),w
  1507  007D  0084               	movwf	4
  1508  007E  0825               	movf	??_sprintf^(0+128),w
  1509  007F  1783               	bsf	3,7	;select IRP bank2
  1510  0080  0080               	movwf	0
  1511  0081                     l3275:
  1512  0081  3001               	movlw	1
  1513  0082  00A5               	movwf	??_sprintf^(0+128)
  1514  0083  0825               	movf	??_sprintf^(0+128),w
  1515  0084  07C1               	addwf	sprintf@sp^(0+128),f
  1516                           
  1517                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
  1518  0085  2FD0               	goto	l3519
  1519  0086                     l3277:
  1520                           
  1521                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 563:   width = 0;
  1522  0086  01B5               	clrf	sprintf@width^(0+128)
  1523  0087  01B6               	clrf	(sprintf@width+1)^(0+128)
  1524                           
  1525                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1526  0088  01B3               	clrf	sprintf@flag^(0+128)
  1527  0089  01B4               	clrf	(sprintf@flag+1)^(0+128)
  1528  008A                     l3279:
  1529                           
  1530                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 614:   if(isdigit
      +                          ((unsigned)*f)) {
  1531  008A  0820               	movf	sprintf@f^(0+128),w
  1532  008B  0084               	movwf	4
  1533  008C  160A  158A  2000  120A  118A  	fcall	stringdir
  1534  0091  160A  118A  2001  120A  118A  	fcall	_isdigit
  1535  0096  1C03               	btfss	3,0
  1536  0097  2899               	goto	u5421
  1537  0098  289A               	goto	u5420
  1538  0099                     u5421:
  1539  0099  28DA               	goto	l3291
  1540  009A                     u5420:
  1541  009A                     l3281:
  1542                           
  1543                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 615:    width = 0
      +                          ;
  1544  009A  1683               	bsf	3,5	;RP0=1, select bank1
  1545  009B  1303               	bcf	3,6	;RP1=0, select bank1
  1546  009C  01B5               	clrf	sprintf@width^(0+128)
  1547  009D  01B6               	clrf	(sprintf@width+1)^(0+128)
  1548  009E                     l3283:
  1549                           
  1550                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 617:     width *=
      +                           10;
  1551  009E  300A               	movlw	10
  1552  009F  00F0               	movwf	___wmul@multiplier
  1553  00A0  3000               	movlw	0
  1554  00A1  00F1               	movwf	___wmul@multiplier+1
  1555  00A2  1683               	bsf	3,5	;RP0=1, select bank1
  1556  00A3  1303               	bcf	3,6	;RP1=0, select bank1
  1557  00A4  0836               	movf	(sprintf@width+1)^(0+128),w
  1558  00A5  00F3               	movwf	___wmul@multiplicand+1
  1559  00A6  0835               	movf	sprintf@width^(0+128),w
  1560  00A7  00F2               	movwf	___wmul@multiplicand
  1561  00A8  160A  158A  2373  120A  118A  	fcall	___wmul
  1562  00AD  0871               	movf	?___wmul+1,w
  1563  00AE  1683               	bsf	3,5	;RP0=1, select bank1
  1564  00AF  1303               	bcf	3,6	;RP1=0, select bank1
  1565  00B0  00B6               	movwf	(sprintf@width+1)^(0+128)
  1566  00B1  0870               	movf	?___wmul,w
  1567  00B2  00B5               	movwf	sprintf@width^(0+128)
  1568  00B3                     l3285:
  1569                           
  1570                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 618:        width
      +                           += *f++ - '0';
  1571  00B3  0820               	movf	sprintf@f^(0+128),w
  1572  00B4  0084               	movwf	4
  1573  00B5  160A  158A  2000  120A  118A  	fcall	stringdir
  1574  00BA  3ED0               	addlw	208
  1575  00BB  00A5               	movwf	??_sprintf^(0+128)
  1576  00BC  30FF               	movlw	255
  1577  00BD  1803               	skipnc
  1578  00BE  3000               	movlw	0
  1579  00BF  00A6               	movwf	(??_sprintf^(0+128)+1)
  1580  00C0  0825               	movf	??_sprintf^(0+128),w
  1581  00C1  07B5               	addwf	sprintf@width^(0+128),f
  1582  00C2  1803               	skipnc
  1583  00C3  0AB6               	incf	(sprintf@width+1)^(0+128),f
  1584  00C4  0826               	movf	(??_sprintf+1)^(0+128),w
  1585  00C5  07B6               	addwf	(sprintf@width+1)^(0+128),f
  1586  00C6                     l3287:
  1587  00C6  3001               	movlw	1
  1588  00C7  00A5               	movwf	??_sprintf^(0+128)
  1589  00C8  0825               	movf	??_sprintf^(0+128),w
  1590  00C9  07A0               	addwf	sprintf@f^(0+128),f
  1591  00CA                     l3289:
  1592                           
  1593                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 619:    } while(i
      +                          sdigit((unsigned)*f));
  1594  00CA  0820               	movf	sprintf@f^(0+128),w
  1595  00CB  0084               	movwf	4
  1596  00CC  160A  158A  2000  120A  118A  	fcall	stringdir
  1597  00D1  160A  118A  2001  120A  118A  	fcall	_isdigit
  1598  00D6  1803               	btfsc	3,0
  1599  00D7  28D9               	goto	u5431
  1600  00D8  28DA               	goto	u5430
  1601  00D9                     u5431:
  1602  00D9  289E               	goto	l3283
  1603  00DA                     u5430:
  1604  00DA                     l3291:
  1605                           
  1606                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 628:   if(*f == '
      +                          .') {
  1607  00DA  1683               	bsf	3,5	;RP0=1, select bank1
  1608  00DB  1303               	bcf	3,6	;RP1=0, select bank1
  1609  00DC  0820               	movf	sprintf@f^(0+128),w
  1610  00DD  0084               	movwf	4
  1611  00DE  160A  158A  2000  120A  118A  	fcall	stringdir
  1612  00E3  3A2E               	xorlw	46
  1613  00E4  1D03               	skipz
  1614  00E5  28E7               	goto	u5441
  1615  00E6  28E8               	goto	u5440
  1616  00E7                     u5441:
  1617  00E7  292D               	goto	l3307
  1618  00E8                     u5440:
  1619  00E8                     l3293:
  1620                           
  1621                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 629:    flag |= 0
      +                          x4000;
  1622  00E8  1734               	bsf	(sprintf@flag^(0+128)+1),6
  1623  00E9                     l3295:
  1624                           
  1625                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 630:    f++;
  1626  00E9  3001               	movlw	1
  1627  00EA  00A5               	movwf	??_sprintf^(0+128)
  1628  00EB  0825               	movf	??_sprintf^(0+128),w
  1629  00EC  07A0               	addwf	sprintf@f^(0+128),f
  1630  00ED                     l3297:
  1631                           
  1632                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 644:    {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 645:     prec = 0;
  1633  00ED  01C2               	clrf	sprintf@prec^(0+128)
  1634  00EE  01C3               	clrf	(sprintf@prec+1)^(0+128)
  1635                           
  1636                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  1637  00EF  291C               	goto	l3305
  1638  00F0                     l3299:
  1639                           
  1640                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 647:      prec *=
      +                           10;
  1641  00F0  300A               	movlw	10
  1642  00F1  00F0               	movwf	___wmul@multiplier
  1643  00F2  3000               	movlw	0
  1644  00F3  00F1               	movwf	___wmul@multiplier+1
  1645  00F4  1683               	bsf	3,5	;RP0=1, select bank1
  1646  00F5  1303               	bcf	3,6	;RP1=0, select bank1
  1647  00F6  0843               	movf	(sprintf@prec+1)^(0+128),w
  1648  00F7  00F3               	movwf	___wmul@multiplicand+1
  1649  00F8  0842               	movf	sprintf@prec^(0+128),w
  1650  00F9  00F2               	movwf	___wmul@multiplicand
  1651  00FA  160A  158A  2373  120A  118A  	fcall	___wmul
  1652  00FF  0871               	movf	?___wmul+1,w
  1653  0100  1683               	bsf	3,5	;RP0=1, select bank1
  1654  0101  1303               	bcf	3,6	;RP1=0, select bank1
  1655  0102  00C3               	movwf	(sprintf@prec+1)^(0+128)
  1656  0103  0870               	movf	?___wmul,w
  1657  0104  00C2               	movwf	sprintf@prec^(0+128)
  1658  0105                     l3301:
  1659                           
  1660                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 648:         prec
      +                           += *f++ - '0';
  1661  0105  0820               	movf	sprintf@f^(0+128),w
  1662  0106  0084               	movwf	4
  1663  0107  160A  158A  2000  120A  118A  	fcall	stringdir
  1664  010C  3ED0               	addlw	208
  1665  010D  00A5               	movwf	??_sprintf^(0+128)
  1666  010E  30FF               	movlw	255
  1667  010F  1803               	skipnc
  1668  0110  3000               	movlw	0
  1669  0111  00A6               	movwf	(??_sprintf^(0+128)+1)
  1670  0112  0825               	movf	??_sprintf^(0+128),w
  1671  0113  07C2               	addwf	sprintf@prec^(0+128),f
  1672  0114  1803               	skipnc
  1673  0115  0AC3               	incf	(sprintf@prec+1)^(0+128),f
  1674  0116  0826               	movf	(??_sprintf+1)^(0+128),w
  1675  0117  07C3               	addwf	(sprintf@prec+1)^(0+128),f
  1676  0118                     l3303:
  1677  0118  3001               	movlw	1
  1678  0119  00A5               	movwf	??_sprintf^(0+128)
  1679  011A  0825               	movf	??_sprintf^(0+128),w
  1680  011B  07A0               	addwf	sprintf@f^(0+128),f
  1681  011C                     l3305:
  1682                           
  1683                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  1684  011C  0820               	movf	sprintf@f^(0+128),w
  1685  011D  0084               	movwf	4
  1686  011E  160A  158A  2000  120A  118A  	fcall	stringdir
  1687  0123  160A  118A  2001  120A  118A  	fcall	_isdigit
  1688  0128  1803               	btfsc	3,0
  1689  0129  292B               	goto	u5451
  1690  012A  292C               	goto	u5450
  1691  012B                     u5451:
  1692  012B  28F0               	goto	l3299
  1693  012C                     u5450:
  1694  012C  2933               	goto	l3313
  1695  012D                     l3307:
  1696                           
  1697                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 652:    prec = 0;
  1698  012D  01C2               	clrf	sprintf@prec^(0+128)
  1699  012E  01C3               	clrf	(sprintf@prec+1)^(0+128)
  1700  012F                     l3309:
  1701                           
  1702                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 654:    flag |= 0
      +                          x1000;
  1703  012F  1634               	bsf	(sprintf@flag^(0+128)+1),4
  1704  0130  2933               	goto	l3313
  1705  0131                     l249:	
  1706                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 688:   case 'f':
  1707                           
  1708                           
  1709                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 689:    flag |= 0
      +                          x400;
  1710  0131  1534               	bsf	(sprintf@flag^(0+128)+1),2
  1711                           
  1712                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 690:    break;
  1713  0132  294F               	goto	l3315
  1714  0133                     l3313:
  1715  0133  3001               	movlw	1
  1716  0134  1683               	bsf	3,5	;RP0=1, select bank1
  1717  0135  1303               	bcf	3,6	;RP1=0, select bank1
  1718  0136  07A0               	addwf	sprintf@f^(0+128),f
  1719  0137  30FF               	movlw	-1
  1720  0138  0720               	addwf	sprintf@f^(0+128),w
  1721  0139  0084               	movwf	4
  1722  013A  160A  158A  2000  120A  118A  	fcall	stringdir
  1723  013F  00C4               	movwf	sprintf@c^(0+128)
  1724  0140  00A5               	movwf	??_sprintf^(0+128)
  1725  0141  01A6               	clrf	(??_sprintf^(0+128)+1)
  1726                           
  1727                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1728                           ; Switch size 1, requested type "simple"
  1729                           ; Number of cases is 1, Range of values is 0 to 0
  1730                           ; switch strategies available:
  1731                           ; Name         Instructions Cycles
  1732                           ; simple_byte            4     3 (average)
  1733                           ; direct_byte           11     8 (fixed)
  1734                           ; jumptable            260     6 (fixed)
  1735                           ;	Chosen strategy is simple_byte
  1736  0142  0826               	movf	(??_sprintf+1)^(0+128),w
  1737  0143  3A00               	xorlw	0	; case 0
  1738  0144  1903               	skipnz
  1739  0145  2947               	goto	l4001
  1740  0146  2FD0               	goto	l3519
  1741  0147                     l4001:
  1742                           
  1743                           ; Switch size 1, requested type "simple"
  1744                           ; Number of cases is 2, Range of values is 0 to 102
  1745                           ; switch strategies available:
  1746                           ; Name         Instructions Cycles
  1747                           ; simple_byte            7     4 (average)
  1748                           ; jumptable            260     6 (fixed)
  1749                           ;	Chosen strategy is simple_byte
  1750  0147  0825               	movf	??_sprintf^(0+128),w
  1751  0148  3A00               	xorlw	0	; case 0
  1752  0149  1903               	skipnz
  1753  014A  2FE2               	goto	l3521
  1754  014B  3A66               	xorlw	102	; case 102
  1755  014C  1903               	skipnz
  1756  014D  2931               	goto	l249
  1757  014E  2FD0               	goto	l3519
  1758  014F                     l3315:
  1759                           
  1760                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 851:   if(flag & 
      +                          (0x700)) {
  1761  014F  3000               	movlw	0
  1762  0150  0533               	andwf	sprintf@flag^(0+128),w
  1763  0151  00A5               	movwf	??_sprintf^(0+128)
  1764  0152  3007               	movlw	7
  1765  0153  0534               	andwf	(sprintf@flag+1)^(0+128),w
  1766  0154  00A6               	movwf	(??_sprintf+1)^(0+128)
  1767  0155  0825               	movf	??_sprintf^(0+128),w
  1768  0156  0426               	iorwf	(??_sprintf^(0+128)+1),w
  1769  0157  1903               	btfsc	3,2
  1770  0158  295A               	goto	u5461
  1771  0159  295B               	goto	u5460
  1772  015A                     u5461:
  1773  015A  2F0D               	goto	l3473
  1774  015B                     u5460:
  1775  015B                     l3317:
  1776                           
  1777                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 853:    if(flag &
      +                           0x1000)
  1778  015B  1E34               	btfss	(sprintf@flag+1)^(0+128),4
  1779  015C  295E               	goto	u5471
  1780  015D  295F               	goto	u5470
  1781  015E                     u5471:
  1782  015E  2963               	goto	l3321
  1783  015F                     u5470:
  1784  015F                     l3319:
  1785                           
  1786                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 855:     prec = 6
      +                          ;
  1787  015F  3006               	movlw	6
  1788  0160  00C2               	movwf	sprintf@prec^(0+128)
  1789  0161  3000               	movlw	0
  1790  0162  00C3               	movwf	(sprintf@prec^(0+128)+1)
  1791  0163                     l3321:
  1792                           
  1793                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 856:    fval = (*
      +                          (double *)__va_arg((*(double **)ap), (double)0));
  1794  0163  082E               	movf	sprintf@ap^(0+128),w
  1795  0164  0084               	movwf	4
  1796  0165  1383               	bcf	3,7	;select IRP bank0
  1797  0166  0800               	movf	0,w
  1798  0167  00BD               	movwf	sprintf@fval^(0+128)
  1799  0168  0A84               	incf	4,f
  1800  0169  0800               	movf	0,w
  1801  016A  00BE               	movwf	(sprintf@fval+1)^(0+128)
  1802  016B  0A84               	incf	4,f
  1803  016C  0800               	movf	0,w
  1804  016D  00BF               	movwf	(sprintf@fval+2)^(0+128)
  1805  016E  0A84               	incf	4,f
  1806  016F  0800               	movf	0,w
  1807  0170  00C0               	movwf	(sprintf@fval+3)^(0+128)
  1808  0171                     l3323:
  1809  0171  3004               	movlw	4
  1810  0172  00A5               	movwf	??_sprintf^(0+128)
  1811  0173  0825               	movf	??_sprintf^(0+128),w
  1812  0174  07AE               	addwf	sprintf@ap^(0+128),f
  1813  0175                     l3325:
  1814                           
  1815                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 857:    if(fval <
      +                           0.0) {
  1816  0175  0840               	movf	(sprintf@fval+3)^(0+128),w
  1817  0176  00F3               	movwf	___flge@ff1+3
  1818  0177  083F               	movf	(sprintf@fval+2)^(0+128),w
  1819  0178  00F2               	movwf	___flge@ff1+2
  1820  0179  083E               	movf	(sprintf@fval+1)^(0+128),w
  1821  017A  00F1               	movwf	___flge@ff1+1
  1822  017B  083D               	movf	sprintf@fval^(0+128),w
  1823  017C  00F0               	movwf	___flge@ff1
  1824  017D  3000               	movlw	0
  1825  017E  00F7               	movwf	___flge@ff2+3
  1826  017F  3000               	movlw	0
  1827  0180  00F6               	movwf	___flge@ff2+2
  1828  0181  3000               	movlw	0
  1829  0182  00F5               	movwf	___flge@ff2+1
  1830  0183  3000               	movlw	0
  1831  0184  00F4               	movwf	___flge@ff2
  1832  0185  160A  158A  275E  120A  118A  	fcall	___flge
  1833  018A  1803               	btfsc	3,0
  1834  018B  298D               	goto	u5481
  1835  018C  298E               	goto	u5480
  1836  018D                     u5481:
  1837  018D  29AB               	goto	l3331
  1838  018E                     u5480:
  1839  018E                     l3327:
  1840                           
  1841                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 858:     fval = -
      +                          fval;
  1842  018E  1683               	bsf	3,5	;RP0=1, select bank1
  1843  018F  1303               	bcf	3,6	;RP1=0, select bank1
  1844  0190  0840               	movf	(sprintf@fval+3)^(0+128),w
  1845  0191  00F3               	movwf	___flneg@f1+3
  1846  0192  083F               	movf	(sprintf@fval+2)^(0+128),w
  1847  0193  00F2               	movwf	___flneg@f1+2
  1848  0194  083E               	movf	(sprintf@fval+1)^(0+128),w
  1849  0195  00F1               	movwf	___flneg@f1+1
  1850  0196  083D               	movf	sprintf@fval^(0+128),w
  1851  0197  00F0               	movwf	___flneg@f1
  1852  0198  160A  158A  22C7  120A  118A  	fcall	___flneg
  1853  019D  0873               	movf	?___flneg+3,w
  1854  019E  1683               	bsf	3,5	;RP0=1, select bank1
  1855  019F  1303               	bcf	3,6	;RP1=0, select bank1
  1856  01A0  00C0               	movwf	(sprintf@fval+3)^(0+128)
  1857  01A1  0872               	movf	?___flneg+2,w
  1858  01A2  00BF               	movwf	(sprintf@fval+2)^(0+128)
  1859  01A3  0871               	movf	?___flneg+1,w
  1860  01A4  00BE               	movwf	(sprintf@fval+1)^(0+128)
  1861  01A5  0870               	movf	?___flneg,w
  1862  01A6  00BD               	movwf	sprintf@fval^(0+128)
  1863  01A7                     l3329:
  1864                           
  1865                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 859:     flag |= 
      +                          0x03;
  1866  01A7  3003               	movlw	3
  1867  01A8  04B3               	iorwf	sprintf@flag^(0+128),f
  1868  01A9  3000               	movlw	0
  1869  01AA  04B4               	iorwf	(sprintf@flag+1)^(0+128),f
  1870  01AB                     l3331:
  1871                           
  1872                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 861:    eexp = 0;
  1873  01AB  1683               	bsf	3,5	;RP0=1, select bank1
  1874  01AC  1303               	bcf	3,6	;RP1=0, select bank1
  1875  01AD  01BB               	clrf	sprintf@eexp^(0+128)
  1876  01AE  01BC               	clrf	(sprintf@eexp+1)^(0+128)
  1877  01AF                     l3333:
  1878                           
  1879                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 862:    if( fval!
      +                          =0) {
  1880  01AF  0840               	movf	(sprintf@fval+3)^(0+128),w
  1881  01B0  00F3               	movwf	___fleq@ff1+3
  1882  01B1  083F               	movf	(sprintf@fval+2)^(0+128),w
  1883  01B2  00F2               	movwf	___fleq@ff1+2
  1884  01B3  083E               	movf	(sprintf@fval+1)^(0+128),w
  1885  01B4  00F1               	movwf	___fleq@ff1+1
  1886  01B5  083D               	movf	sprintf@fval^(0+128),w
  1887  01B6  00F0               	movwf	___fleq@ff1
  1888  01B7  3000               	movlw	0
  1889  01B8  00F7               	movwf	___fleq@ff2+3
  1890  01B9  3000               	movlw	0
  1891  01BA  00F6               	movwf	___fleq@ff2+2
  1892  01BB  3000               	movlw	0
  1893  01BC  00F5               	movwf	___fleq@ff2+1
  1894  01BD  3000               	movlw	0
  1895  01BE  00F4               	movwf	___fleq@ff2
  1896  01BF  160A  158A  243D  120A  118A  	fcall	___fleq
  1897  01C4  1803               	btfsc	3,0
  1898  01C5  29C7               	goto	u5491
  1899  01C6  29C8               	goto	u5490
  1900  01C7                     u5491:
  1901  01C7  2AB8               	goto	l3359
  1902  01C8                     u5490:
  1903  01C8                     l3335:
  1904                           
  1905                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 863:     (void)(*
      +                          (&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) - 126);
  1906  01C8  1003               	clrc
  1907  01C9  1683               	bsf	3,5	;RP0=1, select bank1
  1908  01CA  1303               	bcf	3,6	;RP1=0, select bank1
  1909  01CB  0D3F               	rlf	(sprintf@fval+2)^(0+128),w
  1910  01CC  0D40               	rlf	(sprintf@fval+3)^(0+128),w
  1911  01CD  3E82               	addlw	130
  1912  01CE  00BB               	movwf	sprintf@eexp^(0+128)
  1913  01CF  30FF               	movlw	255
  1914  01D0  1803               	skipnc
  1915  01D1  3000               	movlw	0
  1916  01D2  00BC               	movwf	(sprintf@eexp^(0+128)+1)
  1917  01D3                     l3337:
  1918                           
  1919                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 864:     eexp--;
  1920  01D3  30FF               	movlw	255
  1921  01D4  07BB               	addwf	sprintf@eexp^(0+128),f
  1922  01D5  1803               	skipnc
  1923  01D6  0ABC               	incf	(sprintf@eexp+1)^(0+128),f
  1924  01D7  30FF               	movlw	255
  1925  01D8  07BC               	addwf	(sprintf@eexp+1)^(0+128),f
  1926  01D9                     l3339:
  1927                           
  1928                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 865:     eexp *= 
      +                          3;
  1929  01D9  3003               	movlw	3
  1930  01DA  00F0               	movwf	___wmul@multiplier
  1931  01DB  3000               	movlw	0
  1932  01DC  00F1               	movwf	___wmul@multiplier+1
  1933  01DD  083C               	movf	(sprintf@eexp+1)^(0+128),w
  1934  01DE  00F3               	movwf	___wmul@multiplicand+1
  1935  01DF  083B               	movf	sprintf@eexp^(0+128),w
  1936  01E0  00F2               	movwf	___wmul@multiplicand
  1937  01E1  160A  158A  2373  120A  118A  	fcall	___wmul
  1938  01E6  0871               	movf	?___wmul+1,w
  1939  01E7  1683               	bsf	3,5	;RP0=1, select bank1
  1940  01E8  1303               	bcf	3,6	;RP1=0, select bank1
  1941  01E9  00BC               	movwf	(sprintf@eexp+1)^(0+128)
  1942  01EA  0870               	movf	?___wmul,w
  1943  01EB  00BB               	movwf	sprintf@eexp^(0+128)
  1944  01EC                     l3341:
  1945                           
  1946                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 866:     eexp /= 
      +                          10;
  1947  01EC  300A               	movlw	10
  1948  01ED  00F7               	movwf	___awdiv@divisor
  1949  01EE  3000               	movlw	0
  1950  01EF  00F8               	movwf	___awdiv@divisor+1
  1951  01F0  083C               	movf	(sprintf@eexp+1)^(0+128),w
  1952  01F1  00FA               	movwf	___awdiv@dividend+1
  1953  01F2  083B               	movf	sprintf@eexp^(0+128),w
  1954  01F3  00F9               	movwf	___awdiv@dividend
  1955  01F4  120A  118A  2003  120A  118A  	fcall	___awdiv
  1956  01F9  0878               	movf	?___awdiv+1,w
  1957  01FA  1683               	bsf	3,5	;RP0=1, select bank1
  1958  01FB  1303               	bcf	3,6	;RP1=0, select bank1
  1959  01FC  00BC               	movwf	(sprintf@eexp+1)^(0+128)
  1960  01FD  0877               	movf	?___awdiv,w
  1961  01FE  00BB               	movwf	sprintf@eexp^(0+128)
  1962  01FF                     l3343:
  1963                           
  1964                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 867:     if(eexp 
      +                          < 0)
  1965  01FF  1FBC               	btfss	(sprintf@eexp+1)^(0+128),7
  1966  0200  2A02               	goto	u5501
  1967  0201  2A03               	goto	u5500
  1968  0202                     u5501:
  1969  0202  2A09               	goto	l3347
  1970  0203                     u5500:
  1971  0203                     l3345:
  1972                           
  1973                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 868:      eexp--;
  1974  0203  30FF               	movlw	255
  1975  0204  07BB               	addwf	sprintf@eexp^(0+128),f
  1976  0205  1803               	skipnc
  1977  0206  0ABC               	incf	(sprintf@eexp+1)^(0+128),f
  1978  0207  30FF               	movlw	255
  1979  0208  07BC               	addwf	(sprintf@eexp+1)^(0+128),f
  1980  0209                     l3347:
  1981                           
  1982                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 872:     tmpval.i
      +                          nteg = scale(-eexp);
  1983  0209  033B               	decf	sprintf@eexp^(0+128),w
  1984  020A  3AFF               	xorlw	255
  1985  020B  120A  158A  2140  120A  118A  	fcall	_scale
  1986  0210  1283               	bcf	3,5	;RP0=0, select bank0
  1987  0211  1303               	bcf	3,6	;RP1=0, select bank0
  1988  0212  0841               	movf	?_scale+3,w
  1989  0213  1683               	bsf	3,5	;RP0=1, select bank1
  1990  0214  1303               	bcf	3,6	;RP1=0, select bank1
  1991  0215  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  1992  0216  1283               	bcf	3,5	;RP0=0, select bank0
  1993  0217  1303               	bcf	3,6	;RP1=0, select bank0
  1994  0218  0840               	movf	?_scale+2,w
  1995  0219  1683               	bsf	3,5	;RP0=1, select bank1
  1996  021A  1303               	bcf	3,6	;RP1=0, select bank1
  1997  021B  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  1998  021C  1283               	bcf	3,5	;RP0=0, select bank0
  1999  021D  1303               	bcf	3,6	;RP1=0, select bank0
  2000  021E  083F               	movf	?_scale+1,w
  2001  021F  1683               	bsf	3,5	;RP0=1, select bank1
  2002  0220  1303               	bcf	3,6	;RP1=0, select bank1
  2003  0221  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  2004  0222  1283               	bcf	3,5	;RP0=0, select bank0
  2005  0223  1303               	bcf	3,6	;RP1=0, select bank0
  2006  0224  083E               	movf	?_scale,w
  2007  0225  1683               	bsf	3,5	;RP0=1, select bank1
  2008  0226  1303               	bcf	3,6	;RP1=0, select bank1
  2009  0227  00B7               	movwf	sprintf@tmpval^(0+128)
  2010  0228                     l3349:
  2011                           
  2012                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 873:     tmpval.i
      +                          nteg *= fval;
  2013  0228  0840               	movf	(sprintf@fval+3)^(0+128),w
  2014  0229  1283               	bcf	3,5	;RP0=0, select bank0
  2015  022A  1303               	bcf	3,6	;RP1=0, select bank0
  2016  022B  00A7               	movwf	___flmul@b+3
  2017  022C  1683               	bsf	3,5	;RP0=1, select bank1
  2018  022D  1303               	bcf	3,6	;RP1=0, select bank1
  2019  022E  083F               	movf	(sprintf@fval+2)^(0+128),w
  2020  022F  1283               	bcf	3,5	;RP0=0, select bank0
  2021  0230  1303               	bcf	3,6	;RP1=0, select bank0
  2022  0231  00A6               	movwf	___flmul@b+2
  2023  0232  1683               	bsf	3,5	;RP0=1, select bank1
  2024  0233  1303               	bcf	3,6	;RP1=0, select bank1
  2025  0234  083E               	movf	(sprintf@fval+1)^(0+128),w
  2026  0235  1283               	bcf	3,5	;RP0=0, select bank0
  2027  0236  1303               	bcf	3,6	;RP1=0, select bank0
  2028  0237  00A5               	movwf	___flmul@b+1
  2029  0238  1683               	bsf	3,5	;RP0=1, select bank1
  2030  0239  1303               	bcf	3,6	;RP1=0, select bank1
  2031  023A  083D               	movf	sprintf@fval^(0+128),w
  2032  023B  1283               	bcf	3,5	;RP0=0, select bank0
  2033  023C  1303               	bcf	3,6	;RP1=0, select bank0
  2034  023D  00A4               	movwf	___flmul@b
  2035  023E  1683               	bsf	3,5	;RP0=1, select bank1
  2036  023F  1303               	bcf	3,6	;RP1=0, select bank1
  2037  0240  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  2038  0241  1283               	bcf	3,5	;RP0=0, select bank0
  2039  0242  1303               	bcf	3,6	;RP1=0, select bank0
  2040  0243  00AB               	movwf	___flmul@a+3
  2041  0244  1683               	bsf	3,5	;RP0=1, select bank1
  2042  0245  1303               	bcf	3,6	;RP1=0, select bank1
  2043  0246  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  2044  0247  1283               	bcf	3,5	;RP0=0, select bank0
  2045  0248  1303               	bcf	3,6	;RP1=0, select bank0
  2046  0249  00AA               	movwf	___flmul@a+2
  2047  024A  1683               	bsf	3,5	;RP0=1, select bank1
  2048  024B  1303               	bcf	3,6	;RP1=0, select bank1
  2049  024C  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  2050  024D  1283               	bcf	3,5	;RP0=0, select bank0
  2051  024E  1303               	bcf	3,6	;RP1=0, select bank0
  2052  024F  00A9               	movwf	___flmul@a+1
  2053  0250  1683               	bsf	3,5	;RP0=1, select bank1
  2054  0251  1303               	bcf	3,6	;RP1=0, select bank1
  2055  0252  0837               	movf	sprintf@tmpval^(0+128),w
  2056  0253  1283               	bcf	3,5	;RP0=0, select bank0
  2057  0254  1303               	bcf	3,6	;RP1=0, select bank0
  2058  0255  00A8               	movwf	___flmul@a
  2059  0256  120A  158A  249F  120A  118A  	fcall	___flmul
  2060  025B  1283               	bcf	3,5	;RP0=0, select bank0
  2061  025C  1303               	bcf	3,6	;RP1=0, select bank0
  2062  025D  0827               	movf	?___flmul+3,w
  2063  025E  1683               	bsf	3,5	;RP0=1, select bank1
  2064  025F  1303               	bcf	3,6	;RP1=0, select bank1
  2065  0260  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  2066  0261  1283               	bcf	3,5	;RP0=0, select bank0
  2067  0262  1303               	bcf	3,6	;RP1=0, select bank0
  2068  0263  0826               	movf	?___flmul+2,w
  2069  0264  1683               	bsf	3,5	;RP0=1, select bank1
  2070  0265  1303               	bcf	3,6	;RP1=0, select bank1
  2071  0266  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  2072  0267  1283               	bcf	3,5	;RP0=0, select bank0
  2073  0268  1303               	bcf	3,6	;RP1=0, select bank0
  2074  0269  0825               	movf	?___flmul+1,w
  2075  026A  1683               	bsf	3,5	;RP0=1, select bank1
  2076  026B  1303               	bcf	3,6	;RP1=0, select bank1
  2077  026C  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  2078  026D  1283               	bcf	3,5	;RP0=0, select bank0
  2079  026E  1303               	bcf	3,6	;RP1=0, select bank0
  2080  026F  0824               	movf	?___flmul,w
  2081  0270  1683               	bsf	3,5	;RP0=1, select bank1
  2082  0271  1303               	bcf	3,6	;RP1=0, select bank1
  2083  0272  00B7               	movwf	sprintf@tmpval^(0+128)
  2084  0273                     l3351:
  2085                           
  2086                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 874:     if(tmpva
      +                          l.integ < 1.0)
  2087  0273  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  2088  0274  00F3               	movwf	___flge@ff1+3
  2089  0275  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  2090  0276  00F2               	movwf	___flge@ff1+2
  2091  0277  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  2092  0278  00F1               	movwf	___flge@ff1+1
  2093  0279  0837               	movf	sprintf@tmpval^(0+128),w
  2094  027A  00F0               	movwf	___flge@ff1
  2095  027B  303F               	movlw	63
  2096  027C  00F7               	movwf	___flge@ff2+3
  2097  027D  3080               	movlw	128
  2098  027E  00F6               	movwf	___flge@ff2+2
  2099  027F  3000               	movlw	0
  2100  0280  00F5               	movwf	___flge@ff2+1
  2101  0281  3000               	movlw	0
  2102  0282  00F4               	movwf	___flge@ff2
  2103  0283  160A  158A  275E  120A  118A  	fcall	___flge
  2104  0288  1803               	btfsc	3,0
  2105  0289  2A8B               	goto	u5511
  2106  028A  2A8C               	goto	u5510
  2107  028B                     u5511:
  2108  028B  2A95               	goto	l3355
  2109  028C                     u5510:
  2110  028C                     l3353:
  2111                           
  2112                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 875:      eexp--;
  2113  028C  30FF               	movlw	255
  2114  028D  1683               	bsf	3,5	;RP0=1, select bank1
  2115  028E  1303               	bcf	3,6	;RP1=0, select bank1
  2116  028F  07BB               	addwf	sprintf@eexp^(0+128),f
  2117  0290  1803               	skipnc
  2118  0291  0ABC               	incf	(sprintf@eexp+1)^(0+128),f
  2119  0292  30FF               	movlw	255
  2120  0293  07BC               	addwf	(sprintf@eexp+1)^(0+128),f
  2121  0294  2AB8               	goto	l3359
  2122  0295                     l3355:
  2123  0295  1683               	bsf	3,5	;RP0=1, select bank1
  2124  0296  1303               	bcf	3,6	;RP1=0, select bank1
  2125  0297  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  2126  0298  00F3               	movwf	___flge@ff1+3
  2127  0299  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  2128  029A  00F2               	movwf	___flge@ff1+2
  2129  029B  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  2130  029C  00F1               	movwf	___flge@ff1+1
  2131  029D  0837               	movf	sprintf@tmpval^(0+128),w
  2132  029E  00F0               	movwf	___flge@ff1
  2133  029F  3041               	movlw	65
  2134  02A0  00F7               	movwf	___flge@ff2+3
  2135  02A1  3020               	movlw	32
  2136  02A2  00F6               	movwf	___flge@ff2+2
  2137  02A3  3000               	movlw	0
  2138  02A4  00F5               	movwf	___flge@ff2+1
  2139  02A5  3000               	movlw	0
  2140  02A6  00F4               	movwf	___flge@ff2
  2141  02A7  160A  158A  275E  120A  118A  	fcall	___flge
  2142  02AC  1C03               	btfss	3,0
  2143  02AD  2AAF               	goto	u5521
  2144  02AE  2AB0               	goto	u5520
  2145  02AF                     u5521:
  2146  02AF  2AB8               	goto	l3359
  2147  02B0                     u5520:
  2148  02B0                     l3357:
  2149                           
  2150                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 877:      eexp++;
  2151  02B0  3001               	movlw	1
  2152  02B1  1683               	bsf	3,5	;RP0=1, select bank1
  2153  02B2  1303               	bcf	3,6	;RP1=0, select bank1
  2154  02B3  07BB               	addwf	sprintf@eexp^(0+128),f
  2155  02B4  1803               	skipnc
  2156  02B5  0ABC               	incf	(sprintf@eexp+1)^(0+128),f
  2157  02B6  3000               	movlw	0
  2158  02B7  07BC               	addwf	(sprintf@eexp+1)^(0+128),f
  2159  02B8                     l3359:
  2160                           
  2161                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1138:      if(pre
      +                          c <= 12)
  2162  02B8  1683               	bsf	3,5	;RP0=1, select bank1
  2163  02B9  1303               	bcf	3,6	;RP1=0, select bank1
  2164  02BA  0843               	movf	(sprintf@prec+1)^(0+128),w
  2165  02BB  3A80               	xorlw	128
  2166  02BC  00FF               	movwf	btemp+1
  2167  02BD  3080               	movlw	128
  2168  02BE  027F               	subwf	btemp+1,w
  2169  02BF  1D03               	skipz
  2170  02C0  2AC3               	goto	u5535
  2171  02C1  300D               	movlw	13
  2172  02C2  0242               	subwf	sprintf@prec^(0+128),w
  2173  02C3                     u5535:
  2174  02C3  1803               	skipnc
  2175  02C4  2AC6               	goto	u5531
  2176  02C5  2AC7               	goto	u5530
  2177  02C6                     u5531:
  2178  02C6  2B0E               	goto	l3363
  2179  02C7                     u5530:
  2180  02C7                     l3361:
  2181                           
  2182                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1139:       fval 
      +                          += fround((unsigned int)prec);
  2183  02C7  1683               	bsf	3,5	;RP0=1, select bank1
  2184  02C8  1303               	bcf	3,6	;RP1=0, select bank1
  2185  02C9  0842               	movf	sprintf@prec^(0+128),w
  2186  02CA  160A  118A  236D  120A  118A  	fcall	_fround
  2187  02CF  1283               	bcf	3,5	;RP0=0, select bank0
  2188  02D0  1303               	bcf	3,6	;RP1=0, select bank0
  2189  02D1  0841               	movf	?_fround+3,w
  2190  02D2  00D5               	movwf	___fladd@b+3
  2191  02D3  0840               	movf	?_fround+2,w
  2192  02D4  00D4               	movwf	___fladd@b+2
  2193  02D5  083F               	movf	?_fround+1,w
  2194  02D6  00D3               	movwf	___fladd@b+1
  2195  02D7  083E               	movf	?_fround,w
  2196  02D8  00D2               	movwf	___fladd@b
  2197  02D9  1683               	bsf	3,5	;RP0=1, select bank1
  2198  02DA  1303               	bcf	3,6	;RP1=0, select bank1
  2199  02DB  0840               	movf	(sprintf@fval+3)^(0+128),w
  2200  02DC  1283               	bcf	3,5	;RP0=0, select bank0
  2201  02DD  1303               	bcf	3,6	;RP1=0, select bank0
  2202  02DE  00D9               	movwf	___fladd@a+3
  2203  02DF  1683               	bsf	3,5	;RP0=1, select bank1
  2204  02E0  1303               	bcf	3,6	;RP1=0, select bank1
  2205  02E1  083F               	movf	(sprintf@fval+2)^(0+128),w
  2206  02E2  1283               	bcf	3,5	;RP0=0, select bank0
  2207  02E3  1303               	bcf	3,6	;RP1=0, select bank0
  2208  02E4  00D8               	movwf	___fladd@a+2
  2209  02E5  1683               	bsf	3,5	;RP0=1, select bank1
  2210  02E6  1303               	bcf	3,6	;RP1=0, select bank1
  2211  02E7  083E               	movf	(sprintf@fval+1)^(0+128),w
  2212  02E8  1283               	bcf	3,5	;RP0=0, select bank0
  2213  02E9  1303               	bcf	3,6	;RP1=0, select bank0
  2214  02EA  00D7               	movwf	___fladd@a+1
  2215  02EB  1683               	bsf	3,5	;RP0=1, select bank1
  2216  02EC  1303               	bcf	3,6	;RP1=0, select bank1
  2217  02ED  083D               	movf	sprintf@fval^(0+128),w
  2218  02EE  1283               	bcf	3,5	;RP0=0, select bank0
  2219  02EF  1303               	bcf	3,6	;RP1=0, select bank0
  2220  02F0  00D6               	movwf	___fladd@a
  2221  02F1  160A  118A  2578  120A  118A  	fcall	___fladd
  2222  02F6  1283               	bcf	3,5	;RP0=0, select bank0
  2223  02F7  1303               	bcf	3,6	;RP1=0, select bank0
  2224  02F8  0855               	movf	?___fladd+3,w
  2225  02F9  1683               	bsf	3,5	;RP0=1, select bank1
  2226  02FA  1303               	bcf	3,6	;RP1=0, select bank1
  2227  02FB  00C0               	movwf	(sprintf@fval+3)^(0+128)
  2228  02FC  1283               	bcf	3,5	;RP0=0, select bank0
  2229  02FD  1303               	bcf	3,6	;RP1=0, select bank0
  2230  02FE  0854               	movf	?___fladd+2,w
  2231  02FF  1683               	bsf	3,5	;RP0=1, select bank1
  2232  0300  1303               	bcf	3,6	;RP1=0, select bank1
  2233  0301  00BF               	movwf	(sprintf@fval+2)^(0+128)
  2234  0302  1283               	bcf	3,5	;RP0=0, select bank0
  2235  0303  1303               	bcf	3,6	;RP1=0, select bank0
  2236  0304  0853               	movf	?___fladd+1,w
  2237  0305  1683               	bsf	3,5	;RP0=1, select bank1
  2238  0306  1303               	bcf	3,6	;RP1=0, select bank1
  2239  0307  00BE               	movwf	(sprintf@fval+1)^(0+128)
  2240  0308  1283               	bcf	3,5	;RP0=0, select bank0
  2241  0309  1303               	bcf	3,6	;RP1=0, select bank0
  2242  030A  0852               	movf	?___fladd,w
  2243  030B  1683               	bsf	3,5	;RP0=1, select bank1
  2244  030C  1303               	bcf	3,6	;RP1=0, select bank1
  2245  030D  00BD               	movwf	sprintf@fval^(0+128)
  2246  030E                     l3363:
  2247                           
  2248                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1142:     if((eex
      +                          p > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  2249  030E  1683               	bsf	3,5	;RP0=1, select bank1
  2250  030F  1303               	bcf	3,6	;RP1=0, select bank1
  2251  0310  083C               	movf	(sprintf@eexp+1)^(0+128),w
  2252  0311  3A80               	xorlw	128
  2253  0312  00FF               	movwf	btemp+1
  2254  0313  3080               	movlw	128
  2255  0314  027F               	subwf	btemp+1,w
  2256  0315  1D03               	skipz
  2257  0316  2B19               	goto	u5545
  2258  0317  300A               	movlw	10
  2259  0318  023B               	subwf	sprintf@eexp^(0+128),w
  2260  0319                     u5545:
  2261  0319  1803               	skipnc
  2262  031A  2B1C               	goto	u5541
  2263  031B  2B1D               	goto	u5540
  2264  031C                     u5541:
  2265  031C  2B6E               	goto	l3371
  2266  031D                     u5540:
  2267  031D                     l3365:
  2268  031D  1683               	bsf	3,5	;RP0=1, select bank1
  2269  031E  1303               	bcf	3,6	;RP1=0, select bank1
  2270  031F  0840               	movf	(sprintf@fval+3)^(0+128),w
  2271  0320  00F3               	movwf	___fleq@ff1+3
  2272  0321  083F               	movf	(sprintf@fval+2)^(0+128),w
  2273  0322  00F2               	movwf	___fleq@ff1+2
  2274  0323  083E               	movf	(sprintf@fval+1)^(0+128),w
  2275  0324  00F1               	movwf	___fleq@ff1+1
  2276  0325  083D               	movf	sprintf@fval^(0+128),w
  2277  0326  00F0               	movwf	___fleq@ff1
  2278  0327  3000               	movlw	0
  2279  0328  00F7               	movwf	___fleq@ff2+3
  2280  0329  3000               	movlw	0
  2281  032A  00F6               	movwf	___fleq@ff2+2
  2282  032B  3000               	movlw	0
  2283  032C  00F5               	movwf	___fleq@ff2+1
  2284  032D  3000               	movlw	0
  2285  032E  00F4               	movwf	___fleq@ff2
  2286  032F  160A  158A  243D  120A  118A  	fcall	___fleq
  2287  0334  1803               	btfsc	3,0
  2288  0335  2B37               	goto	u5551
  2289  0336  2B38               	goto	u5550
  2290  0337                     u5551:
  2291  0337  2BE0               	goto	l3385
  2292  0338                     u5550:
  2293  0338                     l3367:
  2294  0338  1683               	bsf	3,5	;RP0=1, select bank1
  2295  0339  1303               	bcf	3,6	;RP1=0, select bank1
  2296  033A  0840               	movf	(sprintf@fval+3)^(0+128),w
  2297  033B  1283               	bcf	3,5	;RP0=0, select bank0
  2298  033C  1303               	bcf	3,6	;RP1=0, select bank0
  2299  033D  00C1               	movwf	___fltol@f1+3
  2300  033E  1683               	bsf	3,5	;RP0=1, select bank1
  2301  033F  1303               	bcf	3,6	;RP1=0, select bank1
  2302  0340  083F               	movf	(sprintf@fval+2)^(0+128),w
  2303  0341  1283               	bcf	3,5	;RP0=0, select bank0
  2304  0342  1303               	bcf	3,6	;RP1=0, select bank0
  2305  0343  00C0               	movwf	___fltol@f1+2
  2306  0344  1683               	bsf	3,5	;RP0=1, select bank1
  2307  0345  1303               	bcf	3,6	;RP1=0, select bank1
  2308  0346  083E               	movf	(sprintf@fval+1)^(0+128),w
  2309  0347  1283               	bcf	3,5	;RP0=0, select bank0
  2310  0348  1303               	bcf	3,6	;RP1=0, select bank0
  2311  0349  00BF               	movwf	___fltol@f1+1
  2312  034A  1683               	bsf	3,5	;RP0=1, select bank1
  2313  034B  1303               	bcf	3,6	;RP1=0, select bank1
  2314  034C  083D               	movf	sprintf@fval^(0+128),w
  2315  034D  1283               	bcf	3,5	;RP0=0, select bank0
  2316  034E  1303               	bcf	3,6	;RP1=0, select bank0
  2317  034F  00BE               	movwf	___fltol@f1
  2318  0350  120A  158A  2006  120A  118A  	fcall	___fltol
  2319  0355  1283               	bcf	3,5	;RP0=0, select bank0
  2320  0356  1303               	bcf	3,6	;RP1=0, select bank0
  2321  0357  0841               	movf	?___fltol+3,w
  2322  0358  0440               	iorwf	?___fltol+2,w
  2323  0359  043F               	iorwf	?___fltol+1,w
  2324  035A  043E               	iorwf	?___fltol,w
  2325  035B  1D03               	skipz
  2326  035C  2B5E               	goto	u5561
  2327  035D  2B5F               	goto	u5560
  2328  035E                     u5561:
  2329  035E  2BE0               	goto	l3385
  2330  035F                     u5560:
  2331  035F                     l3369:
  2332  035F  1683               	bsf	3,5	;RP0=1, select bank1
  2333  0360  1303               	bcf	3,6	;RP1=0, select bank1
  2334  0361  083C               	movf	(sprintf@eexp+1)^(0+128),w
  2335  0362  3A80               	xorlw	128
  2336  0363  00FF               	movwf	btemp+1
  2337  0364  3080               	movlw	128
  2338  0365  027F               	subwf	btemp+1,w
  2339  0366  1D03               	skipz
  2340  0367  2B6A               	goto	u5575
  2341  0368  3002               	movlw	2
  2342  0369  023B               	subwf	sprintf@eexp^(0+128),w
  2343  036A                     u5575:
  2344  036A  1C03               	skipc
  2345  036B  2B6D               	goto	u5571
  2346  036C  2B6E               	goto	u5570
  2347  036D                     u5571:
  2348  036D  2BE0               	goto	l3385
  2349  036E                     u5570:
  2350  036E                     l3371:
  2351                           
  2352                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1146:      if(tmp
      +                          val.integ < 4.294967296){
  2353  036E  1683               	bsf	3,5	;RP0=1, select bank1
  2354  036F  1303               	bcf	3,6	;RP1=0, select bank1
  2355  0370  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  2356  0371  00F3               	movwf	___flge@ff1+3
  2357  0372  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  2358  0373  00F2               	movwf	___flge@ff1+2
  2359  0374  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  2360  0375  00F1               	movwf	___flge@ff1+1
  2361  0376  0837               	movf	sprintf@tmpval^(0+128),w
  2362  0377  00F0               	movwf	___flge@ff1
  2363  0378  3040               	movlw	64
  2364  0379  00F7               	movwf	___flge@ff2+3
  2365  037A  3089               	movlw	137
  2366  037B  00F6               	movwf	___flge@ff2+2
  2367  037C  3070               	movlw	112
  2368  037D  00F5               	movwf	___flge@ff2+1
  2369  037E  305F               	movlw	95
  2370  037F  00F4               	movwf	___flge@ff2
  2371  0380  160A  158A  275E  120A  118A  	fcall	___flge
  2372  0385  1803               	btfsc	3,0
  2373  0386  2B88               	goto	u5581
  2374  0387  2B89               	goto	u5580
  2375  0388                     u5581:
  2376  0388  2B92               	goto	l3375
  2377  0389                     u5580:
  2378  0389                     l3373:
  2379                           
  2380                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1147:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-1;
  2381  0389  30F7               	movlw	247
  2382  038A  1683               	bsf	3,5	;RP0=1, select bank1
  2383  038B  1303               	bcf	3,6	;RP1=0, select bank1
  2384  038C  07BB               	addwf	sprintf@eexp^(0+128),f
  2385  038D  1803               	skipnc
  2386  038E  0ABC               	incf	(sprintf@eexp+1)^(0+128),f
  2387  038F  30FF               	movlw	255
  2388  0390  07BC               	addwf	(sprintf@eexp+1)^(0+128),f
  2389                           
  2390                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1148:      }else{
  2391  0391  2B9A               	goto	l3377
  2392  0392                     l3375:
  2393                           
  2394                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1149:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-2;
  2395  0392  30F8               	movlw	248
  2396  0393  1683               	bsf	3,5	;RP0=1, select bank1
  2397  0394  1303               	bcf	3,6	;RP1=0, select bank1
  2398  0395  07BB               	addwf	sprintf@eexp^(0+128),f
  2399  0396  1803               	skipnc
  2400  0397  0ABC               	incf	(sprintf@eexp+1)^(0+128),f
  2401  0398  30FF               	movlw	255
  2402  0399  07BC               	addwf	(sprintf@eexp+1)^(0+128),f
  2403  039A                     l3377:
  2404                           
  2405                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1152:      val = 
      +                          ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_l_(fval,tmpval.integ));
  2406  039A  083B               	movf	sprintf@eexp^(0+128),w
  2407  039B  120A  158A  2140  120A  118A  	fcall	_scale
  2408  03A0  1283               	bcf	3,5	;RP0=0, select bank0
  2409  03A1  1303               	bcf	3,6	;RP1=0, select bank0
  2410  03A2  0841               	movf	?_scale+3,w
  2411  03A3  1683               	bsf	3,5	;RP0=1, select bank1
  2412  03A4  1303               	bcf	3,6	;RP1=0, select bank1
  2413  03A5  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  2414  03A6  1283               	bcf	3,5	;RP0=0, select bank0
  2415  03A7  1303               	bcf	3,6	;RP1=0, select bank0
  2416  03A8  0840               	movf	?_scale+2,w
  2417  03A9  1683               	bsf	3,5	;RP0=1, select bank1
  2418  03AA  1303               	bcf	3,6	;RP1=0, select bank1
  2419  03AB  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  2420  03AC  1283               	bcf	3,5	;RP0=0, select bank0
  2421  03AD  1303               	bcf	3,6	;RP1=0, select bank0
  2422  03AE  083F               	movf	?_scale+1,w
  2423  03AF  1683               	bsf	3,5	;RP0=1, select bank1
  2424  03B0  1303               	bcf	3,6	;RP1=0, select bank1
  2425  03B1  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  2426  03B2  1283               	bcf	3,5	;RP0=0, select bank0
  2427  03B3  1303               	bcf	3,6	;RP1=0, select bank0
  2428  03B4  083E               	movf	?_scale,w
  2429  03B5  1683               	bsf	3,5	;RP0=1, select bank1
  2430  03B6  1303               	bcf	3,6	;RP1=0, select bank1
  2431  03B7  00B7               	movwf	sprintf@tmpval^(0+128)
  2432  03B8                     l3379:
  2433  03B8  0840               	movf	(sprintf@fval+3)^(0+128),w
  2434  03B9  00F3               	movwf	__div_to_l_@f1+3
  2435  03BA  083F               	movf	(sprintf@fval+2)^(0+128),w
  2436  03BB  00F2               	movwf	__div_to_l_@f1+2
  2437  03BC  083E               	movf	(sprintf@fval+1)^(0+128),w
  2438  03BD  00F1               	movwf	__div_to_l_@f1+1
  2439  03BE  083D               	movf	sprintf@fval^(0+128),w
  2440  03BF  00F0               	movwf	__div_to_l_@f1
  2441  03C0  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  2442  03C1  00F7               	movwf	__div_to_l_@f2+3
  2443  03C2  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  2444  03C3  00F6               	movwf	__div_to_l_@f2+2
  2445  03C4  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  2446  03C5  00F5               	movwf	__div_to_l_@f2+1
  2447  03C6  0837               	movf	sprintf@tmpval^(0+128),w
  2448  03C7  00F4               	movwf	__div_to_l_@f2
  2449  03C8  120A  158A  2082  120A  118A  	fcall	__div_to_l_
  2450  03CD  0873               	movf	?__div_to_l_+3,w
  2451  03CE  1683               	bsf	3,5	;RP0=1, select bank1
  2452  03CF  1303               	bcf	3,6	;RP1=0, select bank1
  2453  03D0  00B2               	movwf	(sprintf@val+3)^(0+128)
  2454  03D1  0872               	movf	?__div_to_l_+2,w
  2455  03D2  00B1               	movwf	(sprintf@val+2)^(0+128)
  2456  03D3  0871               	movf	?__div_to_l_+1,w
  2457  03D4  00B0               	movwf	(sprintf@val+1)^(0+128)
  2458  03D5  0870               	movf	?__div_to_l_,w
  2459  03D6  00AF               	movwf	sprintf@val^(0+128)
  2460  03D7                     l3383:
  2461                           
  2462                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1155:      fval =
      +                           0.0;
  2463  03D7  3000               	movlw	0
  2464  03D8  00C0               	movwf	(sprintf@fval+3)^(0+128)
  2465  03D9  3000               	movlw	0
  2466  03DA  00BF               	movwf	(sprintf@fval+2)^(0+128)
  2467  03DB  3000               	movlw	0
  2468  03DC  00BE               	movwf	(sprintf@fval+1)^(0+128)
  2469  03DD  3000               	movlw	0
  2470  03DE  00BD               	movwf	sprintf@fval^(0+128)
  2471                           
  2472                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1156:     } else 
      +                          {
  2473  03DF  2C64               	goto	l3391
  2474  03E0                     l3385:
  2475                           
  2476                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1157:      val = 
      +                          (unsigned long)fval;
  2477  03E0  1683               	bsf	3,5	;RP0=1, select bank1
  2478  03E1  1303               	bcf	3,6	;RP1=0, select bank1
  2479  03E2  0840               	movf	(sprintf@fval+3)^(0+128),w
  2480  03E3  1283               	bcf	3,5	;RP0=0, select bank0
  2481  03E4  1303               	bcf	3,6	;RP1=0, select bank0
  2482  03E5  00C1               	movwf	___fltol@f1+3
  2483  03E6  1683               	bsf	3,5	;RP0=1, select bank1
  2484  03E7  1303               	bcf	3,6	;RP1=0, select bank1
  2485  03E8  083F               	movf	(sprintf@fval+2)^(0+128),w
  2486  03E9  1283               	bcf	3,5	;RP0=0, select bank0
  2487  03EA  1303               	bcf	3,6	;RP1=0, select bank0
  2488  03EB  00C0               	movwf	___fltol@f1+2
  2489  03EC  1683               	bsf	3,5	;RP0=1, select bank1
  2490  03ED  1303               	bcf	3,6	;RP1=0, select bank1
  2491  03EE  083E               	movf	(sprintf@fval+1)^(0+128),w
  2492  03EF  1283               	bcf	3,5	;RP0=0, select bank0
  2493  03F0  1303               	bcf	3,6	;RP1=0, select bank0
  2494  03F1  00BF               	movwf	___fltol@f1+1
  2495  03F2  1683               	bsf	3,5	;RP0=1, select bank1
  2496  03F3  1303               	bcf	3,6	;RP1=0, select bank1
  2497  03F4  083D               	movf	sprintf@fval^(0+128),w
  2498  03F5  1283               	bcf	3,5	;RP0=0, select bank0
  2499  03F6  1303               	bcf	3,6	;RP1=0, select bank0
  2500  03F7  00BE               	movwf	___fltol@f1
  2501  03F8  120A  158A  2006  120A  118A  	fcall	___fltol
  2502  03FD  1283               	bcf	3,5	;RP0=0, select bank0
  2503  03FE  1303               	bcf	3,6	;RP1=0, select bank0
  2504  03FF  0841               	movf	?___fltol+3,w
  2505  0400  1683               	bsf	3,5	;RP0=1, select bank1
  2506  0401  1303               	bcf	3,6	;RP1=0, select bank1
  2507  0402  00B2               	movwf	(sprintf@val+3)^(0+128)
  2508  0403  1283               	bcf	3,5	;RP0=0, select bank0
  2509  0404  1303               	bcf	3,6	;RP1=0, select bank0
  2510  0405  0840               	movf	?___fltol+2,w
  2511  0406  1683               	bsf	3,5	;RP0=1, select bank1
  2512  0407  1303               	bcf	3,6	;RP1=0, select bank1
  2513  0408  00B1               	movwf	(sprintf@val+2)^(0+128)
  2514  0409  1283               	bcf	3,5	;RP0=0, select bank0
  2515  040A  1303               	bcf	3,6	;RP1=0, select bank0
  2516  040B  083F               	movf	?___fltol+1,w
  2517  040C  1683               	bsf	3,5	;RP0=1, select bank1
  2518  040D  1303               	bcf	3,6	;RP1=0, select bank1
  2519  040E  00B0               	movwf	(sprintf@val+1)^(0+128)
  2520  040F  1283               	bcf	3,5	;RP0=0, select bank0
  2521  0410  1303               	bcf	3,6	;RP1=0, select bank0
  2522  0411  083E               	movf	?___fltol,w
  2523  0412  1683               	bsf	3,5	;RP0=1, select bank1
  2524  0413  1303               	bcf	3,6	;RP1=0, select bank1
  2525  0414  00AF               	movwf	sprintf@val^(0+128)
  2526  0415                     l3387:
  2527                           
  2528                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1158:      fval -
      +                          = (double)val;
  2529  0415  0832               	movf	(sprintf@val+3)^(0+128),w
  2530  0416  00F3               	movwf	___xxtofl@val+3
  2531  0417  0831               	movf	(sprintf@val+2)^(0+128),w
  2532  0418  00F2               	movwf	___xxtofl@val+2
  2533  0419  0830               	movf	(sprintf@val+1)^(0+128),w
  2534  041A  00F1               	movwf	___xxtofl@val+1
  2535  041B  082F               	movf	sprintf@val^(0+128),w
  2536  041C  00F0               	movwf	___xxtofl@val
  2537  041D  3000               	movlw	0
  2538  041E  160A  118A  2013  120A  118A  	fcall	___xxtofl
  2539  0423  0873               	movf	?___xxtofl+3,w
  2540  0424  1283               	bcf	3,5	;RP0=0, select bank0
  2541  0425  1303               	bcf	3,6	;RP1=0, select bank0
  2542  0426  00E9               	movwf	___flsub@a+3
  2543  0427  0872               	movf	?___xxtofl+2,w
  2544  0428  00E8               	movwf	___flsub@a+2
  2545  0429  0871               	movf	?___xxtofl+1,w
  2546  042A  00E7               	movwf	___flsub@a+1
  2547  042B  0870               	movf	?___xxtofl,w
  2548  042C  00E6               	movwf	___flsub@a
  2549  042D  1683               	bsf	3,5	;RP0=1, select bank1
  2550  042E  1303               	bcf	3,6	;RP1=0, select bank1
  2551  042F  0840               	movf	(sprintf@fval+3)^(0+128),w
  2552  0430  1283               	bcf	3,5	;RP0=0, select bank0
  2553  0431  1303               	bcf	3,6	;RP1=0, select bank0
  2554  0432  00ED               	movwf	___flsub@b+3
  2555  0433  1683               	bsf	3,5	;RP0=1, select bank1
  2556  0434  1303               	bcf	3,6	;RP1=0, select bank1
  2557  0435  083F               	movf	(sprintf@fval+2)^(0+128),w
  2558  0436  1283               	bcf	3,5	;RP0=0, select bank0
  2559  0437  1303               	bcf	3,6	;RP1=0, select bank0
  2560  0438  00EC               	movwf	___flsub@b+2
  2561  0439  1683               	bsf	3,5	;RP0=1, select bank1
  2562  043A  1303               	bcf	3,6	;RP1=0, select bank1
  2563  043B  083E               	movf	(sprintf@fval+1)^(0+128),w
  2564  043C  1283               	bcf	3,5	;RP0=0, select bank0
  2565  043D  1303               	bcf	3,6	;RP1=0, select bank0
  2566  043E  00EB               	movwf	___flsub@b+1
  2567  043F  1683               	bsf	3,5	;RP0=1, select bank1
  2568  0440  1303               	bcf	3,6	;RP1=0, select bank1
  2569  0441  083D               	movf	sprintf@fval^(0+128),w
  2570  0442  1283               	bcf	3,5	;RP0=0, select bank0
  2571  0443  1303               	bcf	3,6	;RP1=0, select bank0
  2572  0444  00EA               	movwf	___flsub@b
  2573  0445  160A  158A  234F  120A  118A  	fcall	___flsub
  2574  044A  1283               	bcf	3,5	;RP0=0, select bank0
  2575  044B  1303               	bcf	3,6	;RP1=0, select bank0
  2576  044C  0869               	movf	?___flsub+3,w
  2577  044D  1683               	bsf	3,5	;RP0=1, select bank1
  2578  044E  1303               	bcf	3,6	;RP1=0, select bank1
  2579  044F  00C0               	movwf	(sprintf@fval+3)^(0+128)
  2580  0450  1283               	bcf	3,5	;RP0=0, select bank0
  2581  0451  1303               	bcf	3,6	;RP1=0, select bank0
  2582  0452  0868               	movf	?___flsub+2,w
  2583  0453  1683               	bsf	3,5	;RP0=1, select bank1
  2584  0454  1303               	bcf	3,6	;RP1=0, select bank1
  2585  0455  00BF               	movwf	(sprintf@fval+2)^(0+128)
  2586  0456  1283               	bcf	3,5	;RP0=0, select bank0
  2587  0457  1303               	bcf	3,6	;RP1=0, select bank0
  2588  0458  0867               	movf	?___flsub+1,w
  2589  0459  1683               	bsf	3,5	;RP0=1, select bank1
  2590  045A  1303               	bcf	3,6	;RP1=0, select bank1
  2591  045B  00BE               	movwf	(sprintf@fval+1)^(0+128)
  2592  045C  1283               	bcf	3,5	;RP0=0, select bank0
  2593  045D  1303               	bcf	3,6	;RP1=0, select bank0
  2594  045E  0866               	movf	?___flsub,w
  2595  045F  1683               	bsf	3,5	;RP0=1, select bank1
  2596  0460  1303               	bcf	3,6	;RP1=0, select bank1
  2597  0461  00BD               	movwf	sprintf@fval^(0+128)
  2598  0462                     l3389:
  2599                           
  2600                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1159:      eexp =
      +                           0;
  2601  0462  01BB               	clrf	sprintf@eexp^(0+128)
  2602  0463  01BC               	clrf	(sprintf@eexp+1)^(0+128)
  2603  0464                     l3391:
  2604                           
  2605                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1162:     for(c =
      +                           1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  2606  0464  01C4               	clrf	sprintf@c^(0+128)
  2607  0465  0AC4               	incf	sprintf@c^(0+128),f
  2608  0466                     l3397:
  2609                           
  2610                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1163:      if(val
      +                           < dpowers[c])
  2611  0466  0844               	movf	sprintf@c^(0+128),w
  2612  0467  00A5               	movwf	??_sprintf^(0+128)
  2613  0468  3001               	movlw	1
  2614  0469                     u5595:
  2615  0469  1003               	clrc
  2616  046A  0DA5               	rlf	??_sprintf^(0+128),f
  2617  046B  3EFF               	addlw	-1
  2618  046C  1D03               	skipz
  2619  046D  2C69               	goto	u5595
  2620  046E  1003               	clrc
  2621  046F  0D25               	rlf	??_sprintf^(0+128),w
  2622  0470  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2623  0471  0084               	movwf	4
  2624  0472  160A  158A  2000  120A  118A  	fcall	stringdir
  2625  0477  00A6               	movwf	(??_sprintf+1)^(0+128)
  2626  0478  160A  158A  2000  120A  118A  	fcall	stringdir
  2627  047D  00A7               	movwf	((??_sprintf+1)^(0+128)+1)
  2628  047E  160A  158A  2000  120A  118A  	fcall	stringdir
  2629  0483  00A8               	movwf	((??_sprintf+1)^(0+128)+2)
  2630  0484  160A  158A  2000  120A  118A  	fcall	stringdir
  2631  0489  00A9               	movwf	((??_sprintf+1)^(0+128)+3)
  2632  048A  0829               	movf	(??_sprintf+4)^(0+128),w
  2633  048B  0232               	subwf	(sprintf@val+3)^(0+128),w
  2634  048C  1D03               	skipz
  2635  048D  2C98               	goto	u5605
  2636  048E  0828               	movf	(??_sprintf+3)^(0+128),w
  2637  048F  0231               	subwf	(sprintf@val+2)^(0+128),w
  2638  0490  1D03               	skipz
  2639  0491  2C98               	goto	u5605
  2640  0492  0827               	movf	(??_sprintf+2)^(0+128),w
  2641  0493  0230               	subwf	(sprintf@val+1)^(0+128),w
  2642  0494  1D03               	skipz
  2643  0495  2C98               	goto	u5605
  2644  0496  0826               	movf	(??_sprintf+1)^(0+128),w
  2645  0497  022F               	subwf	sprintf@val^(0+128),w
  2646  0498                     u5605:
  2647  0498  1803               	skipnc
  2648  0499  2C9B               	goto	u5601
  2649  049A  2C9C               	goto	u5600
  2650  049B                     u5601:
  2651  049B  2C9D               	goto	l3401
  2652  049C                     u5600:
  2653  049C  2CA7               	goto	l3403
  2654  049D                     l3401:
  2655  049D  3001               	movlw	1
  2656  049E  00A5               	movwf	??_sprintf^(0+128)
  2657  049F  0825               	movf	??_sprintf^(0+128),w
  2658  04A0  07C4               	addwf	sprintf@c^(0+128),f
  2659  04A1  300A               	movlw	10
  2660  04A2  0644               	xorwf	sprintf@c^(0+128),w
  2661  04A3  1D03               	btfss	3,2
  2662  04A4  2CA6               	goto	u5611
  2663  04A5  2CA7               	goto	u5610
  2664  04A6                     u5611:
  2665  04A6  2C66               	goto	l3397
  2666  04A7                     u5610:
  2667  04A7                     l3403:
  2668                           
  2669                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1168:     width -
      +                          = prec + c + eexp;
  2670  04A7  0844               	movf	sprintf@c^(0+128),w
  2671  04A8  0742               	addwf	sprintf@prec^(0+128),w
  2672  04A9  00A5               	movwf	??_sprintf^(0+128)
  2673  04AA  0843               	movf	(sprintf@prec+1)^(0+128),w
  2674  04AB  1803               	skipnc
  2675  04AC  0A43               	incf	(sprintf@prec+1)^(0+128),w
  2676  04AD  00A6               	movwf	(??_sprintf^(0+128)+1)
  2677  04AE  083B               	movf	sprintf@eexp^(0+128),w
  2678  04AF  0725               	addwf	??_sprintf^(0+128),w
  2679  04B0  00A7               	movwf	(??_sprintf+2)^(0+128)
  2680  04B1  083C               	movf	(sprintf@eexp+1)^(0+128),w
  2681  04B2  1803               	skipnc
  2682  04B3  0A3C               	incf	(sprintf@eexp+1)^(0+128),w
  2683  04B4  0726               	addwf	(??_sprintf+1)^(0+128),w
  2684  04B5  00A8               	movwf	(??_sprintf+3)^(0+128)
  2685  04B6  0827               	movf	(??_sprintf+2)^(0+128),w
  2686  04B7  02B5               	subwf	sprintf@width^(0+128),f
  2687  04B8  0828               	movf	(??_sprintf+3)^(0+128),w
  2688  04B9  1C03               	skipc
  2689  04BA  03B6               	decf	(sprintf@width+1)^(0+128),f
  2690  04BB  02B6               	subwf	(sprintf@width+1)^(0+128),f
  2691                           
  2692                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1169:     if(
  2693  04BC  0842               	movf	sprintf@prec^(0+128),w
  2694  04BD  0443               	iorwf	(sprintf@prec+1)^(0+128),w
  2695  04BE  1903               	btfsc	3,2
  2696  04BF  2CC1               	goto	u5621
  2697  04C0  2CC2               	goto	u5620
  2698  04C1                     u5621:
  2699  04C1  2CC8               	goto	l3407
  2700  04C2                     u5620:
  2701  04C2                     l3405:
  2702                           
  2703                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1174:      width-
      +                          -;
  2704  04C2  30FF               	movlw	255
  2705  04C3  07B5               	addwf	sprintf@width^(0+128),f
  2706  04C4  1803               	skipnc
  2707  04C5  0AB6               	incf	(sprintf@width+1)^(0+128),f
  2708  04C6  30FF               	movlw	255
  2709  04C7  07B6               	addwf	(sprintf@width+1)^(0+128),f
  2710  04C8                     l3407:
  2711                           
  2712                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1175:     if(flag
      +                           & 0x03)
  2713  04C8  3003               	movlw	3
  2714  04C9  0533               	andwf	sprintf@flag^(0+128),w
  2715  04CA  00A5               	movwf	??_sprintf^(0+128)
  2716  04CB  3000               	movlw	0
  2717  04CC  0534               	andwf	(sprintf@flag+1)^(0+128),w
  2718  04CD  00A6               	movwf	(??_sprintf+1)^(0+128)
  2719  04CE  0825               	movf	??_sprintf^(0+128),w
  2720  04CF  0426               	iorwf	(??_sprintf^(0+128)+1),w
  2721  04D0  1903               	btfsc	3,2
  2722  04D1  2CD3               	goto	u5631
  2723  04D2  2CD4               	goto	u5630
  2724  04D3                     u5631:
  2725  04D3  2CE9               	goto	l3417
  2726  04D4                     u5630:
  2727  04D4                     l3409:
  2728                           
  2729                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1176:      width-
      +                          -;
  2730  04D4  30FF               	movlw	255
  2731  04D5  07B5               	addwf	sprintf@width^(0+128),f
  2732  04D6  1803               	skipnc
  2733  04D7  0AB6               	incf	(sprintf@width+1)^(0+128),f
  2734  04D8  30FF               	movlw	255
  2735  04D9  07B6               	addwf	(sprintf@width+1)^(0+128),f
  2736  04DA  2CE9               	goto	l3417
  2737  04DB                     l3411:
  2738                           
  2739                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1207:       ((*sp
      +                          ++ = (' ')));
  2740  04DB  3020               	movlw	32
  2741  04DC  1683               	bsf	3,5	;RP0=1, select bank1
  2742  04DD  1303               	bcf	3,6	;RP1=0, select bank1
  2743  04DE  00A5               	movwf	??_sprintf^(0+128)
  2744  04DF  0841               	movf	sprintf@sp^(0+128),w
  2745  04E0  0084               	movwf	4
  2746  04E1  0825               	movf	??_sprintf^(0+128),w
  2747  04E2  1783               	bsf	3,7	;select IRP bank2
  2748  04E3  0080               	movwf	0
  2749  04E4                     l3413:
  2750  04E4  3001               	movlw	1
  2751  04E5  00A5               	movwf	??_sprintf^(0+128)
  2752  04E6  0825               	movf	??_sprintf^(0+128),w
  2753  04E7  07C1               	addwf	sprintf@sp^(0+128),f
  2754  04E8  2CD4               	goto	l3409
  2755  04E9                     l3417:
  2756                           
  2757                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1206:      while(
      +                          width > 0) {
  2758  04E9  0836               	movf	(sprintf@width+1)^(0+128),w
  2759  04EA  3A80               	xorlw	128
  2760  04EB  00FF               	movwf	btemp+1
  2761  04EC  3080               	movlw	128
  2762  04ED  027F               	subwf	btemp+1,w
  2763  04EE  1D03               	skipz
  2764  04EF  2CF2               	goto	u5645
  2765  04F0  3001               	movlw	1
  2766  04F1  0235               	subwf	sprintf@width^(0+128),w
  2767  04F2                     u5645:
  2768  04F2  1803               	skipnc
  2769  04F3  2CF5               	goto	u5641
  2770  04F4  2CF6               	goto	u5640
  2771  04F5                     u5641:
  2772  04F5  2CDB               	goto	l3411
  2773  04F6                     u5640:
  2774  04F6                     l3419:
  2775                           
  2776                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1214:     if(flag
      +                           & 0x03)
  2777  04F6  3003               	movlw	3
  2778  04F7  1683               	bsf	3,5	;RP0=1, select bank1
  2779  04F8  1303               	bcf	3,6	;RP1=0, select bank1
  2780  04F9  0533               	andwf	sprintf@flag^(0+128),w
  2781  04FA  00A5               	movwf	??_sprintf^(0+128)
  2782  04FB  3000               	movlw	0
  2783  04FC  0534               	andwf	(sprintf@flag+1)^(0+128),w
  2784  04FD  00A6               	movwf	(??_sprintf+1)^(0+128)
  2785  04FE  0825               	movf	??_sprintf^(0+128),w
  2786  04FF  0426               	iorwf	(??_sprintf^(0+128)+1),w
  2787  0500  1903               	btfsc	3,2
  2788  0501  2D03               	goto	u5651
  2789  0502  2D04               	goto	u5650
  2790  0503                     u5651:
  2791  0503  2D76               	goto	l280
  2792  0504                     u5650:
  2793  0504                     l3421:
  2794                           
  2795                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1216:      ((*sp+
      +                          + = ('-')));
  2796  0504  302D               	movlw	45
  2797  0505  00A5               	movwf	??_sprintf^(0+128)
  2798  0506  0841               	movf	sprintf@sp^(0+128),w
  2799  0507  0084               	movwf	4
  2800  0508  0825               	movf	??_sprintf^(0+128),w
  2801  0509  1783               	bsf	3,7	;select IRP bank2
  2802  050A  0080               	movwf	0
  2803  050B                     l3423:
  2804  050B  3001               	movlw	1
  2805  050C  00A5               	movwf	??_sprintf^(0+128)
  2806  050D  0825               	movf	??_sprintf^(0+128),w
  2807  050E  07C1               	addwf	sprintf@sp^(0+128),f
  2808  050F  2D76               	goto	l280
  2809  0510                     l3425:
  2810                           
  2811                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1226:     {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1227:      tmpval.vd = 
      +                          val/dpowers[c];
  2812  0510  0844               	movf	sprintf@c^(0+128),w
  2813  0511  00A5               	movwf	??_sprintf^(0+128)
  2814  0512  3001               	movlw	1
  2815  0513                     u5665:
  2816  0513  1003               	clrc
  2817  0514  0DA5               	rlf	??_sprintf^(0+128),f
  2818  0515  3EFF               	addlw	-1
  2819  0516  1D03               	skipz
  2820  0517  2D13               	goto	u5665
  2821  0518  1003               	clrc
  2822  0519  0D25               	rlf	??_sprintf^(0+128),w
  2823  051A  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2824  051B  0084               	movwf	4
  2825  051C  160A  158A  2000  120A  118A  	fcall	stringdir
  2826  0521  00F0               	movwf	___lldiv@divisor
  2827  0522  160A  158A  2000  120A  118A  	fcall	stringdir
  2828  0527  00F1               	movwf	___lldiv@divisor+1
  2829  0528  160A  158A  2000  120A  118A  	fcall	stringdir
  2830  052D  00F2               	movwf	___lldiv@divisor+2
  2831  052E  160A  158A  2000  120A  118A  	fcall	stringdir
  2832  0533  00F3               	movwf	___lldiv@divisor+3
  2833  0534  0832               	movf	(sprintf@val+3)^(0+128),w
  2834  0535  00F7               	movwf	___lldiv@dividend+3
  2835  0536  0831               	movf	(sprintf@val+2)^(0+128),w
  2836  0537  00F6               	movwf	___lldiv@dividend+2
  2837  0538  0830               	movf	(sprintf@val+1)^(0+128),w
  2838  0539  00F5               	movwf	___lldiv@dividend+1
  2839  053A  082F               	movf	sprintf@val^(0+128),w
  2840  053B  00F4               	movwf	___lldiv@dividend
  2841  053C  160A  158A  25E0  120A  118A  	fcall	___lldiv
  2842  0541  0873               	movf	?___lldiv+3,w
  2843  0542  1683               	bsf	3,5	;RP0=1, select bank1
  2844  0543  1303               	bcf	3,6	;RP1=0, select bank1
  2845  0544  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  2846  0545  0872               	movf	?___lldiv+2,w
  2847  0546  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  2848  0547  0871               	movf	?___lldiv+1,w
  2849  0548  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  2850  0549  0870               	movf	?___lldiv,w
  2851  054A  00B7               	movwf	sprintf@tmpval^(0+128)
  2852  054B                     l3427:
  2853                           
  2854                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1228:      tmpval
      +                          .vd %= 10;
  2855  054B  3000               	movlw	0
  2856  054C  00F3               	movwf	___llmod@divisor+3
  2857  054D  3000               	movlw	0
  2858  054E  00F2               	movwf	___llmod@divisor+2
  2859  054F  3000               	movlw	0
  2860  0550  00F1               	movwf	___llmod@divisor+1
  2861  0551  300A               	movlw	10
  2862  0552  00F0               	movwf	___llmod@divisor
  2863  0553  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  2864  0554  00F7               	movwf	___llmod@dividend+3
  2865  0555  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  2866  0556  00F6               	movwf	___llmod@dividend+2
  2867  0557  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  2868  0558  00F5               	movwf	___llmod@dividend+1
  2869  0559  0837               	movf	sprintf@tmpval^(0+128),w
  2870  055A  00F4               	movwf	___llmod@dividend
  2871  055B  160A  158A  24DD  120A  118A  	fcall	___llmod
  2872  0560  0873               	movf	?___llmod+3,w
  2873  0561  1683               	bsf	3,5	;RP0=1, select bank1
  2874  0562  1303               	bcf	3,6	;RP1=0, select bank1
  2875  0563  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  2876  0564  0872               	movf	?___llmod+2,w
  2877  0565  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  2878  0566  0871               	movf	?___llmod+1,w
  2879  0567  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  2880  0568  0870               	movf	?___llmod,w
  2881  0569  00B7               	movwf	sprintf@tmpval^(0+128)
  2882  056A                     l3429:
  2883                           
  2884                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1229:      ((*sp+
      +                          + = ('0' + tmpval.vd)));
  2885  056A  0837               	movf	sprintf@tmpval^(0+128),w
  2886  056B  3E30               	addlw	48
  2887  056C  00A5               	movwf	??_sprintf^(0+128)
  2888  056D  0841               	movf	sprintf@sp^(0+128),w
  2889  056E  0084               	movwf	4
  2890  056F  0825               	movf	??_sprintf^(0+128),w
  2891  0570  1783               	bsf	3,7	;select IRP bank2
  2892  0571  0080               	movwf	0
  2893  0572  3001               	movlw	1
  2894  0573  00A5               	movwf	??_sprintf^(0+128)
  2895  0574  0825               	movf	??_sprintf^(0+128),w
  2896  0575  07C1               	addwf	sprintf@sp^(0+128),f
  2897  0576                     l280:	
  2898                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1230:     };C:\Pr
      +                          ogram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1232:    }
  2899                           
  2900                           
  2901                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1222:    while(c-
      +                          -) {
  2902  0576  3001               	movlw	1
  2903  0577  02C4               	subwf	sprintf@c^(0+128),f
  2904  0578  0A44               	incf	sprintf@c^(0+128),w
  2905  0579  1D03               	btfss	3,2
  2906  057A  2D7C               	goto	u5671
  2907  057B  2D7D               	goto	u5670
  2908  057C                     u5671:
  2909  057C  2D10               	goto	l3425
  2910  057D                     u5670:
  2911  057D  2D91               	goto	l3437
  2912  057E                     l3431:
  2913                           
  2914                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1234:     ((*sp++
      +                           = ('0')));
  2915  057E  3030               	movlw	48
  2916  057F  1683               	bsf	3,5	;RP0=1, select bank1
  2917  0580  1303               	bcf	3,6	;RP1=0, select bank1
  2918  0581  00A5               	movwf	??_sprintf^(0+128)
  2919  0582  0841               	movf	sprintf@sp^(0+128),w
  2920  0583  0084               	movwf	4
  2921  0584  0825               	movf	??_sprintf^(0+128),w
  2922  0585  1783               	bsf	3,7	;select IRP bank2
  2923  0586  0080               	movwf	0
  2924  0587                     l3433:
  2925  0587  3001               	movlw	1
  2926  0588  00A5               	movwf	??_sprintf^(0+128)
  2927  0589  0825               	movf	??_sprintf^(0+128),w
  2928  058A  07C1               	addwf	sprintf@sp^(0+128),f
  2929  058B                     l3435:
  2930                           
  2931                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1235:     eexp--;
  2932  058B  30FF               	movlw	255
  2933  058C  07BB               	addwf	sprintf@eexp^(0+128),f
  2934  058D  1803               	skipnc
  2935  058E  0ABC               	incf	(sprintf@eexp+1)^(0+128),f
  2936  058F  30FF               	movlw	255
  2937  0590  07BC               	addwf	(sprintf@eexp+1)^(0+128),f
  2938  0591                     l3437:
  2939                           
  2940                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1233:    while(ee
      +                          xp > 0) {
  2941  0591  083C               	movf	(sprintf@eexp+1)^(0+128),w
  2942  0592  3A80               	xorlw	128
  2943  0593  00FF               	movwf	btemp+1
  2944  0594  3080               	movlw	128
  2945  0595  027F               	subwf	btemp+1,w
  2946  0596  1D03               	skipz
  2947  0597  2D9A               	goto	u5685
  2948  0598  3001               	movlw	1
  2949  0599  023B               	subwf	sprintf@eexp^(0+128),w
  2950  059A                     u5685:
  2951  059A  1803               	skipnc
  2952  059B  2D9D               	goto	u5681
  2953  059C  2D9E               	goto	u5680
  2954  059D                     u5681:
  2955  059D  2D7E               	goto	l3431
  2956  059E                     u5680:
  2957  059E                     l3439:
  2958                           
  2959                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1237:    if(prec 
      +                          > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  2960  059E  1683               	bsf	3,5	;RP0=1, select bank1
  2961  059F  1303               	bcf	3,6	;RP1=0, select bank1
  2962  05A0  0843               	movf	(sprintf@prec+1)^(0+128),w
  2963  05A1  3A80               	xorlw	128
  2964  05A2  00FF               	movwf	btemp+1
  2965  05A3  3080               	movlw	128
  2966  05A4  027F               	subwf	btemp+1,w
  2967  05A5  1D03               	skipz
  2968  05A6  2DA9               	goto	u5695
  2969  05A7  3009               	movlw	9
  2970  05A8  0242               	subwf	sprintf@prec^(0+128),w
  2971  05A9                     u5695:
  2972  05A9  1C03               	skipc
  2973  05AA  2DAC               	goto	u5691
  2974  05AB  2DAD               	goto	u5690
  2975  05AC                     u5691:
  2976  05AC  2DB4               	goto	l3443
  2977  05AD                     u5690:
  2978  05AD                     l3441:
  2979                           
  2980                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1238:     c = (si
      +                          zeof dpowers/sizeof dpowers[0])-2;
  2981  05AD  3008               	movlw	8
  2982  05AE  1683               	bsf	3,5	;RP0=1, select bank1
  2983  05AF  1303               	bcf	3,6	;RP1=0, select bank1
  2984  05B0  00A5               	movwf	??_sprintf^(0+128)
  2985  05B1  0825               	movf	??_sprintf^(0+128),w
  2986  05B2  00C4               	movwf	sprintf@c^(0+128)
  2987  05B3  2DBA               	goto	l287
  2988  05B4                     l3443:
  2989                           
  2990                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1240:     c = (ch
      +                          ar)prec;
  2991  05B4  1683               	bsf	3,5	;RP0=1, select bank1
  2992  05B5  1303               	bcf	3,6	;RP1=0, select bank1
  2993  05B6  0842               	movf	sprintf@prec^(0+128),w
  2994  05B7  00A5               	movwf	??_sprintf^(0+128)
  2995  05B8  0825               	movf	??_sprintf^(0+128),w
  2996  05B9  00C4               	movwf	sprintf@c^(0+128)
  2997  05BA                     l287:
  2998                           
  2999                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1241:    prec -= 
      +                          (int)c;
  3000  05BA  0844               	movf	sprintf@c^(0+128),w
  3001  05BB  00A5               	movwf	??_sprintf^(0+128)
  3002  05BC  01A6               	clrf	(??_sprintf^(0+128)+1)
  3003  05BD  0825               	movf	??_sprintf^(0+128),w
  3004  05BE  02C2               	subwf	sprintf@prec^(0+128),f
  3005  05BF  0826               	movf	(??_sprintf+1)^(0+128),w
  3006  05C0  1C03               	skipc
  3007  05C1  03C3               	decf	(sprintf@prec+1)^(0+128),f
  3008  05C2  02C3               	subwf	(sprintf@prec+1)^(0+128),f
  3009  05C3                     l3445:
  3010                           
  3011                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1245:    if(c)
  3012  05C3  0844               	movf	sprintf@c^(0+128),w
  3013  05C4  1903               	btfsc	3,2
  3014  05C5  2DC7               	goto	u5701
  3015  05C6  2DC8               	goto	u5700
  3016  05C7                     u5701:
  3017  05C7  2DD3               	goto	l3451
  3018  05C8                     u5700:
  3019  05C8                     l3447:
  3020                           
  3021                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1247:     ((*sp++
      +                           = ('.')));
  3022  05C8  302E               	movlw	46
  3023  05C9  00A5               	movwf	??_sprintf^(0+128)
  3024  05CA  0841               	movf	sprintf@sp^(0+128),w
  3025  05CB  0084               	movwf	4
  3026  05CC  0825               	movf	??_sprintf^(0+128),w
  3027  05CD  1783               	bsf	3,7	;select IRP bank2
  3028  05CE  0080               	movwf	0
  3029  05CF                     l3449:
  3030  05CF  3001               	movlw	1
  3031  05D0  00A5               	movwf	??_sprintf^(0+128)
  3032  05D1  0825               	movf	??_sprintf^(0+128),w
  3033  05D2  07C1               	addwf	sprintf@sp^(0+128),f
  3034  05D3                     l3451:
  3035                           
  3036                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
  3037  05D3  0844               	movf	sprintf@c^(0+128),w
  3038  05D4  120A  158A  2140  120A  118A  	fcall	_scale
  3039  05D9  1283               	bcf	3,5	;RP0=0, select bank0
  3040  05DA  1303               	bcf	3,6	;RP1=0, select bank0
  3041  05DB  0841               	movf	?_scale+3,w
  3042  05DC  1683               	bsf	3,5	;RP0=1, select bank1
  3043  05DD  1303               	bcf	3,6	;RP1=0, select bank1
  3044  05DE  00AD               	movwf	(_sprintf$924+3)^(0+128)
  3045  05DF  1283               	bcf	3,5	;RP0=0, select bank0
  3046  05E0  1303               	bcf	3,6	;RP1=0, select bank0
  3047  05E1  0840               	movf	?_scale+2,w
  3048  05E2  1683               	bsf	3,5	;RP0=1, select bank1
  3049  05E3  1303               	bcf	3,6	;RP1=0, select bank1
  3050  05E4  00AC               	movwf	(_sprintf$924+2)^(0+128)
  3051  05E5  1283               	bcf	3,5	;RP0=0, select bank0
  3052  05E6  1303               	bcf	3,6	;RP1=0, select bank0
  3053  05E7  083F               	movf	?_scale+1,w
  3054  05E8  1683               	bsf	3,5	;RP0=1, select bank1
  3055  05E9  1303               	bcf	3,6	;RP1=0, select bank1
  3056  05EA  00AB               	movwf	(_sprintf$924+1)^(0+128)
  3057  05EB  1283               	bcf	3,5	;RP0=0, select bank0
  3058  05EC  1303               	bcf	3,6	;RP1=0, select bank0
  3059  05ED  083E               	movf	?_scale,w
  3060  05EE  1683               	bsf	3,5	;RP0=1, select bank1
  3061  05EF  1303               	bcf	3,6	;RP1=0, select bank1
  3062  05F0  00AA               	movwf	_sprintf$924^(0+128)
  3063  05F1                     l3453:
  3064                           
  3065                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
  3066  05F1  082D               	movf	(_sprintf$924+3)^(0+128),w
  3067  05F2  1283               	bcf	3,5	;RP0=0, select bank0
  3068  05F3  1303               	bcf	3,6	;RP1=0, select bank0
  3069  05F4  00AB               	movwf	___flmul@a+3
  3070  05F5  1683               	bsf	3,5	;RP0=1, select bank1
  3071  05F6  1303               	bcf	3,6	;RP1=0, select bank1
  3072  05F7  082C               	movf	(_sprintf$924+2)^(0+128),w
  3073  05F8  1283               	bcf	3,5	;RP0=0, select bank0
  3074  05F9  1303               	bcf	3,6	;RP1=0, select bank0
  3075  05FA  00AA               	movwf	___flmul@a+2
  3076  05FB  1683               	bsf	3,5	;RP0=1, select bank1
  3077  05FC  1303               	bcf	3,6	;RP1=0, select bank1
  3078  05FD  082B               	movf	(_sprintf$924+1)^(0+128),w
  3079  05FE  1283               	bcf	3,5	;RP0=0, select bank0
  3080  05FF  1303               	bcf	3,6	;RP1=0, select bank0
  3081  0600  00A9               	movwf	___flmul@a+1
  3082  0601  1683               	bsf	3,5	;RP0=1, select bank1
  3083  0602  1303               	bcf	3,6	;RP1=0, select bank1
  3084  0603  082A               	movf	_sprintf$924^(0+128),w
  3085  0604  1283               	bcf	3,5	;RP0=0, select bank0
  3086  0605  1303               	bcf	3,6	;RP1=0, select bank0
  3087  0606  00A8               	movwf	___flmul@a
  3088  0607  1683               	bsf	3,5	;RP0=1, select bank1
  3089  0608  1303               	bcf	3,6	;RP1=0, select bank1
  3090  0609  0840               	movf	(sprintf@fval+3)^(0+128),w
  3091  060A  1283               	bcf	3,5	;RP0=0, select bank0
  3092  060B  1303               	bcf	3,6	;RP1=0, select bank0
  3093  060C  00A7               	movwf	___flmul@b+3
  3094  060D  1683               	bsf	3,5	;RP0=1, select bank1
  3095  060E  1303               	bcf	3,6	;RP1=0, select bank1
  3096  060F  083F               	movf	(sprintf@fval+2)^(0+128),w
  3097  0610  1283               	bcf	3,5	;RP0=0, select bank0
  3098  0611  1303               	bcf	3,6	;RP1=0, select bank0
  3099  0612  00A6               	movwf	___flmul@b+2
  3100  0613  1683               	bsf	3,5	;RP0=1, select bank1
  3101  0614  1303               	bcf	3,6	;RP1=0, select bank1
  3102  0615  083E               	movf	(sprintf@fval+1)^(0+128),w
  3103  0616  1283               	bcf	3,5	;RP0=0, select bank0
  3104  0617  1303               	bcf	3,6	;RP1=0, select bank0
  3105  0618  00A5               	movwf	___flmul@b+1
  3106  0619  1683               	bsf	3,5	;RP0=1, select bank1
  3107  061A  1303               	bcf	3,6	;RP1=0, select bank1
  3108  061B  083D               	movf	sprintf@fval^(0+128),w
  3109  061C  1283               	bcf	3,5	;RP0=0, select bank0
  3110  061D  1303               	bcf	3,6	;RP1=0, select bank0
  3111  061E  00A4               	movwf	___flmul@b
  3112  061F  120A  158A  249F  120A  118A  	fcall	___flmul
  3113  0624  1283               	bcf	3,5	;RP0=0, select bank0
  3114  0625  1303               	bcf	3,6	;RP1=0, select bank0
  3115  0626  0827               	movf	?___flmul+3,w
  3116  0627  00C1               	movwf	___fltol@f1+3
  3117  0628  0826               	movf	?___flmul+2,w
  3118  0629  00C0               	movwf	___fltol@f1+2
  3119  062A  0825               	movf	?___flmul+1,w
  3120  062B  00BF               	movwf	___fltol@f1+1
  3121  062C  0824               	movf	?___flmul,w
  3122  062D  00BE               	movwf	___fltol@f1
  3123  062E  120A  158A  2006  120A  118A  	fcall	___fltol
  3124  0633  1283               	bcf	3,5	;RP0=0, select bank0
  3125  0634  1303               	bcf	3,6	;RP1=0, select bank0
  3126  0635  0841               	movf	?___fltol+3,w
  3127  0636  1683               	bsf	3,5	;RP0=1, select bank1
  3128  0637  1303               	bcf	3,6	;RP1=0, select bank1
  3129  0638  00B2               	movwf	(sprintf@val+3)^(0+128)
  3130  0639  1283               	bcf	3,5	;RP0=0, select bank0
  3131  063A  1303               	bcf	3,6	;RP1=0, select bank0
  3132  063B  0840               	movf	?___fltol+2,w
  3133  063C  1683               	bsf	3,5	;RP0=1, select bank1
  3134  063D  1303               	bcf	3,6	;RP1=0, select bank1
  3135  063E  00B1               	movwf	(sprintf@val+2)^(0+128)
  3136  063F  1283               	bcf	3,5	;RP0=0, select bank0
  3137  0640  1303               	bcf	3,6	;RP1=0, select bank0
  3138  0641  083F               	movf	?___fltol+1,w
  3139  0642  1683               	bsf	3,5	;RP0=1, select bank1
  3140  0643  1303               	bcf	3,6	;RP1=0, select bank1
  3141  0644  00B0               	movwf	(sprintf@val+1)^(0+128)
  3142  0645  1283               	bcf	3,5	;RP0=0, select bank0
  3143  0646  1303               	bcf	3,6	;RP1=0, select bank0
  3144  0647  083E               	movf	?___fltol,w
  3145  0648  1683               	bsf	3,5	;RP0=1, select bank1
  3146  0649  1303               	bcf	3,6	;RP1=0, select bank1
  3147  064A  00AF               	movwf	sprintf@val^(0+128)
  3148                           
  3149                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
  3150  064B  2EED               	goto	l3463
  3151  064C                     l3455:
  3152                           
  3153                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1255:     tmpval.
      +                          vd = val/dpowers[c];
  3154  064C  0844               	movf	sprintf@c^(0+128),w
  3155  064D  00A5               	movwf	??_sprintf^(0+128)
  3156  064E  3001               	movlw	1
  3157  064F                     u5715:
  3158  064F  1003               	clrc
  3159  0650  0DA5               	rlf	??_sprintf^(0+128),f
  3160  0651  3EFF               	addlw	-1
  3161  0652  1D03               	skipz
  3162  0653  2E4F               	goto	u5715
  3163  0654  1003               	clrc
  3164  0655  0D25               	rlf	??_sprintf^(0+128),w
  3165  0656  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3166  0657  0084               	movwf	4
  3167  0658  160A  158A  2000  120A  118A  	fcall	stringdir
  3168  065D  00F0               	movwf	___lldiv@divisor
  3169  065E  160A  158A  2000  120A  118A  	fcall	stringdir
  3170  0663  00F1               	movwf	___lldiv@divisor+1
  3171  0664  160A  158A  2000  120A  118A  	fcall	stringdir
  3172  0669  00F2               	movwf	___lldiv@divisor+2
  3173  066A  160A  158A  2000  120A  118A  	fcall	stringdir
  3174  066F  00F3               	movwf	___lldiv@divisor+3
  3175  0670  0832               	movf	(sprintf@val+3)^(0+128),w
  3176  0671  00F7               	movwf	___lldiv@dividend+3
  3177  0672  0831               	movf	(sprintf@val+2)^(0+128),w
  3178  0673  00F6               	movwf	___lldiv@dividend+2
  3179  0674  0830               	movf	(sprintf@val+1)^(0+128),w
  3180  0675  00F5               	movwf	___lldiv@dividend+1
  3181  0676  082F               	movf	sprintf@val^(0+128),w
  3182  0677  00F4               	movwf	___lldiv@dividend
  3183  0678  160A  158A  25E0  120A  118A  	fcall	___lldiv
  3184  067D  0873               	movf	?___lldiv+3,w
  3185  067E  1683               	bsf	3,5	;RP0=1, select bank1
  3186  067F  1303               	bcf	3,6	;RP1=0, select bank1
  3187  0680  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  3188  0681  0872               	movf	?___lldiv+2,w
  3189  0682  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  3190  0683  0871               	movf	?___lldiv+1,w
  3191  0684  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  3192  0685  0870               	movf	?___lldiv,w
  3193  0686  00B7               	movwf	sprintf@tmpval^(0+128)
  3194  0687                     l3457:
  3195                           
  3196                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1256:     tmpval.
      +                          vd %= 10;
  3197  0687  3000               	movlw	0
  3198  0688  00F3               	movwf	___llmod@divisor+3
  3199  0689  3000               	movlw	0
  3200  068A  00F2               	movwf	___llmod@divisor+2
  3201  068B  3000               	movlw	0
  3202  068C  00F1               	movwf	___llmod@divisor+1
  3203  068D  300A               	movlw	10
  3204  068E  00F0               	movwf	___llmod@divisor
  3205  068F  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  3206  0690  00F7               	movwf	___llmod@dividend+3
  3207  0691  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  3208  0692  00F6               	movwf	___llmod@dividend+2
  3209  0693  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  3210  0694  00F5               	movwf	___llmod@dividend+1
  3211  0695  0837               	movf	sprintf@tmpval^(0+128),w
  3212  0696  00F4               	movwf	___llmod@dividend
  3213  0697  160A  158A  24DD  120A  118A  	fcall	___llmod
  3214  069C  0873               	movf	?___llmod+3,w
  3215  069D  1683               	bsf	3,5	;RP0=1, select bank1
  3216  069E  1303               	bcf	3,6	;RP1=0, select bank1
  3217  069F  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  3218  06A0  0872               	movf	?___llmod+2,w
  3219  06A1  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  3220  06A2  0871               	movf	?___llmod+1,w
  3221  06A3  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  3222  06A4  0870               	movf	?___llmod,w
  3223  06A5  00B7               	movwf	sprintf@tmpval^(0+128)
  3224  06A6                     l3459:
  3225                           
  3226                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1257:     ((*sp++
      +                           = ('0' + tmpval.vd)));
  3227  06A6  0837               	movf	sprintf@tmpval^(0+128),w
  3228  06A7  3E30               	addlw	48
  3229  06A8  00A5               	movwf	??_sprintf^(0+128)
  3230  06A9  0841               	movf	sprintf@sp^(0+128),w
  3231  06AA  0084               	movwf	4
  3232  06AB  0825               	movf	??_sprintf^(0+128),w
  3233  06AC  1783               	bsf	3,7	;select IRP bank2
  3234  06AD  0080               	movwf	0
  3235  06AE  3001               	movlw	1
  3236  06AF  00A5               	movwf	??_sprintf^(0+128)
  3237  06B0  0825               	movf	??_sprintf^(0+128),w
  3238  06B1  07C1               	addwf	sprintf@sp^(0+128),f
  3239  06B2                     l3461:
  3240                           
  3241                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1258:     val %= 
      +                          dpowers[c];
  3242  06B2  0844               	movf	sprintf@c^(0+128),w
  3243  06B3  00A5               	movwf	??_sprintf^(0+128)
  3244  06B4  3001               	movlw	1
  3245  06B5                     u5725:
  3246  06B5  1003               	clrc
  3247  06B6  0DA5               	rlf	??_sprintf^(0+128),f
  3248  06B7  3EFF               	addlw	-1
  3249  06B8  1D03               	skipz
  3250  06B9  2EB5               	goto	u5725
  3251  06BA  1003               	clrc
  3252  06BB  0D25               	rlf	??_sprintf^(0+128),w
  3253  06BC  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3254  06BD  0084               	movwf	4
  3255  06BE  160A  158A  2000  120A  118A  	fcall	stringdir
  3256  06C3  00F0               	movwf	___llmod@divisor
  3257  06C4  160A  158A  2000  120A  118A  	fcall	stringdir
  3258  06C9  00F1               	movwf	___llmod@divisor+1
  3259  06CA  160A  158A  2000  120A  118A  	fcall	stringdir
  3260  06CF  00F2               	movwf	___llmod@divisor+2
  3261  06D0  160A  158A  2000  120A  118A  	fcall	stringdir
  3262  06D5  00F3               	movwf	___llmod@divisor+3
  3263  06D6  0832               	movf	(sprintf@val+3)^(0+128),w
  3264  06D7  00F7               	movwf	___llmod@dividend+3
  3265  06D8  0831               	movf	(sprintf@val+2)^(0+128),w
  3266  06D9  00F6               	movwf	___llmod@dividend+2
  3267  06DA  0830               	movf	(sprintf@val+1)^(0+128),w
  3268  06DB  00F5               	movwf	___llmod@dividend+1
  3269  06DC  082F               	movf	sprintf@val^(0+128),w
  3270  06DD  00F4               	movwf	___llmod@dividend
  3271  06DE  160A  158A  24DD  120A  118A  	fcall	___llmod
  3272  06E3  0873               	movf	?___llmod+3,w
  3273  06E4  1683               	bsf	3,5	;RP0=1, select bank1
  3274  06E5  1303               	bcf	3,6	;RP1=0, select bank1
  3275  06E6  00B2               	movwf	(sprintf@val+3)^(0+128)
  3276  06E7  0872               	movf	?___llmod+2,w
  3277  06E8  00B1               	movwf	(sprintf@val+2)^(0+128)
  3278  06E9  0871               	movf	?___llmod+1,w
  3279  06EA  00B0               	movwf	(sprintf@val+1)^(0+128)
  3280  06EB  0870               	movf	?___llmod,w
  3281  06EC  00AF               	movwf	sprintf@val^(0+128)
  3282  06ED                     l3463:
  3283                           
  3284                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
  3285  06ED  3001               	movlw	1
  3286  06EE  02C4               	subwf	sprintf@c^(0+128),f
  3287  06EF  0A44               	incf	sprintf@c^(0+128),w
  3288  06F0  1D03               	btfss	3,2
  3289  06F1  2EF3               	goto	u5731
  3290  06F2  2EF4               	goto	u5730
  3291  06F3                     u5731:
  3292  06F3  2E4C               	goto	l3455
  3293  06F4                     u5730:
  3294  06F4  2F06               	goto	l3471
  3295  06F5                     l3465:
  3296                           
  3297                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1262:     ((*sp++
      +                           = ('0')));
  3298  06F5  3030               	movlw	48
  3299  06F6  00A5               	movwf	??_sprintf^(0+128)
  3300  06F7  0841               	movf	sprintf@sp^(0+128),w
  3301  06F8  0084               	movwf	4
  3302  06F9  0825               	movf	??_sprintf^(0+128),w
  3303  06FA  1783               	bsf	3,7	;select IRP bank2
  3304  06FB  0080               	movwf	0
  3305  06FC                     l3467:
  3306  06FC  3001               	movlw	1
  3307  06FD  00A5               	movwf	??_sprintf^(0+128)
  3308  06FE  0825               	movf	??_sprintf^(0+128),w
  3309  06FF  07C1               	addwf	sprintf@sp^(0+128),f
  3310  0700                     l3469:
  3311                           
  3312                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1263:     prec--;
  3313  0700  30FF               	movlw	255
  3314  0701  07C2               	addwf	sprintf@prec^(0+128),f
  3315  0702  1803               	skipnc
  3316  0703  0AC3               	incf	(sprintf@prec+1)^(0+128),f
  3317  0704  30FF               	movlw	255
  3318  0705  07C3               	addwf	(sprintf@prec+1)^(0+128),f
  3319  0706                     l3471:
  3320                           
  3321                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1261:    while(pr
      +                          ec) {
  3322  0706  0842               	movf	sprintf@prec^(0+128),w
  3323  0707  0443               	iorwf	(sprintf@prec+1)^(0+128),w
  3324  0708  1D03               	btfss	3,2
  3325  0709  2F0B               	goto	u5741
  3326  070A  2F0C               	goto	u5740
  3327  070B                     u5741:
  3328  070B  2EF5               	goto	l3465
  3329  070C                     u5740:
  3330  070C  2FD0               	goto	l3519
  3331  070D                     l3473:
  3332                           
  3333                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1316:   if(prec =
      +                          = 0 && val == 0)
  3334  070D  0842               	movf	sprintf@prec^(0+128),w
  3335  070E  0443               	iorwf	(sprintf@prec+1)^(0+128),w
  3336  070F  1D03               	btfss	3,2
  3337  0710  2F12               	goto	u5751
  3338  0711  2F13               	goto	u5750
  3339  0712                     u5751:
  3340  0712  2F21               	goto	l295
  3341  0713                     u5750:
  3342  0713                     l3475:
  3343  0713  0832               	movf	(sprintf@val+3)^(0+128),w
  3344  0714  0431               	iorwf	(sprintf@val+2)^(0+128),w
  3345  0715  0430               	iorwf	(sprintf@val+1)^(0+128),w
  3346  0716  042F               	iorwf	sprintf@val^(0+128),w
  3347  0717  1D03               	skipz
  3348  0718  2F1A               	goto	u5761
  3349  0719  2F1B               	goto	u5760
  3350  071A                     u5761:
  3351  071A  2F21               	goto	l295
  3352  071B                     u5760:
  3353  071B                     l3477:
  3354                           
  3355                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1317:    prec++;
  3356  071B  3001               	movlw	1
  3357  071C  07C2               	addwf	sprintf@prec^(0+128),f
  3358  071D  1803               	skipnc
  3359  071E  0AC3               	incf	(sprintf@prec+1)^(0+128),f
  3360  071F  3000               	movlw	0
  3361  0720  07C3               	addwf	(sprintf@prec+1)^(0+128),f
  3362  0721                     l295:
  3363                           
  3364                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1365:   if(c < pr
      +                          ec)
  3365  0721  0843               	movf	(sprintf@prec+1)^(0+128),w
  3366  0722  3A80               	xorlw	128
  3367  0723  3C80               	sublw	128
  3368  0724  1D03               	skipz
  3369  0725  2F28               	goto	u5775
  3370  0726  0842               	movf	sprintf@prec^(0+128),w
  3371  0727  0244               	subwf	sprintf@c^(0+128),w
  3372  0728                     u5775:
  3373  0728  1803               	skipnc
  3374  0729  2F2B               	goto	u5771
  3375  072A  2F2C               	goto	u5770
  3376  072B                     u5771:
  3377  072B  2F33               	goto	l3481
  3378  072C                     u5770:
  3379  072C                     l3479:
  3380                           
  3381                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1366:    c = (cha
      +                          r)prec;
  3382  072C  1683               	bsf	3,5	;RP0=1, select bank1
  3383  072D  1303               	bcf	3,6	;RP1=0, select bank1
  3384  072E  0842               	movf	sprintf@prec^(0+128),w
  3385  072F  00A5               	movwf	??_sprintf^(0+128)
  3386  0730  0825               	movf	??_sprintf^(0+128),w
  3387  0731  00C4               	movwf	sprintf@c^(0+128)
  3388  0732  2F4B               	goto	l3485
  3389  0733                     l3481:
  3390  0733  1683               	bsf	3,5	;RP0=1, select bank1
  3391  0734  1303               	bcf	3,6	;RP1=0, select bank1
  3392  0735  0843               	movf	(sprintf@prec+1)^(0+128),w
  3393  0736  3A80               	xorlw	128
  3394  0737  00A5               	movwf	??_sprintf^(0+128)
  3395  0738  3080               	movlw	128
  3396  0739  0225               	subwf	??_sprintf^(0+128),w
  3397  073A  1D03               	skipz
  3398  073B  2F3E               	goto	u5785
  3399  073C  0844               	movf	sprintf@c^(0+128),w
  3400  073D  0242               	subwf	sprintf@prec^(0+128),w
  3401  073E                     u5785:
  3402  073E  1803               	skipnc
  3403  073F  2F41               	goto	u5781
  3404  0740  2F42               	goto	u5780
  3405  0741                     u5781:
  3406  0741  2F4B               	goto	l3485
  3407  0742                     u5780:
  3408  0742                     l3483:
  3409                           
  3410                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1368:    prec = c
      +                          ;
  3411  0742  1683               	bsf	3,5	;RP0=1, select bank1
  3412  0743  1303               	bcf	3,6	;RP1=0, select bank1
  3413  0744  0844               	movf	sprintf@c^(0+128),w
  3414  0745  00A5               	movwf	??_sprintf^(0+128)
  3415  0746  01A6               	clrf	(??_sprintf^(0+128)+1)
  3416  0747  0825               	movf	??_sprintf^(0+128),w
  3417  0748  00C2               	movwf	sprintf@prec^(0+128)
  3418  0749  0826               	movf	(??_sprintf+1)^(0+128),w
  3419  074A  00C3               	movwf	(sprintf@prec+1)^(0+128)
  3420  074B                     l3485:
  3421                           
  3422                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1371:   if(width 
      +                          && flag & 0x03)
  3423  074B  1683               	bsf	3,5	;RP0=1, select bank1
  3424  074C  1303               	bcf	3,6	;RP1=0, select bank1
  3425  074D  0835               	movf	sprintf@width^(0+128),w
  3426  074E  0436               	iorwf	(sprintf@width+1)^(0+128),w
  3427  074F  1903               	btfsc	3,2
  3428  0750  2F52               	goto	u5791
  3429  0751  2F53               	goto	u5790
  3430  0752                     u5791:
  3431  0752  2F65               	goto	l3491
  3432  0753                     u5790:
  3433  0753                     l3487:
  3434  0753  3003               	movlw	3
  3435  0754  0533               	andwf	sprintf@flag^(0+128),w
  3436  0755  00A5               	movwf	??_sprintf^(0+128)
  3437  0756  3000               	movlw	0
  3438  0757  0534               	andwf	(sprintf@flag+1)^(0+128),w
  3439  0758  00A6               	movwf	(??_sprintf+1)^(0+128)
  3440  0759  0825               	movf	??_sprintf^(0+128),w
  3441  075A  0426               	iorwf	(??_sprintf^(0+128)+1),w
  3442  075B  1903               	btfsc	3,2
  3443  075C  2F5E               	goto	u5801
  3444  075D  2F5F               	goto	u5800
  3445  075E                     u5801:
  3446  075E  2F65               	goto	l3491
  3447  075F                     u5800:
  3448  075F                     l3489:
  3449                           
  3450                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1372:    width--;
  3451  075F  30FF               	movlw	255
  3452  0760  07B5               	addwf	sprintf@width^(0+128),f
  3453  0761  1803               	skipnc
  3454  0762  0AB6               	incf	(sprintf@width+1)^(0+128),f
  3455  0763  30FF               	movlw	255
  3456  0764  07B6               	addwf	(sprintf@width+1)^(0+128),f
  3457  0765                     l3491:
  3458                           
  3459                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1374:   if(flag &
      +                           0x4000) {
  3460  0765  1F34               	btfss	(sprintf@flag+1)^(0+128),6
  3461  0766  2F68               	goto	u5811
  3462  0767  2F69               	goto	u5810
  3463  0768                     u5811:
  3464  0768  2F84               	goto	l3499
  3465  0769                     u5810:
  3466  0769                     l3493:
  3467                           
  3468                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1375:    if(width
      +                           > prec)
  3469  0769  0843               	movf	(sprintf@prec+1)^(0+128),w
  3470  076A  3A80               	xorlw	128
  3471  076B  00A5               	movwf	??_sprintf^(0+128)
  3472  076C  0836               	movf	(sprintf@width+1)^(0+128),w
  3473  076D  3A80               	xorlw	128
  3474  076E  0225               	subwf	??_sprintf^(0+128),w
  3475  076F  1D03               	skipz
  3476  0770  2F73               	goto	u5825
  3477  0771  0835               	movf	sprintf@width^(0+128),w
  3478  0772  0242               	subwf	sprintf@prec^(0+128),w
  3479  0773                     u5825:
  3480  0773  1803               	skipnc
  3481  0774  2F76               	goto	u5821
  3482  0775  2F77               	goto	u5820
  3483  0776                     u5821:
  3484  0776  2F80               	goto	l3497
  3485  0777                     u5820:
  3486  0777                     l3495:
  3487                           
  3488                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1376:     width -
      +                          = prec;
  3489  0777  1683               	bsf	3,5	;RP0=1, select bank1
  3490  0778  1303               	bcf	3,6	;RP1=0, select bank1
  3491  0779  0842               	movf	sprintf@prec^(0+128),w
  3492  077A  02B5               	subwf	sprintf@width^(0+128),f
  3493  077B  0843               	movf	(sprintf@prec+1)^(0+128),w
  3494  077C  1C03               	skipc
  3495  077D  03B6               	decf	(sprintf@width+1)^(0+128),f
  3496  077E  02B6               	subwf	(sprintf@width+1)^(0+128),f
  3497  077F  2F84               	goto	l3499
  3498  0780                     l3497:
  3499                           
  3500                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1378:     width =
      +                           0;
  3501  0780  1683               	bsf	3,5	;RP0=1, select bank1
  3502  0781  1303               	bcf	3,6	;RP1=0, select bank1
  3503  0782  01B5               	clrf	sprintf@width^(0+128)
  3504  0783  01B6               	clrf	(sprintf@width+1)^(0+128)
  3505  0784                     l3499:
  3506                           
  3507                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1407:   if(width 
      +                          > c)
  3508  0784  0836               	movf	(sprintf@width+1)^(0+128),w
  3509  0785  3A80               	xorlw	128
  3510  0786  3C80               	sublw	128
  3511  0787  1D03               	skipz
  3512  0788  2F8B               	goto	u5835
  3513  0789  0835               	movf	sprintf@width^(0+128),w
  3514  078A  0244               	subwf	sprintf@c^(0+128),w
  3515  078B                     u5835:
  3516  078B  1803               	skipnc
  3517  078C  2F8E               	goto	u5831
  3518  078D  2F8F               	goto	u5830
  3519  078E                     u5831:
  3520  078E  2F9B               	goto	l3503
  3521  078F                     u5830:
  3522  078F                     l3501:
  3523                           
  3524                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1408:    width -=
      +                           c;
  3525  078F  1683               	bsf	3,5	;RP0=1, select bank1
  3526  0790  1303               	bcf	3,6	;RP1=0, select bank1
  3527  0791  0844               	movf	sprintf@c^(0+128),w
  3528  0792  00A5               	movwf	??_sprintf^(0+128)
  3529  0793  01A6               	clrf	(??_sprintf^(0+128)+1)
  3530  0794  0825               	movf	??_sprintf^(0+128),w
  3531  0795  02B5               	subwf	sprintf@width^(0+128),f
  3532  0796  0826               	movf	(??_sprintf+1)^(0+128),w
  3533  0797  1C03               	skipc
  3534  0798  03B6               	decf	(sprintf@width+1)^(0+128),f
  3535  0799  02B6               	subwf	(sprintf@width+1)^(0+128),f
  3536  079A  2F9F               	goto	l3505
  3537  079B                     l3503:
  3538                           
  3539                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1410:    width = 
      +                          0;
  3540  079B  1683               	bsf	3,5	;RP0=1, select bank1
  3541  079C  1303               	bcf	3,6	;RP1=0, select bank1
  3542  079D  01B5               	clrf	sprintf@width^(0+128)
  3543  079E  01B6               	clrf	(sprintf@width+1)^(0+128)
  3544  079F                     l3505:
  3545                           
  3546                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1450:    if(width
  3547  079F  0835               	movf	sprintf@width^(0+128),w
  3548  07A0  0436               	iorwf	(sprintf@width+1)^(0+128),w
  3549  07A1  1903               	btfsc	3,2
  3550  07A2  2FA4               	goto	u5841
  3551  07A3  2FA5               	goto	u5840
  3552  07A4                     u5841:
  3553  07A4  2FBC               	goto	l3513
  3554  07A5                     u5840:
  3555  07A5                     l3507:
  3556                           
  3557                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1456:      ((*sp+
      +                          + = (' ')));
  3558  07A5  3020               	movlw	32
  3559  07A6  00A5               	movwf	??_sprintf^(0+128)
  3560  07A7  0841               	movf	sprintf@sp^(0+128),w
  3561  07A8  0084               	movwf	4
  3562  07A9  0825               	movf	??_sprintf^(0+128),w
  3563  07AA  1783               	bsf	3,7	;select IRP bank2
  3564  07AB  0080               	movwf	0
  3565  07AC                     l3509:
  3566  07AC  3001               	movlw	1
  3567  07AD  00A5               	movwf	??_sprintf^(0+128)
  3568  07AE  0825               	movf	??_sprintf^(0+128),w
  3569  07AF  07C1               	addwf	sprintf@sp^(0+128),f
  3570  07B0                     l3511:
  3571  07B0  30FF               	movlw	255
  3572  07B1  07B5               	addwf	sprintf@width^(0+128),f
  3573  07B2  1803               	skipnc
  3574  07B3  0AB6               	incf	(sprintf@width+1)^(0+128),f
  3575  07B4  30FF               	movlw	255
  3576  07B5  07B6               	addwf	(sprintf@width+1)^(0+128),f
  3577  07B6  0835               	movf	sprintf@width^(0+128),w
  3578  07B7  0436               	iorwf	(sprintf@width+1)^(0+128),w
  3579  07B8  1D03               	btfss	3,2
  3580  07B9  2FBB               	goto	u5851
  3581  07BA  2FBC               	goto	u5850
  3582  07BB                     u5851:
  3583  07BB  2FA5               	goto	l3507
  3584  07BC                     u5850:
  3585  07BC                     l3513:
  3586                           
  3587                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1464:    if(flag 
      +                          & 0x03)
  3588  07BC  3003               	movlw	3
  3589  07BD  0533               	andwf	sprintf@flag^(0+128),w
  3590  07BE  00A5               	movwf	??_sprintf^(0+128)
  3591  07BF  3000               	movlw	0
  3592  07C0  0534               	andwf	(sprintf@flag+1)^(0+128),w
  3593  07C1  00A6               	movwf	(??_sprintf+1)^(0+128)
  3594  07C2  0825               	movf	??_sprintf^(0+128),w
  3595  07C3  0426               	iorwf	(??_sprintf^(0+128)+1),w
  3596  07C4  1903               	btfsc	3,2
  3597  07C5  2FC7               	goto	u5861
  3598  07C6  2FC8               	goto	u5860
  3599  07C7                     u5861:
  3600  07C7  2FD0               	goto	l3519
  3601  07C8                     u5860:
  3602  07C8                     l3515:
  3603                           
  3604                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  3605  07C8  302D               	movlw	45
  3606  07C9  00A5               	movwf	??_sprintf^(0+128)
  3607  07CA  0841               	movf	sprintf@sp^(0+128),w
  3608  07CB  0084               	movwf	4
  3609  07CC  0825               	movf	??_sprintf^(0+128),w
  3610  07CD  1783               	bsf	3,7	;select IRP bank2
  3611  07CE  0080               	movwf	0
  3612  07CF  2881               	goto	l3275
  3613  07D0                     l3519:
  3614                           
  3615                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  3616  07D0  3001               	movlw	1
  3617  07D1  07A0               	addwf	sprintf@f^(0+128),f
  3618  07D2  30FF               	movlw	-1
  3619  07D3  0720               	addwf	sprintf@f^(0+128),w
  3620  07D4  0084               	movwf	4
  3621  07D5  160A  158A  2000  120A  118A  	fcall	stringdir
  3622  07DA  00A5               	movwf	??_sprintf^(0+128)
  3623  07DB  0825               	movf	??_sprintf^(0+128),w
  3624  07DC  00C4               	movwf	sprintf@c^(0+128)
  3625  07DD  0844               	movf	sprintf@c^(0+128),w
  3626  07DE  1D03               	btfss	3,2
  3627  07DF  2FE1               	goto	u5871
  3628  07E0  2FE2               	goto	u5870
  3629  07E1                     u5871:
  3630  07E1  2874               	goto	l3271
  3631  07E2                     u5870:
  3632  07E2                     l3521:
  3633                           
  3634                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  3635  07E2  0841               	movf	sprintf@sp^(0+128),w
  3636  07E3  0084               	movwf	4
  3637  07E4  1783               	bsf	3,7	;select IRP bank2
  3638  07E5  0180               	clrf	0
  3639  07E6                     l310:
  3640  07E6  0008               	return
  3641  07E7                     __end_of_sprintf:
  3642                           
  3643                           	psect	text2
  3644  0940                     __ptext2:	
  3645 ;; *************** function _scale *****************
  3646 ;; Defined at:
  3647 ;;		line 433 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  3648 ;; Parameters:    Size  Location     Type
  3649 ;;  scl             1    wreg     char 
  3650 ;; Auto vars:     Size  Location     Type
  3651 ;;  scl             1   48[BANK0 ] char 
  3652 ;; Return value:  Size  Location     Type
  3653 ;;                  4   30[BANK0 ] char 
  3654 ;; Registers used:
  3655 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3656 ;; Tracked objects:
  3657 ;;		On entry : 0/0
  3658 ;;		On exit  : 0/0
  3659 ;;		Unchanged: 0/0
  3660 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3661 ;;      Params:         0       4       0       0       0
  3662 ;;      Locals:         0       5       0       0       0
  3663 ;;      Temps:          0      10       0       0       0
  3664 ;;      Totals:         0      19       0       0       0
  3665 ;;Total ram usage:       19 bytes
  3666 ;; Hardware stack levels used:    1
  3667 ;; Hardware stack levels required when called:    2
  3668 ;; This function calls:
  3669 ;;		___awdiv
  3670 ;;		___awmod
  3671 ;;		___flmul
  3672 ;; This function is called by:
  3673 ;;		_sprintf
  3674 ;; This function uses a non-reentrant model
  3675 ;;
  3676                           
  3677                           
  3678                           ;psect for function _scale
  3679  0940                     _scale:
  3680                           
  3681                           ;incstack = 0
  3682                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3683                           ;scale@scl stored from wreg
  3684  0940  1283               	bcf	3,5	;RP0=0, select bank0
  3685  0941  1303               	bcf	3,6	;RP1=0, select bank0
  3686  0942  00D0               	movwf	scale@scl
  3687  0943                     l2899:
  3688                           
  3689                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 433: scale(signed
      +                           char scl);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 434: {;
      +                          C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 436:  if(scl < 0) 
      +                          {
  3690  0943  1FD0               	btfss	scale@scl,7
  3691  0944  2946               	goto	u4421
  3692  0945  2947               	goto	u4420
  3693  0946                     u4421:
  3694  0946  2AF4               	goto	l2921
  3695  0947                     u4420:
  3696  0947                     l2901:
  3697                           
  3698                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 437:   scl = -scl
      +                          ;
  3699  0947  09D0               	comf	scale@scl,f
  3700  0948  0AD0               	incf	scale@scl,f
  3701  0949                     l2903:
  3702                           
  3703                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 438:   if(scl>=11
      +                          0)
  3704  0949  0850               	movf	scale@scl,w
  3705  094A  3A80               	xorlw	128
  3706  094B  3E12               	addlw	-238
  3707  094C  1C03               	skipc
  3708  094D  294F               	goto	u4431
  3709  094E  2950               	goto	u4430
  3710  094F                     u4431:
  3711  094F  2A38               	goto	l2911
  3712  0950                     u4430:
  3713  0950                     l2905:
  3714                           
  3715                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  3716  0950  300A               	movlw	10
  3717  0951  00F7               	movwf	___awdiv@divisor
  3718  0952  3000               	movlw	0
  3719  0953  00F8               	movwf	___awdiv@divisor+1
  3720  0954  0850               	movf	scale@scl,w
  3721  0955  00F2               	movwf	___awmod@dividend
  3722  0956  01F3               	clrf	___awmod@dividend+1
  3723  0957  1BF2               	btfsc	___awmod@dividend,7
  3724  0958  03F3               	decf	___awmod@dividend+1,f
  3725  0959  3064               	movlw	100
  3726  095A  00F0               	movwf	___awmod@divisor
  3727  095B  3000               	movlw	0
  3728  095C  00F1               	movwf	___awmod@divisor+1
  3729  095D  160A  158A  2587  120A  158A  	fcall	___awmod
  3730  0962  0871               	movf	?___awmod+1,w
  3731  0963  00FA               	movwf	___awdiv@dividend+1
  3732  0964  0870               	movf	?___awmod,w
  3733  0965  00F9               	movwf	___awdiv@dividend
  3734  0966  120A  118A  2003  120A  158A  	fcall	___awdiv
  3735  096B  0877               	movf	?___awdiv,w
  3736  096C  1283               	bcf	3,5	;RP0=0, select bank0
  3737  096D  1303               	bcf	3,6	;RP1=0, select bank0
  3738  096E  00C2               	movwf	??_scale
  3739  096F  3001               	movlw	1
  3740  0970                     u4445:
  3741  0970  1003               	clrc
  3742  0971  0DC2               	rlf	??_scale,f
  3743  0972  3EFF               	addlw	-1
  3744  0973  1D03               	skipz
  3745  0974  2970               	goto	u4445
  3746  0975  1003               	clrc
  3747  0976  0D42               	rlf	??_scale,w
  3748  0977  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  3749  0978  0084               	movwf	4
  3750  0979  160A  158A  2000  120A  158A  	fcall	stringdir
  3751  097E  00C3               	movwf	??_scale+1
  3752  097F  160A  158A  2000  120A  158A  	fcall	stringdir
  3753  0984  00C4               	movwf	??_scale+2
  3754  0985  160A  158A  2000  120A  158A  	fcall	stringdir
  3755  098A  00C5               	movwf	??_scale+3
  3756  098B  160A  158A  2000  120A  158A  	fcall	stringdir
  3757  0990  00C6               	movwf	??_scale+4
  3758  0991  0846               	movf	??_scale+4,w
  3759  0992  00A7               	movwf	___flmul@b+3
  3760  0993  0845               	movf	??_scale+3,w
  3761  0994  00A6               	movwf	___flmul@b+2
  3762  0995  0844               	movf	??_scale+2,w
  3763  0996  00A5               	movwf	___flmul@b+1
  3764  0997  0843               	movf	??_scale+1,w
  3765  0998  00A4               	movwf	___flmul@b
  3766  0999  3064               	movlw	100
  3767  099A  00F7               	movwf	___awdiv@divisor
  3768  099B  3000               	movlw	0
  3769  099C  00F8               	movwf	___awdiv@divisor+1
  3770  099D  0850               	movf	scale@scl,w
  3771  099E  00F9               	movwf	___awdiv@dividend
  3772  099F  01FA               	clrf	___awdiv@dividend+1
  3773  09A0  1BF9               	btfsc	___awdiv@dividend,7
  3774  09A1  03FA               	decf	___awdiv@dividend+1,f
  3775  09A2  120A  118A  2003  120A  158A  	fcall	___awdiv
  3776  09A7  0877               	movf	?___awdiv,w
  3777  09A8  1283               	bcf	3,5	;RP0=0, select bank0
  3778  09A9  1303               	bcf	3,6	;RP1=0, select bank0
  3779  09AA  00C7               	movwf	??_scale+5
  3780  09AB  3001               	movlw	1
  3781  09AC                     u4455:
  3782  09AC  1003               	clrc
  3783  09AD  0DC7               	rlf	??_scale+5,f
  3784  09AE  3EFF               	addlw	-1
  3785  09AF  1D03               	skipz
  3786  09B0  29AC               	goto	u4455
  3787  09B1  1003               	clrc
  3788  09B2  0D47               	rlf	??_scale+5,w
  3789  09B3  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  3790  09B4  0084               	movwf	4
  3791  09B5  160A  158A  2000  120A  158A  	fcall	stringdir
  3792  09BA  00C8               	movwf	??_scale+6
  3793  09BB  160A  158A  2000  120A  158A  	fcall	stringdir
  3794  09C0  00C9               	movwf	??_scale+7
  3795  09C1  160A  158A  2000  120A  158A  	fcall	stringdir
  3796  09C6  00CA               	movwf	??_scale+8
  3797  09C7  160A  158A  2000  120A  158A  	fcall	stringdir
  3798  09CC  00CB               	movwf	??_scale+9
  3799  09CD  084B               	movf	??_scale+9,w
  3800  09CE  00AB               	movwf	___flmul@a+3
  3801  09CF  084A               	movf	??_scale+8,w
  3802  09D0  00AA               	movwf	___flmul@a+2
  3803  09D1  0849               	movf	??_scale+7,w
  3804  09D2  00A9               	movwf	___flmul@a+1
  3805  09D3  0848               	movf	??_scale+6,w
  3806  09D4  00A8               	movwf	___flmul@a
  3807  09D5  120A  158A  249F  120A  158A  	fcall	___flmul
  3808  09DA  1283               	bcf	3,5	;RP0=0, select bank0
  3809  09DB  1303               	bcf	3,6	;RP1=0, select bank0
  3810  09DC  0827               	movf	?___flmul+3,w
  3811  09DD  00CF               	movwf	_scale$923+3
  3812  09DE  0826               	movf	?___flmul+2,w
  3813  09DF  00CE               	movwf	_scale$923+2
  3814  09E0  0825               	movf	?___flmul+1,w
  3815  09E1  00CD               	movwf	_scale$923+1
  3816  09E2  0824               	movf	?___flmul,w
  3817  09E3  00CC               	movwf	_scale$923
  3818                           
  3819                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  3820  09E4  300A               	movlw	10
  3821  09E5  00F0               	movwf	___awmod@divisor
  3822  09E6  3000               	movlw	0
  3823  09E7  00F1               	movwf	___awmod@divisor+1
  3824  09E8  0850               	movf	scale@scl,w
  3825  09E9  00F2               	movwf	___awmod@dividend
  3826  09EA  01F3               	clrf	___awmod@dividend+1
  3827  09EB  1BF2               	btfsc	___awmod@dividend,7
  3828  09EC  03F3               	decf	___awmod@dividend+1,f
  3829  09ED  160A  158A  2587  120A  158A  	fcall	___awmod
  3830  09F2  0870               	movf	?___awmod,w
  3831  09F3  1283               	bcf	3,5	;RP0=0, select bank0
  3832  09F4  1303               	bcf	3,6	;RP1=0, select bank0
  3833  09F5  00C2               	movwf	??_scale
  3834  09F6  3001               	movlw	1
  3835  09F7                     u4465:
  3836  09F7  1003               	clrc
  3837  09F8  0DC2               	rlf	??_scale,f
  3838  09F9  3EFF               	addlw	-1
  3839  09FA  1D03               	skipz
  3840  09FB  29F7               	goto	u4465
  3841  09FC  1003               	clrc
  3842  09FD  0D42               	rlf	??_scale,w
  3843  09FE  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3844  09FF  0084               	movwf	4
  3845  0A00  160A  158A  2000  120A  158A  	fcall	stringdir
  3846  0A05  00C3               	movwf	??_scale+1
  3847  0A06  160A  158A  2000  120A  158A  	fcall	stringdir
  3848  0A0B  00C4               	movwf	??_scale+2
  3849  0A0C  160A  158A  2000  120A  158A  	fcall	stringdir
  3850  0A11  00C5               	movwf	??_scale+3
  3851  0A12  160A  158A  2000  120A  158A  	fcall	stringdir
  3852  0A17  00C6               	movwf	??_scale+4
  3853  0A18  0846               	movf	??_scale+4,w
  3854  0A19  00A7               	movwf	___flmul@b+3
  3855  0A1A  0845               	movf	??_scale+3,w
  3856  0A1B  00A6               	movwf	___flmul@b+2
  3857  0A1C  0844               	movf	??_scale+2,w
  3858  0A1D  00A5               	movwf	___flmul@b+1
  3859  0A1E  0843               	movf	??_scale+1,w
  3860  0A1F  00A4               	movwf	___flmul@b
  3861  0A20  084F               	movf	_scale$923+3,w
  3862  0A21  00AB               	movwf	___flmul@a+3
  3863  0A22  084E               	movf	_scale$923+2,w
  3864  0A23  00AA               	movwf	___flmul@a+2
  3865  0A24  084D               	movf	_scale$923+1,w
  3866  0A25  00A9               	movwf	___flmul@a+1
  3867  0A26  084C               	movf	_scale$923,w
  3868  0A27  00A8               	movwf	___flmul@a
  3869  0A28  120A  158A  249F  120A  158A  	fcall	___flmul
  3870  0A2D  1283               	bcf	3,5	;RP0=0, select bank0
  3871  0A2E  1303               	bcf	3,6	;RP1=0, select bank0
  3872  0A2F  0827               	movf	?___flmul+3,w
  3873  0A30  00C1               	movwf	?_scale+3
  3874  0A31  0826               	movf	?___flmul+2,w
  3875  0A32  00C0               	movwf	?_scale+2
  3876  0A33  0825               	movf	?___flmul+1,w
  3877  0A34  00BF               	movwf	?_scale+1
  3878  0A35  0824               	movf	?___flmul,w
  3879  0A36  00BE               	movwf	?_scale
  3880  0A37  2C9E               	goto	l227
  3881  0A38                     l2911:
  3882  0A38  0850               	movf	scale@scl,w
  3883  0A39  3A80               	xorlw	128
  3884  0A3A  3E75               	addlw	-139
  3885  0A3B  1C03               	skipc
  3886  0A3C  2A3E               	goto	u4471
  3887  0A3D  2A3F               	goto	u4470
  3888  0A3E                     u4471:
  3889  0A3E  2AC7               	goto	l2917
  3890  0A3F                     u4470:
  3891  0A3F                     l2913:
  3892                           
  3893                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 441:    return _n
      +                          powers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(scl%10)];
  3894  0A3F  300A               	movlw	10
  3895  0A40  00F0               	movwf	___awmod@divisor
  3896  0A41  3000               	movlw	0
  3897  0A42  00F1               	movwf	___awmod@divisor+1
  3898  0A43  0850               	movf	scale@scl,w
  3899  0A44  00F2               	movwf	___awmod@dividend
  3900  0A45  01F3               	clrf	___awmod@dividend+1
  3901  0A46  1BF2               	btfsc	___awmod@dividend,7
  3902  0A47  03F3               	decf	___awmod@dividend+1,f
  3903  0A48  160A  158A  2587  120A  158A  	fcall	___awmod
  3904  0A4D  0870               	movf	?___awmod,w
  3905  0A4E  1283               	bcf	3,5	;RP0=0, select bank0
  3906  0A4F  1303               	bcf	3,6	;RP1=0, select bank0
  3907  0A50  00C2               	movwf	??_scale
  3908  0A51  3001               	movlw	1
  3909  0A52                     u4485:
  3910  0A52  1003               	clrc
  3911  0A53  0DC2               	rlf	??_scale,f
  3912  0A54  3EFF               	addlw	-1
  3913  0A55  1D03               	skipz
  3914  0A56  2A52               	goto	u4485
  3915  0A57  1003               	clrc
  3916  0A58  0D42               	rlf	??_scale,w
  3917  0A59  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3918  0A5A  0084               	movwf	4
  3919  0A5B  160A  158A  2000  120A  158A  	fcall	stringdir
  3920  0A60  00C3               	movwf	??_scale+1
  3921  0A61  160A  158A  2000  120A  158A  	fcall	stringdir
  3922  0A66  00C4               	movwf	??_scale+2
  3923  0A67  160A  158A  2000  120A  158A  	fcall	stringdir
  3924  0A6C  00C5               	movwf	??_scale+3
  3925  0A6D  160A  158A  2000  120A  158A  	fcall	stringdir
  3926  0A72  00C6               	movwf	??_scale+4
  3927  0A73  0846               	movf	??_scale+4,w
  3928  0A74  00A7               	movwf	___flmul@b+3
  3929  0A75  0845               	movf	??_scale+3,w
  3930  0A76  00A6               	movwf	___flmul@b+2
  3931  0A77  0844               	movf	??_scale+2,w
  3932  0A78  00A5               	movwf	___flmul@b+1
  3933  0A79  0843               	movf	??_scale+1,w
  3934  0A7A  00A4               	movwf	___flmul@b
  3935  0A7B  300A               	movlw	10
  3936  0A7C  00F7               	movwf	___awdiv@divisor
  3937  0A7D  3000               	movlw	0
  3938  0A7E  00F8               	movwf	___awdiv@divisor+1
  3939  0A7F  0850               	movf	scale@scl,w
  3940  0A80  00F9               	movwf	___awdiv@dividend
  3941  0A81  01FA               	clrf	___awdiv@dividend+1
  3942  0A82  1BF9               	btfsc	___awdiv@dividend,7
  3943  0A83  03FA               	decf	___awdiv@dividend+1,f
  3944  0A84  120A  118A  2003  120A  158A  	fcall	___awdiv
  3945  0A89  0877               	movf	?___awdiv,w
  3946  0A8A  1283               	bcf	3,5	;RP0=0, select bank0
  3947  0A8B  1303               	bcf	3,6	;RP1=0, select bank0
  3948  0A8C  00C7               	movwf	??_scale+5
  3949  0A8D  3001               	movlw	1
  3950  0A8E                     u4495:
  3951  0A8E  1003               	clrc
  3952  0A8F  0DC7               	rlf	??_scale+5,f
  3953  0A90  3EFF               	addlw	-1
  3954  0A91  1D03               	skipz
  3955  0A92  2A8E               	goto	u4495
  3956  0A93  1003               	clrc
  3957  0A94  0D47               	rlf	??_scale+5,w
  3958  0A95  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  3959  0A96  0084               	movwf	4
  3960  0A97  160A  158A  2000  120A  158A  	fcall	stringdir
  3961  0A9C  00C8               	movwf	??_scale+6
  3962  0A9D  160A  158A  2000  120A  158A  	fcall	stringdir
  3963  0AA2  00C9               	movwf	??_scale+7
  3964  0AA3  160A  158A  2000  120A  158A  	fcall	stringdir
  3965  0AA8  00CA               	movwf	??_scale+8
  3966  0AA9  160A  158A  2000  120A  158A  	fcall	stringdir
  3967  0AAE  00CB               	movwf	??_scale+9
  3968  0AAF  084B               	movf	??_scale+9,w
  3969  0AB0  00AB               	movwf	___flmul@a+3
  3970  0AB1  084A               	movf	??_scale+8,w
  3971  0AB2  00AA               	movwf	___flmul@a+2
  3972  0AB3  0849               	movf	??_scale+7,w
  3973  0AB4  00A9               	movwf	___flmul@a+1
  3974  0AB5  0848               	movf	??_scale+6,w
  3975  0AB6  00A8               	movwf	___flmul@a
  3976  0AB7  120A  158A  249F  120A  158A  	fcall	___flmul
  3977  0ABC  1283               	bcf	3,5	;RP0=0, select bank0
  3978  0ABD  1303               	bcf	3,6	;RP1=0, select bank0
  3979  0ABE  0827               	movf	?___flmul+3,w
  3980  0ABF  00C1               	movwf	?_scale+3
  3981  0AC0  0826               	movf	?___flmul+2,w
  3982  0AC1  00C0               	movwf	?_scale+2
  3983  0AC2  0825               	movf	?___flmul+1,w
  3984  0AC3  00BF               	movwf	?_scale+1
  3985  0AC4  0824               	movf	?___flmul,w
  3986  0AC5  00BE               	movwf	?_scale
  3987  0AC6  2C9E               	goto	l227
  3988  0AC7                     l2917:
  3989                           
  3990                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 442:   return _np
      +                          owers_[(unsigned char)scl];
  3991  0AC7  0850               	movf	scale@scl,w
  3992  0AC8  00C2               	movwf	??_scale
  3993  0AC9  3001               	movlw	1
  3994  0ACA                     u4505:
  3995  0ACA  1003               	clrc
  3996  0ACB  0DC2               	rlf	??_scale,f
  3997  0ACC  3EFF               	addlw	-1
  3998  0ACD  1D03               	skipz
  3999  0ACE  2ACA               	goto	u4505
  4000  0ACF  1003               	clrc
  4001  0AD0  0D42               	rlf	??_scale,w
  4002  0AD1  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4003  0AD2  0084               	movwf	4
  4004  0AD3  160A  158A  2000  120A  158A  	fcall	stringdir
  4005  0AD8  00C3               	movwf	??_scale+1
  4006  0AD9  160A  158A  2000  120A  158A  	fcall	stringdir
  4007  0ADE  00C4               	movwf	??_scale+2
  4008  0ADF  160A  158A  2000  120A  158A  	fcall	stringdir
  4009  0AE4  00C5               	movwf	??_scale+3
  4010  0AE5  160A  158A  2000  120A  158A  	fcall	stringdir
  4011  0AEA  00C6               	movwf	??_scale+4
  4012  0AEB  0846               	movf	??_scale+4,w
  4013  0AEC  00C1               	movwf	?_scale+3
  4014  0AED  0845               	movf	??_scale+3,w
  4015  0AEE  00C0               	movwf	?_scale+2
  4016  0AEF  0844               	movf	??_scale+2,w
  4017  0AF0  00BF               	movwf	?_scale+1
  4018  0AF1  0843               	movf	??_scale+1,w
  4019  0AF2  00BE               	movwf	?_scale
  4020  0AF3  2C9E               	goto	l227
  4021  0AF4                     l2921:
  4022                           
  4023                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 444:  if(scl>=110
      +                          )
  4024  0AF4  0850               	movf	scale@scl,w
  4025  0AF5  3A80               	xorlw	128
  4026  0AF6  3E12               	addlw	-238
  4027  0AF7  1C03               	skipc
  4028  0AF8  2AFA               	goto	u4511
  4029  0AF9  2AFB               	goto	u4510
  4030  0AFA                     u4511:
  4031  0AFA  2BE3               	goto	l2929
  4032  0AFB                     u4510:
  4033  0AFB                     l2923:
  4034                           
  4035                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  4036  0AFB  300A               	movlw	10
  4037  0AFC  00F7               	movwf	___awdiv@divisor
  4038  0AFD  3000               	movlw	0
  4039  0AFE  00F8               	movwf	___awdiv@divisor+1
  4040  0AFF  0850               	movf	scale@scl,w
  4041  0B00  00F2               	movwf	___awmod@dividend
  4042  0B01  01F3               	clrf	___awmod@dividend+1
  4043  0B02  1BF2               	btfsc	___awmod@dividend,7
  4044  0B03  03F3               	decf	___awmod@dividend+1,f
  4045  0B04  3064               	movlw	100
  4046  0B05  00F0               	movwf	___awmod@divisor
  4047  0B06  3000               	movlw	0
  4048  0B07  00F1               	movwf	___awmod@divisor+1
  4049  0B08  160A  158A  2587  120A  158A  	fcall	___awmod
  4050  0B0D  0871               	movf	?___awmod+1,w
  4051  0B0E  00FA               	movwf	___awdiv@dividend+1
  4052  0B0F  0870               	movf	?___awmod,w
  4053  0B10  00F9               	movwf	___awdiv@dividend
  4054  0B11  120A  118A  2003  120A  158A  	fcall	___awdiv
  4055  0B16  0877               	movf	?___awdiv,w
  4056  0B17  1283               	bcf	3,5	;RP0=0, select bank0
  4057  0B18  1303               	bcf	3,6	;RP1=0, select bank0
  4058  0B19  00C2               	movwf	??_scale
  4059  0B1A  3001               	movlw	1
  4060  0B1B                     u4525:
  4061  0B1B  1003               	clrc
  4062  0B1C  0DC2               	rlf	??_scale,f
  4063  0B1D  3EFF               	addlw	-1
  4064  0B1E  1D03               	skipz
  4065  0B1F  2B1B               	goto	u4525
  4066  0B20  1003               	clrc
  4067  0B21  0D42               	rlf	??_scale,w
  4068  0B22  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  4069  0B23  0084               	movwf	4
  4070  0B24  160A  158A  2000  120A  158A  	fcall	stringdir
  4071  0B29  00C3               	movwf	??_scale+1
  4072  0B2A  160A  158A  2000  120A  158A  	fcall	stringdir
  4073  0B2F  00C4               	movwf	??_scale+2
  4074  0B30  160A  158A  2000  120A  158A  	fcall	stringdir
  4075  0B35  00C5               	movwf	??_scale+3
  4076  0B36  160A  158A  2000  120A  158A  	fcall	stringdir
  4077  0B3B  00C6               	movwf	??_scale+4
  4078  0B3C  0846               	movf	??_scale+4,w
  4079  0B3D  00A7               	movwf	___flmul@b+3
  4080  0B3E  0845               	movf	??_scale+3,w
  4081  0B3F  00A6               	movwf	___flmul@b+2
  4082  0B40  0844               	movf	??_scale+2,w
  4083  0B41  00A5               	movwf	___flmul@b+1
  4084  0B42  0843               	movf	??_scale+1,w
  4085  0B43  00A4               	movwf	___flmul@b
  4086  0B44  3064               	movlw	100
  4087  0B45  00F7               	movwf	___awdiv@divisor
  4088  0B46  3000               	movlw	0
  4089  0B47  00F8               	movwf	___awdiv@divisor+1
  4090  0B48  0850               	movf	scale@scl,w
  4091  0B49  00F9               	movwf	___awdiv@dividend
  4092  0B4A  01FA               	clrf	___awdiv@dividend+1
  4093  0B4B  1BF9               	btfsc	___awdiv@dividend,7
  4094  0B4C  03FA               	decf	___awdiv@dividend+1,f
  4095  0B4D  120A  118A  2003  120A  158A  	fcall	___awdiv
  4096  0B52  0877               	movf	?___awdiv,w
  4097  0B53  1283               	bcf	3,5	;RP0=0, select bank0
  4098  0B54  1303               	bcf	3,6	;RP1=0, select bank0
  4099  0B55  00C7               	movwf	??_scale+5
  4100  0B56  3001               	movlw	1
  4101  0B57                     u4535:
  4102  0B57  1003               	clrc
  4103  0B58  0DC7               	rlf	??_scale+5,f
  4104  0B59  3EFF               	addlw	-1
  4105  0B5A  1D03               	skipz
  4106  0B5B  2B57               	goto	u4535
  4107  0B5C  1003               	clrc
  4108  0B5D  0D47               	rlf	??_scale+5,w
  4109  0B5E  3E49               	addlw	low (((__powers_-__stringbase)| (0+32768)+72))
  4110  0B5F  0084               	movwf	4
  4111  0B60  160A  158A  2000  120A  158A  	fcall	stringdir
  4112  0B65  00C8               	movwf	??_scale+6
  4113  0B66  160A  158A  2000  120A  158A  	fcall	stringdir
  4114  0B6B  00C9               	movwf	??_scale+7
  4115  0B6C  160A  158A  2000  120A  158A  	fcall	stringdir
  4116  0B71  00CA               	movwf	??_scale+8
  4117  0B72  160A  158A  2000  120A  158A  	fcall	stringdir
  4118  0B77  00CB               	movwf	??_scale+9
  4119  0B78  084B               	movf	??_scale+9,w
  4120  0B79  00AB               	movwf	___flmul@a+3
  4121  0B7A  084A               	movf	??_scale+8,w
  4122  0B7B  00AA               	movwf	___flmul@a+2
  4123  0B7C  0849               	movf	??_scale+7,w
  4124  0B7D  00A9               	movwf	___flmul@a+1
  4125  0B7E  0848               	movf	??_scale+6,w
  4126  0B7F  00A8               	movwf	___flmul@a
  4127  0B80  120A  158A  249F  120A  158A  	fcall	___flmul
  4128  0B85  1283               	bcf	3,5	;RP0=0, select bank0
  4129  0B86  1303               	bcf	3,6	;RP1=0, select bank0
  4130  0B87  0827               	movf	?___flmul+3,w
  4131  0B88  00CF               	movwf	_scale$923+3
  4132  0B89  0826               	movf	?___flmul+2,w
  4133  0B8A  00CE               	movwf	_scale$923+2
  4134  0B8B  0825               	movf	?___flmul+1,w
  4135  0B8C  00CD               	movwf	_scale$923+1
  4136  0B8D  0824               	movf	?___flmul,w
  4137  0B8E  00CC               	movwf	_scale$923
  4138                           
  4139                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  4140  0B8F  300A               	movlw	10
  4141  0B90  00F0               	movwf	___awmod@divisor
  4142  0B91  3000               	movlw	0
  4143  0B92  00F1               	movwf	___awmod@divisor+1
  4144  0B93  0850               	movf	scale@scl,w
  4145  0B94  00F2               	movwf	___awmod@dividend
  4146  0B95  01F3               	clrf	___awmod@dividend+1
  4147  0B96  1BF2               	btfsc	___awmod@dividend,7
  4148  0B97  03F3               	decf	___awmod@dividend+1,f
  4149  0B98  160A  158A  2587  120A  158A  	fcall	___awmod
  4150  0B9D  0870               	movf	?___awmod,w
  4151  0B9E  1283               	bcf	3,5	;RP0=0, select bank0
  4152  0B9F  1303               	bcf	3,6	;RP1=0, select bank0
  4153  0BA0  00C2               	movwf	??_scale
  4154  0BA1  3001               	movlw	1
  4155  0BA2                     u4545:
  4156  0BA2  1003               	clrc
  4157  0BA3  0DC2               	rlf	??_scale,f
  4158  0BA4  3EFF               	addlw	-1
  4159  0BA5  1D03               	skipz
  4160  0BA6  2BA2               	goto	u4545
  4161  0BA7  1003               	clrc
  4162  0BA8  0D42               	rlf	??_scale,w
  4163  0BA9  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4164  0BAA  0084               	movwf	4
  4165  0BAB  160A  158A  2000  120A  158A  	fcall	stringdir
  4166  0BB0  00C3               	movwf	??_scale+1
  4167  0BB1  160A  158A  2000  120A  158A  	fcall	stringdir
  4168  0BB6  00C4               	movwf	??_scale+2
  4169  0BB7  160A  158A  2000  120A  158A  	fcall	stringdir
  4170  0BBC  00C5               	movwf	??_scale+3
  4171  0BBD  160A  158A  2000  120A  158A  	fcall	stringdir
  4172  0BC2  00C6               	movwf	??_scale+4
  4173  0BC3  0846               	movf	??_scale+4,w
  4174  0BC4  00A7               	movwf	___flmul@b+3
  4175  0BC5  0845               	movf	??_scale+3,w
  4176  0BC6  00A6               	movwf	___flmul@b+2
  4177  0BC7  0844               	movf	??_scale+2,w
  4178  0BC8  00A5               	movwf	___flmul@b+1
  4179  0BC9  0843               	movf	??_scale+1,w
  4180  0BCA  00A4               	movwf	___flmul@b
  4181  0BCB  084F               	movf	_scale$923+3,w
  4182  0BCC  00AB               	movwf	___flmul@a+3
  4183  0BCD  084E               	movf	_scale$923+2,w
  4184  0BCE  00AA               	movwf	___flmul@a+2
  4185  0BCF  084D               	movf	_scale$923+1,w
  4186  0BD0  00A9               	movwf	___flmul@a+1
  4187  0BD1  084C               	movf	_scale$923,w
  4188  0BD2  00A8               	movwf	___flmul@a
  4189  0BD3  120A  158A  249F  120A  158A  	fcall	___flmul
  4190  0BD8  1283               	bcf	3,5	;RP0=0, select bank0
  4191  0BD9  1303               	bcf	3,6	;RP1=0, select bank0
  4192  0BDA  0827               	movf	?___flmul+3,w
  4193  0BDB  00C1               	movwf	?_scale+3
  4194  0BDC  0826               	movf	?___flmul+2,w
  4195  0BDD  00C0               	movwf	?_scale+2
  4196  0BDE  0825               	movf	?___flmul+1,w
  4197  0BDF  00BF               	movwf	?_scale+1
  4198  0BE0  0824               	movf	?___flmul,w
  4199  0BE1  00BE               	movwf	?_scale
  4200  0BE2  2C9E               	goto	l227
  4201  0BE3                     l2929:
  4202  0BE3  0850               	movf	scale@scl,w
  4203  0BE4  3A80               	xorlw	128
  4204  0BE5  3E75               	addlw	-139
  4205  0BE6  1C03               	skipc
  4206  0BE7  2BE9               	goto	u4551
  4207  0BE8  2BEA               	goto	u4550
  4208  0BE9                     u4551:
  4209  0BE9  2C72               	goto	l2935
  4210  0BEA                     u4550:
  4211  0BEA                     l2931:
  4212                           
  4213                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 447:   return _po
      +                          wers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(scl%10)];
  4214  0BEA  300A               	movlw	10
  4215  0BEB  00F0               	movwf	___awmod@divisor
  4216  0BEC  3000               	movlw	0
  4217  0BED  00F1               	movwf	___awmod@divisor+1
  4218  0BEE  0850               	movf	scale@scl,w
  4219  0BEF  00F2               	movwf	___awmod@dividend
  4220  0BF0  01F3               	clrf	___awmod@dividend+1
  4221  0BF1  1BF2               	btfsc	___awmod@dividend,7
  4222  0BF2  03F3               	decf	___awmod@dividend+1,f
  4223  0BF3  160A  158A  2587  120A  158A  	fcall	___awmod
  4224  0BF8  0870               	movf	?___awmod,w
  4225  0BF9  1283               	bcf	3,5	;RP0=0, select bank0
  4226  0BFA  1303               	bcf	3,6	;RP1=0, select bank0
  4227  0BFB  00C2               	movwf	??_scale
  4228  0BFC  3001               	movlw	1
  4229  0BFD                     u4565:
  4230  0BFD  1003               	clrc
  4231  0BFE  0DC2               	rlf	??_scale,f
  4232  0BFF  3EFF               	addlw	-1
  4233  0C00  1D03               	skipz
  4234  0C01  2BFD               	goto	u4565
  4235  0C02  1003               	clrc
  4236  0C03  0D42               	rlf	??_scale,w
  4237  0C04  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4238  0C05  0084               	movwf	4
  4239  0C06  160A  158A  2000  120A  158A  	fcall	stringdir
  4240  0C0B  00C3               	movwf	??_scale+1
  4241  0C0C  160A  158A  2000  120A  158A  	fcall	stringdir
  4242  0C11  00C4               	movwf	??_scale+2
  4243  0C12  160A  158A  2000  120A  158A  	fcall	stringdir
  4244  0C17  00C5               	movwf	??_scale+3
  4245  0C18  160A  158A  2000  120A  158A  	fcall	stringdir
  4246  0C1D  00C6               	movwf	??_scale+4
  4247  0C1E  0846               	movf	??_scale+4,w
  4248  0C1F  00A7               	movwf	___flmul@b+3
  4249  0C20  0845               	movf	??_scale+3,w
  4250  0C21  00A6               	movwf	___flmul@b+2
  4251  0C22  0844               	movf	??_scale+2,w
  4252  0C23  00A5               	movwf	___flmul@b+1
  4253  0C24  0843               	movf	??_scale+1,w
  4254  0C25  00A4               	movwf	___flmul@b
  4255  0C26  300A               	movlw	10
  4256  0C27  00F7               	movwf	___awdiv@divisor
  4257  0C28  3000               	movlw	0
  4258  0C29  00F8               	movwf	___awdiv@divisor+1
  4259  0C2A  0850               	movf	scale@scl,w
  4260  0C2B  00F9               	movwf	___awdiv@dividend
  4261  0C2C  01FA               	clrf	___awdiv@dividend+1
  4262  0C2D  1BF9               	btfsc	___awdiv@dividend,7
  4263  0C2E  03FA               	decf	___awdiv@dividend+1,f
  4264  0C2F  120A  118A  2003  120A  158A  	fcall	___awdiv
  4265  0C34  0877               	movf	?___awdiv,w
  4266  0C35  1283               	bcf	3,5	;RP0=0, select bank0
  4267  0C36  1303               	bcf	3,6	;RP1=0, select bank0
  4268  0C37  00C7               	movwf	??_scale+5
  4269  0C38  3001               	movlw	1
  4270  0C39                     u4575:
  4271  0C39  1003               	clrc
  4272  0C3A  0DC7               	rlf	??_scale+5,f
  4273  0C3B  3EFF               	addlw	-1
  4274  0C3C  1D03               	skipz
  4275  0C3D  2C39               	goto	u4575
  4276  0C3E  1003               	clrc
  4277  0C3F  0D47               	rlf	??_scale+5,w
  4278  0C40  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  4279  0C41  0084               	movwf	4
  4280  0C42  160A  158A  2000  120A  158A  	fcall	stringdir
  4281  0C47  00C8               	movwf	??_scale+6
  4282  0C48  160A  158A  2000  120A  158A  	fcall	stringdir
  4283  0C4D  00C9               	movwf	??_scale+7
  4284  0C4E  160A  158A  2000  120A  158A  	fcall	stringdir
  4285  0C53  00CA               	movwf	??_scale+8
  4286  0C54  160A  158A  2000  120A  158A  	fcall	stringdir
  4287  0C59  00CB               	movwf	??_scale+9
  4288  0C5A  084B               	movf	??_scale+9,w
  4289  0C5B  00AB               	movwf	___flmul@a+3
  4290  0C5C  084A               	movf	??_scale+8,w
  4291  0C5D  00AA               	movwf	___flmul@a+2
  4292  0C5E  0849               	movf	??_scale+7,w
  4293  0C5F  00A9               	movwf	___flmul@a+1
  4294  0C60  0848               	movf	??_scale+6,w
  4295  0C61  00A8               	movwf	___flmul@a
  4296  0C62  120A  158A  249F  120A  158A  	fcall	___flmul
  4297  0C67  1283               	bcf	3,5	;RP0=0, select bank0
  4298  0C68  1303               	bcf	3,6	;RP1=0, select bank0
  4299  0C69  0827               	movf	?___flmul+3,w
  4300  0C6A  00C1               	movwf	?_scale+3
  4301  0C6B  0826               	movf	?___flmul+2,w
  4302  0C6C  00C0               	movwf	?_scale+2
  4303  0C6D  0825               	movf	?___flmul+1,w
  4304  0C6E  00BF               	movwf	?_scale+1
  4305  0C6F  0824               	movf	?___flmul,w
  4306  0C70  00BE               	movwf	?_scale
  4307  0C71  2C9E               	goto	l227
  4308  0C72                     l2935:
  4309                           
  4310                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 448:  return _pow
      +                          ers_[(unsigned char)scl];
  4311  0C72  0850               	movf	scale@scl,w
  4312  0C73  00C2               	movwf	??_scale
  4313  0C74  3001               	movlw	1
  4314  0C75                     u4585:
  4315  0C75  1003               	clrc
  4316  0C76  0DC2               	rlf	??_scale,f
  4317  0C77  3EFF               	addlw	-1
  4318  0C78  1D03               	skipz
  4319  0C79  2C75               	goto	u4585
  4320  0C7A  1003               	clrc
  4321  0C7B  0D42               	rlf	??_scale,w
  4322  0C7C  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4323  0C7D  0084               	movwf	4
  4324  0C7E  160A  158A  2000  120A  158A  	fcall	stringdir
  4325  0C83  00C3               	movwf	??_scale+1
  4326  0C84  160A  158A  2000  120A  158A  	fcall	stringdir
  4327  0C89  00C4               	movwf	??_scale+2
  4328  0C8A  160A  158A  2000  120A  158A  	fcall	stringdir
  4329  0C8F  00C5               	movwf	??_scale+3
  4330  0C90  160A  158A  2000  120A  158A  	fcall	stringdir
  4331  0C95  00C6               	movwf	??_scale+4
  4332  0C96  0846               	movf	??_scale+4,w
  4333  0C97  00C1               	movwf	?_scale+3
  4334  0C98  0845               	movf	??_scale+3,w
  4335  0C99  00C0               	movwf	?_scale+2
  4336  0C9A  0844               	movf	??_scale+2,w
  4337  0C9B  00BF               	movwf	?_scale+1
  4338  0C9C  0843               	movf	??_scale+1,w
  4339  0C9D  00BE               	movwf	?_scale
  4340  0C9E                     l227:
  4341  0C9E  0008               	return
  4342  0C9F                     __end_of_scale:
  4343                           
  4344                           	psect	text3
  4345  1D87                     __ptext3:	
  4346 ;; *************** function ___awmod *****************
  4347 ;; Defined at:
  4348 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  4349 ;; Parameters:    Size  Location     Type
  4350 ;;  divisor         2    0[COMMON] int 
  4351 ;;  dividend        2    2[COMMON] int 
  4352 ;; Auto vars:     Size  Location     Type
  4353 ;;  sign            1    6[COMMON] unsigned char 
  4354 ;;  counter         1    5[COMMON] unsigned char 
  4355 ;; Return value:  Size  Location     Type
  4356 ;;                  2    0[COMMON] int 
  4357 ;; Registers used:
  4358 ;;		wreg, status,2, status,0
  4359 ;; Tracked objects:
  4360 ;;		On entry : 0/0
  4361 ;;		On exit  : 0/0
  4362 ;;		Unchanged: 0/0
  4363 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4364 ;;      Params:         4       0       0       0       0
  4365 ;;      Locals:         2       0       0       0       0
  4366 ;;      Temps:          1       0       0       0       0
  4367 ;;      Totals:         7       0       0       0       0
  4368 ;;Total ram usage:        7 bytes
  4369 ;; Hardware stack levels used:    1
  4370 ;; This function calls:
  4371 ;;		Nothing
  4372 ;; This function is called by:
  4373 ;;		_scale
  4374 ;; This function uses a non-reentrant model
  4375 ;;
  4376                           
  4377                           
  4378                           ;psect for function ___awmod
  4379  1D87                     ___awmod:
  4380  1D87                     l2447:	
  4381                           ;incstack = 0
  4382                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  4383                           
  4384  1D87  01F6               	clrf	___awmod@sign
  4385  1D88                     l2449:
  4386  1D88  1FF3               	btfss	___awmod@dividend+1,7
  4387  1D89  2D8B               	goto	u3291
  4388  1D8A  2D8C               	goto	u3290
  4389  1D8B                     u3291:
  4390  1D8B  2D93               	goto	l2455
  4391  1D8C                     u3290:
  4392  1D8C                     l2451:
  4393  1D8C  09F2               	comf	___awmod@dividend,f
  4394  1D8D  09F3               	comf	___awmod@dividend+1,f
  4395  1D8E  0AF2               	incf	___awmod@dividend,f
  4396  1D8F  1903               	skipnz
  4397  1D90  0AF3               	incf	___awmod@dividend+1,f
  4398  1D91                     l2453:
  4399  1D91  01F6               	clrf	___awmod@sign
  4400  1D92  0AF6               	incf	___awmod@sign,f
  4401  1D93                     l2455:
  4402  1D93  1FF1               	btfss	___awmod@divisor+1,7
  4403  1D94  2D96               	goto	u3301
  4404  1D95  2D97               	goto	u3300
  4405  1D96                     u3301:
  4406  1D96  2D9C               	goto	l2459
  4407  1D97                     u3300:
  4408  1D97                     l2457:
  4409  1D97  09F0               	comf	___awmod@divisor,f
  4410  1D98  09F1               	comf	___awmod@divisor+1,f
  4411  1D99  0AF0               	incf	___awmod@divisor,f
  4412  1D9A  1903               	skipnz
  4413  1D9B  0AF1               	incf	___awmod@divisor+1,f
  4414  1D9C                     l2459:
  4415  1D9C  0870               	movf	___awmod@divisor,w
  4416  1D9D  0471               	iorwf	___awmod@divisor+1,w
  4417  1D9E  1903               	btfsc	3,2
  4418  1D9F  2DA1               	goto	u3311
  4419  1DA0  2DA2               	goto	u3310
  4420  1DA1                     u3311:
  4421  1DA1  2DD1               	goto	l2477
  4422  1DA2                     u3310:
  4423  1DA2                     l2461:
  4424  1DA2  01F5               	clrf	___awmod@counter
  4425  1DA3  0AF5               	incf	___awmod@counter,f
  4426  1DA4  2DB0               	goto	l2467
  4427  1DA5                     l2463:
  4428  1DA5  3001               	movlw	1
  4429  1DA6                     u3325:
  4430  1DA6  1003               	clrc
  4431  1DA7  0DF0               	rlf	___awmod@divisor,f
  4432  1DA8  0DF1               	rlf	___awmod@divisor+1,f
  4433  1DA9  3EFF               	addlw	-1
  4434  1DAA  1D03               	skipz
  4435  1DAB  2DA6               	goto	u3325
  4436  1DAC                     l2465:
  4437  1DAC  3001               	movlw	1
  4438  1DAD  00F4               	movwf	??___awmod
  4439  1DAE  0874               	movf	??___awmod,w
  4440  1DAF  07F5               	addwf	___awmod@counter,f
  4441  1DB0                     l2467:
  4442  1DB0  1FF1               	btfss	___awmod@divisor+1,7
  4443  1DB1  2DB3               	goto	u3331
  4444  1DB2  2DB4               	goto	u3330
  4445  1DB3                     u3331:
  4446  1DB3  2DA5               	goto	l2463
  4447  1DB4                     u3330:
  4448  1DB4                     l2469:
  4449  1DB4  0871               	movf	___awmod@divisor+1,w
  4450  1DB5  0273               	subwf	___awmod@dividend+1,w
  4451  1DB6  1D03               	skipz
  4452  1DB7  2DBA               	goto	u3345
  4453  1DB8  0870               	movf	___awmod@divisor,w
  4454  1DB9  0272               	subwf	___awmod@dividend,w
  4455  1DBA                     u3345:
  4456  1DBA  1C03               	skipc
  4457  1DBB  2DBD               	goto	u3341
  4458  1DBC  2DBE               	goto	u3340
  4459  1DBD                     u3341:
  4460  1DBD  2DC4               	goto	l2473
  4461  1DBE                     u3340:
  4462  1DBE                     l2471:
  4463  1DBE  0870               	movf	___awmod@divisor,w
  4464  1DBF  02F2               	subwf	___awmod@dividend,f
  4465  1DC0  0871               	movf	___awmod@divisor+1,w
  4466  1DC1  1C03               	skipc
  4467  1DC2  03F3               	decf	___awmod@dividend+1,f
  4468  1DC3  02F3               	subwf	___awmod@dividend+1,f
  4469  1DC4                     l2473:
  4470  1DC4  3001               	movlw	1
  4471  1DC5                     u3355:
  4472  1DC5  1003               	clrc
  4473  1DC6  0CF1               	rrf	___awmod@divisor+1,f
  4474  1DC7  0CF0               	rrf	___awmod@divisor,f
  4475  1DC8  3EFF               	addlw	-1
  4476  1DC9  1D03               	skipz
  4477  1DCA  2DC5               	goto	u3355
  4478  1DCB                     l2475:
  4479  1DCB  3001               	movlw	1
  4480  1DCC  02F5               	subwf	___awmod@counter,f
  4481  1DCD  1D03               	btfss	3,2
  4482  1DCE  2DD0               	goto	u3361
  4483  1DCF  2DD1               	goto	u3360
  4484  1DD0                     u3361:
  4485  1DD0  2DB4               	goto	l2469
  4486  1DD1                     u3360:
  4487  1DD1                     l2477:
  4488  1DD1  0876               	movf	___awmod@sign,w
  4489  1DD2  1903               	btfsc	3,2
  4490  1DD3  2DD5               	goto	u3371
  4491  1DD4  2DD6               	goto	u3370
  4492  1DD5                     u3371:
  4493  1DD5  2DDB               	goto	l2481
  4494  1DD6                     u3370:
  4495  1DD6                     l2479:
  4496  1DD6  09F2               	comf	___awmod@dividend,f
  4497  1DD7  09F3               	comf	___awmod@dividend+1,f
  4498  1DD8  0AF2               	incf	___awmod@dividend,f
  4499  1DD9  1903               	skipnz
  4500  1DDA  0AF3               	incf	___awmod@dividend+1,f
  4501  1DDB                     l2481:
  4502  1DDB  0873               	movf	___awmod@dividend+1,w
  4503  1DDC  00F1               	movwf	?___awmod+1
  4504  1DDD  0872               	movf	___awmod@dividend,w
  4505  1DDE  00F0               	movwf	?___awmod
  4506  1DDF                     l480:
  4507  1DDF  0008               	return
  4508  1DE0                     __end_of___awmod:
  4509                           
  4510                           	psect	text4
  4511  0003                     __ptext4:	
  4512 ;; *************** function ___awdiv *****************
  4513 ;; Defined at:
  4514 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  4515 ;; Parameters:    Size  Location     Type
  4516 ;;  divisor         2    7[COMMON] int 
  4517 ;;  dividend        2    9[COMMON] int 
  4518 ;; Auto vars:     Size  Location     Type
  4519 ;;  quotient        2    2[BANK0 ] int 
  4520 ;;  sign            1    1[BANK0 ] unsigned char 
  4521 ;;  counter         1    0[BANK0 ] unsigned char 
  4522 ;; Return value:  Size  Location     Type
  4523 ;;                  2    7[COMMON] int 
  4524 ;; Registers used:
  4525 ;;		wreg, status,2, status,0
  4526 ;; Tracked objects:
  4527 ;;		On entry : 0/0
  4528 ;;		On exit  : 0/0
  4529 ;;		Unchanged: 0/0
  4530 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4531 ;;      Params:         4       0       0       0       0
  4532 ;;      Locals:         0       4       0       0       0
  4533 ;;      Temps:          1       0       0       0       0
  4534 ;;      Totals:         5       4       0       0       0
  4535 ;;Total ram usage:        9 bytes
  4536 ;; Hardware stack levels used:    1
  4537 ;; This function calls:
  4538 ;;		Nothing
  4539 ;; This function is called by:
  4540 ;;		_scale
  4541 ;;		_sprintf
  4542 ;; This function uses a non-reentrant model
  4543 ;;
  4544                           
  4545                           
  4546                           ;psect for function ___awdiv
  4547  0003                     ___awdiv:
  4548  0003                     l2403:	
  4549                           ;incstack = 0
  4550                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  4551                           
  4552  0003  1283               	bcf	3,5	;RP0=0, select bank0
  4553  0004  1303               	bcf	3,6	;RP1=0, select bank0
  4554  0005  01A1               	clrf	___awdiv@sign
  4555  0006                     l2405:
  4556  0006  1FF8               	btfss	___awdiv@divisor+1,7
  4557  0007  2809               	goto	u3191
  4558  0008  280A               	goto	u3190
  4559  0009                     u3191:
  4560  0009  2811               	goto	l2411
  4561  000A                     u3190:
  4562  000A                     l2407:
  4563  000A  09F7               	comf	___awdiv@divisor,f
  4564  000B  09F8               	comf	___awdiv@divisor+1,f
  4565  000C  0AF7               	incf	___awdiv@divisor,f
  4566  000D  1903               	skipnz
  4567  000E  0AF8               	incf	___awdiv@divisor+1,f
  4568  000F                     l2409:
  4569  000F  01A1               	clrf	___awdiv@sign
  4570  0010  0AA1               	incf	___awdiv@sign,f
  4571  0011                     l2411:
  4572  0011  1FFA               	btfss	___awdiv@dividend+1,7
  4573  0012  2814               	goto	u3201
  4574  0013  2815               	goto	u3200
  4575  0014                     u3201:
  4576  0014  281E               	goto	l2417
  4577  0015                     u3200:
  4578  0015                     l2413:
  4579  0015  09F9               	comf	___awdiv@dividend,f
  4580  0016  09FA               	comf	___awdiv@dividend+1,f
  4581  0017  0AF9               	incf	___awdiv@dividend,f
  4582  0018  1903               	skipnz
  4583  0019  0AFA               	incf	___awdiv@dividend+1,f
  4584  001A                     l2415:
  4585  001A  3001               	movlw	1
  4586  001B  00FB               	movwf	??___awdiv
  4587  001C  087B               	movf	??___awdiv,w
  4588  001D  06A1               	xorwf	___awdiv@sign,f
  4589  001E                     l2417:
  4590  001E  01A2               	clrf	___awdiv@quotient
  4591  001F  01A3               	clrf	___awdiv@quotient+1
  4592  0020                     l2419:
  4593  0020  0877               	movf	___awdiv@divisor,w
  4594  0021  0478               	iorwf	___awdiv@divisor+1,w
  4595  0022  1903               	btfsc	3,2
  4596  0023  2825               	goto	u3211
  4597  0024  2826               	goto	u3210
  4598  0025                     u3211:
  4599  0025  285D               	goto	l2439
  4600  0026                     u3210:
  4601  0026                     l2421:
  4602  0026  01A0               	clrf	___awdiv@counter
  4603  0027  0AA0               	incf	___awdiv@counter,f
  4604  0028  2834               	goto	l2427
  4605  0029                     l2423:
  4606  0029  3001               	movlw	1
  4607  002A                     u3225:
  4608  002A  1003               	clrc
  4609  002B  0DF7               	rlf	___awdiv@divisor,f
  4610  002C  0DF8               	rlf	___awdiv@divisor+1,f
  4611  002D  3EFF               	addlw	-1
  4612  002E  1D03               	skipz
  4613  002F  282A               	goto	u3225
  4614  0030                     l2425:
  4615  0030  3001               	movlw	1
  4616  0031  00FB               	movwf	??___awdiv
  4617  0032  087B               	movf	??___awdiv,w
  4618  0033  07A0               	addwf	___awdiv@counter,f
  4619  0034                     l2427:
  4620  0034  1FF8               	btfss	___awdiv@divisor+1,7
  4621  0035  2837               	goto	u3231
  4622  0036  2838               	goto	u3230
  4623  0037                     u3231:
  4624  0037  2829               	goto	l2423
  4625  0038                     u3230:
  4626  0038                     l2429:
  4627  0038  3001               	movlw	1
  4628  0039                     u3245:
  4629  0039  1003               	clrc
  4630  003A  0DA2               	rlf	___awdiv@quotient,f
  4631  003B  0DA3               	rlf	___awdiv@quotient+1,f
  4632  003C  3EFF               	addlw	-1
  4633  003D  1D03               	skipz
  4634  003E  2839               	goto	u3245
  4635  003F  0878               	movf	___awdiv@divisor+1,w
  4636  0040  027A               	subwf	___awdiv@dividend+1,w
  4637  0041  1D03               	skipz
  4638  0042  2845               	goto	u3255
  4639  0043  0877               	movf	___awdiv@divisor,w
  4640  0044  0279               	subwf	___awdiv@dividend,w
  4641  0045                     u3255:
  4642  0045  1C03               	skipc
  4643  0046  2848               	goto	u3251
  4644  0047  2849               	goto	u3250
  4645  0048                     u3251:
  4646  0048  2850               	goto	l2435
  4647  0049                     u3250:
  4648  0049                     l2431:
  4649  0049  0877               	movf	___awdiv@divisor,w
  4650  004A  02F9               	subwf	___awdiv@dividend,f
  4651  004B  0878               	movf	___awdiv@divisor+1,w
  4652  004C  1C03               	skipc
  4653  004D  03FA               	decf	___awdiv@dividend+1,f
  4654  004E  02FA               	subwf	___awdiv@dividend+1,f
  4655  004F                     l2433:
  4656  004F  1422               	bsf	___awdiv@quotient,0
  4657  0050                     l2435:
  4658  0050  3001               	movlw	1
  4659  0051                     u3265:
  4660  0051  1003               	clrc
  4661  0052  0CF8               	rrf	___awdiv@divisor+1,f
  4662  0053  0CF7               	rrf	___awdiv@divisor,f
  4663  0054  3EFF               	addlw	-1
  4664  0055  1D03               	skipz
  4665  0056  2851               	goto	u3265
  4666  0057                     l2437:
  4667  0057  3001               	movlw	1
  4668  0058  02A0               	subwf	___awdiv@counter,f
  4669  0059  1D03               	btfss	3,2
  4670  005A  285C               	goto	u3271
  4671  005B  285D               	goto	u3270
  4672  005C                     u3271:
  4673  005C  2838               	goto	l2429
  4674  005D                     u3270:
  4675  005D                     l2439:
  4676  005D  0821               	movf	___awdiv@sign,w
  4677  005E  1903               	btfsc	3,2
  4678  005F  2861               	goto	u3281
  4679  0060  2862               	goto	u3280
  4680  0061                     u3281:
  4681  0061  2867               	goto	l2443
  4682  0062                     u3280:
  4683  0062                     l2441:
  4684  0062  09A2               	comf	___awdiv@quotient,f
  4685  0063  09A3               	comf	___awdiv@quotient+1,f
  4686  0064  0AA2               	incf	___awdiv@quotient,f
  4687  0065  1903               	skipnz
  4688  0066  0AA3               	incf	___awdiv@quotient+1,f
  4689  0067                     l2443:
  4690  0067  0823               	movf	___awdiv@quotient+1,w
  4691  0068  00F8               	movwf	?___awdiv+1
  4692  0069  0822               	movf	___awdiv@quotient,w
  4693  006A  00F7               	movwf	?___awdiv
  4694  006B                     l467:
  4695  006B  0008               	return
  4696  006C                     __end_of___awdiv:
  4697                           
  4698                           	psect	text5
  4699  1001                     __ptext5:	
  4700 ;; *************** function _isdigit *****************
  4701 ;; Defined at:
  4702 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\isdigit.c"
  4703 ;; Parameters:    Size  Location     Type
  4704 ;;  c               1    wreg     unsigned char 
  4705 ;; Auto vars:     Size  Location     Type
  4706 ;;  c               1    1[COMMON] unsigned char 
  4707 ;; Return value:  Size  Location     Type
  4708 ;;		None               void
  4709 ;; Registers used:
  4710 ;;		wreg, status,2, status,0
  4711 ;; Tracked objects:
  4712 ;;		On entry : 0/0
  4713 ;;		On exit  : 0/0
  4714 ;;		Unchanged: 0/0
  4715 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4716 ;;      Params:         0       0       0       0       0
  4717 ;;      Locals:         2       0       0       0       0
  4718 ;;      Temps:          0       0       0       0       0
  4719 ;;      Totals:         2       0       0       0       0
  4720 ;;Total ram usage:        2 bytes
  4721 ;; Hardware stack levels used:    1
  4722 ;; This function calls:
  4723 ;;		Nothing
  4724 ;; This function is called by:
  4725 ;;		_sprintf
  4726 ;; This function uses a non-reentrant model
  4727 ;;
  4728                           
  4729                           
  4730                           ;psect for function _isdigit
  4731  1001                     _isdigit:
  4732                           
  4733                           ;incstack = 0
  4734                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  4735                           ;isdigit@c stored from wreg
  4736  1001  00F1               	movwf	isdigit@c
  4737  1002                     l2939:
  4738  1002  01F0               	clrf	_isdigit$740
  4739  1003                     l2941:
  4740  1003  303A               	movlw	58
  4741  1004  0271               	subwf	isdigit@c,w
  4742  1005  1803               	skipnc
  4743  1006  2808               	goto	u4591
  4744  1007  2809               	goto	u4590
  4745  1008                     u4591:
  4746  1008  2811               	goto	l2947
  4747  1009                     u4590:
  4748  1009                     l2943:
  4749  1009  3030               	movlw	48
  4750  100A  0271               	subwf	isdigit@c,w
  4751  100B  1C03               	skipc
  4752  100C  280E               	goto	u4601
  4753  100D  280F               	goto	u4600
  4754  100E                     u4601:
  4755  100E  2811               	goto	l2947
  4756  100F                     u4600:
  4757  100F                     l2945:
  4758  100F  01F0               	clrf	_isdigit$740
  4759  1010  0AF0               	incf	_isdigit$740,f
  4760  1011                     l2947:
  4761  1011  0C70               	rrf	_isdigit$740,w
  4762  1012                     l801:
  4763  1012  0008               	return
  4764  1013                     __end_of_isdigit:
  4765                           
  4766                           	psect	text6
  4767  136D                     __ptext6:	
  4768 ;; *************** function _fround *****************
  4769 ;; Defined at:
  4770 ;;		line 417 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  4771 ;; Parameters:    Size  Location     Type
  4772 ;;  prec            1    wreg     unsigned char 
  4773 ;; Auto vars:     Size  Location     Type
  4774 ;;  prec            1   49[BANK0 ] unsigned char 
  4775 ;; Return value:  Size  Location     Type
  4776 ;;                  4   30[BANK0 ] unsigned char 
  4777 ;; Registers used:
  4778 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4779 ;; Tracked objects:
  4780 ;;		On entry : 0/0
  4781 ;;		On exit  : 0/0
  4782 ;;		Unchanged: 0/0
  4783 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4784 ;;      Params:         0       4       0       0       0
  4785 ;;      Locals:         0       9       0       0       0
  4786 ;;      Temps:          0       7       0       0       0
  4787 ;;      Totals:         0      20       0       0       0
  4788 ;;Total ram usage:       20 bytes
  4789 ;; Hardware stack levels used:    1
  4790 ;; Hardware stack levels required when called:    2
  4791 ;; This function calls:
  4792 ;;		___flmul
  4793 ;;		___lwdiv
  4794 ;;		___lwmod
  4795 ;; This function is called by:
  4796 ;;		_sprintf
  4797 ;; This function uses a non-reentrant model
  4798 ;;
  4799                           
  4800                           
  4801                           ;psect for function _fround
  4802  136D                     _fround:
  4803                           
  4804                           ;incstack = 0
  4805                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4806                           ;fround@prec stored from wreg
  4807  136D  1283               	bcf	3,5	;RP0=0, select bank0
  4808  136E  1303               	bcf	3,6	;RP1=0, select bank0
  4809  136F  00D1               	movwf	fround@prec
  4810  1370                     l2881:
  4811                           
  4812                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 417: fround(unsig
      +                          ned char prec);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 418
      +                          : {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 421:  if(prec>
      +                          =110)
  4813  1370  306E               	movlw	110
  4814  1371  0251               	subwf	fround@prec,w
  4815  1372  1C03               	skipc
  4816  1373  2B75               	goto	u4341
  4817  1374  2B76               	goto	u4340
  4818  1375                     u4341:
  4819  1375  2C83               	goto	l2889
  4820  1376                     u4340:
  4821  1376                     l2883:
  4822                           
  4823                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4824  1376  303F               	movlw	63
  4825  1377  00A7               	movwf	___flmul@b+3
  4826  1378  3000               	movlw	0
  4827  1379  00A6               	movwf	___flmul@b+2
  4828  137A  3000               	movlw	0
  4829  137B  00A5               	movwf	___flmul@b+1
  4830  137C  3000               	movlw	0
  4831  137D  00A4               	movwf	___flmul@b
  4832  137E  3064               	movlw	100
  4833  137F  00F6               	movwf	___lwdiv@divisor
  4834  1380  3000               	movlw	0
  4835  1381  00F7               	movwf	___lwdiv@divisor+1
  4836  1382  0851               	movf	fround@prec,w
  4837  1383  00C2               	movwf	??_fround
  4838  1384  01C3               	clrf	??_fround+1
  4839  1385  0842               	movf	??_fround,w
  4840  1386  00F8               	movwf	___lwdiv@dividend
  4841  1387  0843               	movf	??_fround+1,w
  4842  1388  00F9               	movwf	___lwdiv@dividend+1
  4843  1389  160A  158A  23F9  160A  118A  	fcall	___lwdiv
  4844  138E  0876               	movf	?___lwdiv,w
  4845  138F  1283               	bcf	3,5	;RP0=0, select bank0
  4846  1390  1303               	bcf	3,6	;RP1=0, select bank0
  4847  1391  00C4               	movwf	??_fround+2
  4848  1392  3001               	movlw	1
  4849  1393                     u4355:
  4850  1393  1003               	clrc
  4851  1394  0DC4               	rlf	??_fround+2,f
  4852  1395  3EFF               	addlw	-1
  4853  1396  1D03               	skipz
  4854  1397  2B93               	goto	u4355
  4855  1398  1003               	clrc
  4856  1399  0D44               	rlf	??_fround+2,w
  4857  139A  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  4858  139B  0084               	movwf	4
  4859  139C  160A  158A  2000  160A  118A  	fcall	stringdir
  4860  13A1  00C5               	movwf	??_fround+3
  4861  13A2  160A  158A  2000  160A  118A  	fcall	stringdir
  4862  13A7  00C6               	movwf	??_fround+4
  4863  13A8  160A  158A  2000  160A  118A  	fcall	stringdir
  4864  13AD  00C7               	movwf	??_fround+5
  4865  13AE  160A  158A  2000  160A  118A  	fcall	stringdir
  4866  13B3  00C8               	movwf	??_fround+6
  4867  13B4  0848               	movf	??_fround+6,w
  4868  13B5  00AB               	movwf	___flmul@a+3
  4869  13B6  0847               	movf	??_fround+5,w
  4870  13B7  00AA               	movwf	___flmul@a+2
  4871  13B8  0846               	movf	??_fround+4,w
  4872  13B9  00A9               	movwf	___flmul@a+1
  4873  13BA  0845               	movf	??_fround+3,w
  4874  13BB  00A8               	movwf	___flmul@a
  4875  13BC  120A  158A  249F  160A  118A  	fcall	___flmul
  4876  13C1  1283               	bcf	3,5	;RP0=0, select bank0
  4877  13C2  1303               	bcf	3,6	;RP1=0, select bank0
  4878  13C3  0827               	movf	?___flmul+3,w
  4879  13C4  00D0               	movwf	_fround$921+3
  4880  13C5  0826               	movf	?___flmul+2,w
  4881  13C6  00CF               	movwf	_fround$921+2
  4882  13C7  0825               	movf	?___flmul+1,w
  4883  13C8  00CE               	movwf	_fround$921+1
  4884  13C9  0824               	movf	?___flmul,w
  4885  13CA  00CD               	movwf	_fround$921
  4886                           
  4887                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4888  13CB  300A               	movlw	10
  4889  13CC  00F6               	movwf	___lwdiv@divisor
  4890  13CD  3000               	movlw	0
  4891  13CE  00F7               	movwf	___lwdiv@divisor+1
  4892  13CF  0851               	movf	fround@prec,w
  4893  13D0  00C2               	movwf	??_fround
  4894  13D1  01C3               	clrf	??_fround+1
  4895  13D2  0842               	movf	??_fround,w
  4896  13D3  00F2               	movwf	___lwmod@dividend
  4897  13D4  0843               	movf	??_fround+1,w
  4898  13D5  00F3               	movwf	___lwmod@dividend+1
  4899  13D6  3064               	movlw	100
  4900  13D7  00F0               	movwf	___lwmod@divisor
  4901  13D8  3000               	movlw	0
  4902  13D9  00F1               	movwf	___lwmod@divisor+1
  4903  13DA  160A  158A  23BF  160A  118A  	fcall	___lwmod
  4904  13DF  0871               	movf	?___lwmod+1,w
  4905  13E0  00F9               	movwf	___lwdiv@dividend+1
  4906  13E1  0870               	movf	?___lwmod,w
  4907  13E2  00F8               	movwf	___lwdiv@dividend
  4908  13E3  160A  158A  23F9  160A  118A  	fcall	___lwdiv
  4909  13E8  0876               	movf	?___lwdiv,w
  4910  13E9  1283               	bcf	3,5	;RP0=0, select bank0
  4911  13EA  1303               	bcf	3,6	;RP1=0, select bank0
  4912  13EB  00C4               	movwf	??_fround+2
  4913  13EC  3001               	movlw	1
  4914  13ED                     u4365:
  4915  13ED  1003               	clrc
  4916  13EE  0DC4               	rlf	??_fround+2,f
  4917  13EF  3EFF               	addlw	-1
  4918  13F0  1D03               	skipz
  4919  13F1  2BED               	goto	u4365
  4920  13F2  1003               	clrc
  4921  13F3  0D44               	rlf	??_fround+2,w
  4922  13F4  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4923  13F5  0084               	movwf	4
  4924  13F6  160A  158A  2000  160A  118A  	fcall	stringdir
  4925  13FB  00C5               	movwf	??_fround+3
  4926  13FC  160A  158A  2000  160A  118A  	fcall	stringdir
  4927  1401  00C6               	movwf	??_fround+4
  4928  1402  160A  158A  2000  160A  118A  	fcall	stringdir
  4929  1407  00C7               	movwf	??_fround+5
  4930  1408  160A  158A  2000  160A  118A  	fcall	stringdir
  4931  140D  00C8               	movwf	??_fround+6
  4932  140E  0848               	movf	??_fround+6,w
  4933  140F  00A7               	movwf	___flmul@b+3
  4934  1410  0847               	movf	??_fround+5,w
  4935  1411  00A6               	movwf	___flmul@b+2
  4936  1412  0846               	movf	??_fround+4,w
  4937  1413  00A5               	movwf	___flmul@b+1
  4938  1414  0845               	movf	??_fround+3,w
  4939  1415  00A4               	movwf	___flmul@b
  4940  1416  0850               	movf	_fround$921+3,w
  4941  1417  00AB               	movwf	___flmul@a+3
  4942  1418  084F               	movf	_fround$921+2,w
  4943  1419  00AA               	movwf	___flmul@a+2
  4944  141A  084E               	movf	_fround$921+1,w
  4945  141B  00A9               	movwf	___flmul@a+1
  4946  141C  084D               	movf	_fround$921,w
  4947  141D  00A8               	movwf	___flmul@a
  4948  141E  120A  158A  249F  160A  118A  	fcall	___flmul
  4949  1423  1283               	bcf	3,5	;RP0=0, select bank0
  4950  1424  1303               	bcf	3,6	;RP1=0, select bank0
  4951  1425  0827               	movf	?___flmul+3,w
  4952  1426  00CC               	movwf	_fround$922+3
  4953  1427  0826               	movf	?___flmul+2,w
  4954  1428  00CB               	movwf	_fround$922+2
  4955  1429  0825               	movf	?___flmul+1,w
  4956  142A  00CA               	movwf	_fround$922+1
  4957  142B  0824               	movf	?___flmul,w
  4958  142C  00C9               	movwf	_fround$922
  4959                           
  4960                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4961  142D  300A               	movlw	10
  4962  142E  00F0               	movwf	___lwmod@divisor
  4963  142F  3000               	movlw	0
  4964  1430  00F1               	movwf	___lwmod@divisor+1
  4965  1431  0851               	movf	fround@prec,w
  4966  1432  00C2               	movwf	??_fround
  4967  1433  01C3               	clrf	??_fround+1
  4968  1434  0842               	movf	??_fround,w
  4969  1435  00F2               	movwf	___lwmod@dividend
  4970  1436  0843               	movf	??_fround+1,w
  4971  1437  00F3               	movwf	___lwmod@dividend+1
  4972  1438  160A  158A  23BF  160A  118A  	fcall	___lwmod
  4973  143D  0870               	movf	?___lwmod,w
  4974  143E  1283               	bcf	3,5	;RP0=0, select bank0
  4975  143F  1303               	bcf	3,6	;RP1=0, select bank0
  4976  1440  00C4               	movwf	??_fround+2
  4977  1441  3001               	movlw	1
  4978  1442                     u4375:
  4979  1442  1003               	clrc
  4980  1443  0DC4               	rlf	??_fround+2,f
  4981  1444  3EFF               	addlw	-1
  4982  1445  1D03               	skipz
  4983  1446  2C42               	goto	u4375
  4984  1447  1003               	clrc
  4985  1448  0D44               	rlf	??_fround+2,w
  4986  1449  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4987  144A  0084               	movwf	4
  4988  144B  160A  158A  2000  160A  118A  	fcall	stringdir
  4989  1450  00C5               	movwf	??_fround+3
  4990  1451  160A  158A  2000  160A  118A  	fcall	stringdir
  4991  1456  00C6               	movwf	??_fround+4
  4992  1457  160A  158A  2000  160A  118A  	fcall	stringdir
  4993  145C  00C7               	movwf	??_fround+5
  4994  145D  160A  158A  2000  160A  118A  	fcall	stringdir
  4995  1462  00C8               	movwf	??_fround+6
  4996  1463  0848               	movf	??_fround+6,w
  4997  1464  00A7               	movwf	___flmul@b+3
  4998  1465  0847               	movf	??_fround+5,w
  4999  1466  00A6               	movwf	___flmul@b+2
  5000  1467  0846               	movf	??_fround+4,w
  5001  1468  00A5               	movwf	___flmul@b+1
  5002  1469  0845               	movf	??_fround+3,w
  5003  146A  00A4               	movwf	___flmul@b
  5004  146B  084C               	movf	_fround$922+3,w
  5005  146C  00AB               	movwf	___flmul@a+3
  5006  146D  084B               	movf	_fround$922+2,w
  5007  146E  00AA               	movwf	___flmul@a+2
  5008  146F  084A               	movf	_fround$922+1,w
  5009  1470  00A9               	movwf	___flmul@a+1
  5010  1471  0849               	movf	_fround$922,w
  5011  1472  00A8               	movwf	___flmul@a
  5012  1473  120A  158A  249F  160A  118A  	fcall	___flmul
  5013  1478  1283               	bcf	3,5	;RP0=0, select bank0
  5014  1479  1303               	bcf	3,6	;RP1=0, select bank0
  5015  147A  0827               	movf	?___flmul+3,w
  5016  147B  00C1               	movwf	?_fround+3
  5017  147C  0826               	movf	?___flmul+2,w
  5018  147D  00C0               	movwf	?_fround+2
  5019  147E  0825               	movf	?___flmul+1,w
  5020  147F  00BF               	movwf	?_fround+1
  5021  1480  0824               	movf	?___flmul,w
  5022  1481  00BE               	movwf	?_fround
  5023  1482  2D77               	goto	l220
  5024  1483                     l2889:
  5025  1483  300B               	movlw	11
  5026  1484  0251               	subwf	fround@prec,w
  5027  1485  1C03               	skipc
  5028  1486  2C88               	goto	u4381
  5029  1487  2C89               	goto	u4380
  5030  1488                     u4381:
  5031  1488  2D34               	goto	l2895
  5032  1489                     u4380:
  5033  1489                     l2891:
  5034                           
  5035                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  5036  1489  303F               	movlw	63
  5037  148A  00A7               	movwf	___flmul@b+3
  5038  148B  3000               	movlw	0
  5039  148C  00A6               	movwf	___flmul@b+2
  5040  148D  3000               	movlw	0
  5041  148E  00A5               	movwf	___flmul@b+1
  5042  148F  3000               	movlw	0
  5043  1490  00A4               	movwf	___flmul@b
  5044  1491  300A               	movlw	10
  5045  1492  00F6               	movwf	___lwdiv@divisor
  5046  1493  3000               	movlw	0
  5047  1494  00F7               	movwf	___lwdiv@divisor+1
  5048  1495  0851               	movf	fround@prec,w
  5049  1496  00C2               	movwf	??_fround
  5050  1497  01C3               	clrf	??_fround+1
  5051  1498  0842               	movf	??_fround,w
  5052  1499  00F8               	movwf	___lwdiv@dividend
  5053  149A  0843               	movf	??_fround+1,w
  5054  149B  00F9               	movwf	___lwdiv@dividend+1
  5055  149C  160A  158A  23F9  160A  118A  	fcall	___lwdiv
  5056  14A1  0876               	movf	?___lwdiv,w
  5057  14A2  1283               	bcf	3,5	;RP0=0, select bank0
  5058  14A3  1303               	bcf	3,6	;RP1=0, select bank0
  5059  14A4  00C4               	movwf	??_fround+2
  5060  14A5  3001               	movlw	1
  5061  14A6                     u4395:
  5062  14A6  1003               	clrc
  5063  14A7  0DC4               	rlf	??_fround+2,f
  5064  14A8  3EFF               	addlw	-1
  5065  14A9  1D03               	skipz
  5066  14AA  2CA6               	goto	u4395
  5067  14AB  1003               	clrc
  5068  14AC  0D44               	rlf	??_fround+2,w
  5069  14AD  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  5070  14AE  0084               	movwf	4
  5071  14AF  160A  158A  2000  160A  118A  	fcall	stringdir
  5072  14B4  00C5               	movwf	??_fround+3
  5073  14B5  160A  158A  2000  160A  118A  	fcall	stringdir
  5074  14BA  00C6               	movwf	??_fround+4
  5075  14BB  160A  158A  2000  160A  118A  	fcall	stringdir
  5076  14C0  00C7               	movwf	??_fround+5
  5077  14C1  160A  158A  2000  160A  118A  	fcall	stringdir
  5078  14C6  00C8               	movwf	??_fround+6
  5079  14C7  0848               	movf	??_fround+6,w
  5080  14C8  00AB               	movwf	___flmul@a+3
  5081  14C9  0847               	movf	??_fround+5,w
  5082  14CA  00AA               	movwf	___flmul@a+2
  5083  14CB  0846               	movf	??_fround+4,w
  5084  14CC  00A9               	movwf	___flmul@a+1
  5085  14CD  0845               	movf	??_fround+3,w
  5086  14CE  00A8               	movwf	___flmul@a
  5087  14CF  120A  158A  249F  160A  118A  	fcall	___flmul
  5088  14D4  1283               	bcf	3,5	;RP0=0, select bank0
  5089  14D5  1303               	bcf	3,6	;RP1=0, select bank0
  5090  14D6  0827               	movf	?___flmul+3,w
  5091  14D7  00D0               	movwf	_fround$921+3
  5092  14D8  0826               	movf	?___flmul+2,w
  5093  14D9  00CF               	movwf	_fround$921+2
  5094  14DA  0825               	movf	?___flmul+1,w
  5095  14DB  00CE               	movwf	_fround$921+1
  5096  14DC  0824               	movf	?___flmul,w
  5097  14DD  00CD               	movwf	_fround$921
  5098                           
  5099                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  5100  14DE  300A               	movlw	10
  5101  14DF  00F0               	movwf	___lwmod@divisor
  5102  14E0  3000               	movlw	0
  5103  14E1  00F1               	movwf	___lwmod@divisor+1
  5104  14E2  0851               	movf	fround@prec,w
  5105  14E3  00C2               	movwf	??_fround
  5106  14E4  01C3               	clrf	??_fround+1
  5107  14E5  0842               	movf	??_fround,w
  5108  14E6  00F2               	movwf	___lwmod@dividend
  5109  14E7  0843               	movf	??_fround+1,w
  5110  14E8  00F3               	movwf	___lwmod@dividend+1
  5111  14E9  160A  158A  23BF  160A  118A  	fcall	___lwmod
  5112  14EE  0870               	movf	?___lwmod,w
  5113  14EF  1283               	bcf	3,5	;RP0=0, select bank0
  5114  14F0  1303               	bcf	3,6	;RP1=0, select bank0
  5115  14F1  00C4               	movwf	??_fround+2
  5116  14F2  3001               	movlw	1
  5117  14F3                     u4405:
  5118  14F3  1003               	clrc
  5119  14F4  0DC4               	rlf	??_fround+2,f
  5120  14F5  3EFF               	addlw	-1
  5121  14F6  1D03               	skipz
  5122  14F7  2CF3               	goto	u4405
  5123  14F8  1003               	clrc
  5124  14F9  0D44               	rlf	??_fround+2,w
  5125  14FA  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  5126  14FB  0084               	movwf	4
  5127  14FC  160A  158A  2000  160A  118A  	fcall	stringdir
  5128  1501  00C5               	movwf	??_fround+3
  5129  1502  160A  158A  2000  160A  118A  	fcall	stringdir
  5130  1507  00C6               	movwf	??_fround+4
  5131  1508  160A  158A  2000  160A  118A  	fcall	stringdir
  5132  150D  00C7               	movwf	??_fround+5
  5133  150E  160A  158A  2000  160A  118A  	fcall	stringdir
  5134  1513  00C8               	movwf	??_fround+6
  5135  1514  0848               	movf	??_fround+6,w
  5136  1515  00A7               	movwf	___flmul@b+3
  5137  1516  0847               	movf	??_fround+5,w
  5138  1517  00A6               	movwf	___flmul@b+2
  5139  1518  0846               	movf	??_fround+4,w
  5140  1519  00A5               	movwf	___flmul@b+1
  5141  151A  0845               	movf	??_fround+3,w
  5142  151B  00A4               	movwf	___flmul@b
  5143  151C  0850               	movf	_fround$921+3,w
  5144  151D  00AB               	movwf	___flmul@a+3
  5145  151E  084F               	movf	_fround$921+2,w
  5146  151F  00AA               	movwf	___flmul@a+2
  5147  1520  084E               	movf	_fround$921+1,w
  5148  1521  00A9               	movwf	___flmul@a+1
  5149  1522  084D               	movf	_fround$921,w
  5150  1523  00A8               	movwf	___flmul@a
  5151  1524  120A  158A  249F  160A  118A  	fcall	___flmul
  5152  1529  1283               	bcf	3,5	;RP0=0, select bank0
  5153  152A  1303               	bcf	3,6	;RP1=0, select bank0
  5154  152B  0827               	movf	?___flmul+3,w
  5155  152C  00C1               	movwf	?_fround+3
  5156  152D  0826               	movf	?___flmul+2,w
  5157  152E  00C0               	movwf	?_fround+2
  5158  152F  0825               	movf	?___flmul+1,w
  5159  1530  00BF               	movwf	?_fround+1
  5160  1531  0824               	movf	?___flmul,w
  5161  1532  00BE               	movwf	?_fround
  5162  1533  2D77               	goto	l220
  5163  1534                     l2895:
  5164                           
  5165                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 425:  return 0.5 
      +                          * _npowers_[prec];
  5166  1534  303F               	movlw	63
  5167  1535  00A7               	movwf	___flmul@b+3
  5168  1536  3000               	movlw	0
  5169  1537  00A6               	movwf	___flmul@b+2
  5170  1538  3000               	movlw	0
  5171  1539  00A5               	movwf	___flmul@b+1
  5172  153A  3000               	movlw	0
  5173  153B  00A4               	movwf	___flmul@b
  5174  153C  0851               	movf	fround@prec,w
  5175  153D  00C2               	movwf	??_fround
  5176  153E  3001               	movlw	1
  5177  153F                     u4415:
  5178  153F  1003               	clrc
  5179  1540  0DC2               	rlf	??_fround,f
  5180  1541  3EFF               	addlw	-1
  5181  1542  1D03               	skipz
  5182  1543  2D3F               	goto	u4415
  5183  1544  1003               	clrc
  5184  1545  0D42               	rlf	??_fround,w
  5185  1546  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  5186  1547  0084               	movwf	4
  5187  1548  160A  158A  2000  160A  118A  	fcall	stringdir
  5188  154D  00C3               	movwf	??_fround+1
  5189  154E  160A  158A  2000  160A  118A  	fcall	stringdir
  5190  1553  00C4               	movwf	??_fround+2
  5191  1554  160A  158A  2000  160A  118A  	fcall	stringdir
  5192  1559  00C5               	movwf	??_fround+3
  5193  155A  160A  158A  2000  160A  118A  	fcall	stringdir
  5194  155F  00C6               	movwf	??_fround+4
  5195  1560  0846               	movf	??_fround+4,w
  5196  1561  00AB               	movwf	___flmul@a+3
  5197  1562  0845               	movf	??_fround+3,w
  5198  1563  00AA               	movwf	___flmul@a+2
  5199  1564  0844               	movf	??_fround+2,w
  5200  1565  00A9               	movwf	___flmul@a+1
  5201  1566  0843               	movf	??_fround+1,w
  5202  1567  00A8               	movwf	___flmul@a
  5203  1568  120A  158A  249F  160A  118A  	fcall	___flmul
  5204  156D  1283               	bcf	3,5	;RP0=0, select bank0
  5205  156E  1303               	bcf	3,6	;RP1=0, select bank0
  5206  156F  0827               	movf	?___flmul+3,w
  5207  1570  00C1               	movwf	?_fround+3
  5208  1571  0826               	movf	?___flmul+2,w
  5209  1572  00C0               	movwf	?_fround+2
  5210  1573  0825               	movf	?___flmul+1,w
  5211  1574  00BF               	movwf	?_fround+1
  5212  1575  0824               	movf	?___flmul,w
  5213  1576  00BE               	movwf	?_fround
  5214  1577                     l220:
  5215  1577  0008               	return
  5216  1578                     __end_of_fround:
  5217                           
  5218                           	psect	text7
  5219  1BBF                     __ptext7:	
  5220 ;; *************** function ___lwmod *****************
  5221 ;; Defined at:
  5222 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  5223 ;; Parameters:    Size  Location     Type
  5224 ;;  divisor         2    0[COMMON] unsigned int 
  5225 ;;  dividend        2    2[COMMON] unsigned int 
  5226 ;; Auto vars:     Size  Location     Type
  5227 ;;  counter         1    5[COMMON] unsigned char 
  5228 ;; Return value:  Size  Location     Type
  5229 ;;                  2    0[COMMON] unsigned int 
  5230 ;; Registers used:
  5231 ;;		wreg, status,2, status,0
  5232 ;; Tracked objects:
  5233 ;;		On entry : 0/0
  5234 ;;		On exit  : 0/0
  5235 ;;		Unchanged: 0/0
  5236 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5237 ;;      Params:         4       0       0       0       0
  5238 ;;      Locals:         1       0       0       0       0
  5239 ;;      Temps:          1       0       0       0       0
  5240 ;;      Totals:         6       0       0       0       0
  5241 ;;Total ram usage:        6 bytes
  5242 ;; Hardware stack levels used:    1
  5243 ;; This function calls:
  5244 ;;		Nothing
  5245 ;; This function is called by:
  5246 ;;		_fround
  5247 ;;		_lcd_print_number
  5248 ;; This function uses a non-reentrant model
  5249 ;;
  5250                           
  5251                           
  5252                           ;psect for function ___lwmod
  5253  1BBF                     ___lwmod:
  5254  1BBF                     l2511:	
  5255                           ;incstack = 0
  5256                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  5257                           
  5258  1BBF  0870               	movf	___lwmod@divisor,w
  5259  1BC0  0471               	iorwf	___lwmod@divisor+1,w
  5260  1BC1  1903               	btfsc	3,2
  5261  1BC2  2BC4               	goto	u3451
  5262  1BC3  2BC5               	goto	u3450
  5263  1BC4                     u3451:
  5264  1BC4  2BF4               	goto	l2529
  5265  1BC5                     u3450:
  5266  1BC5                     l2513:
  5267  1BC5  01F5               	clrf	___lwmod@counter
  5268  1BC6  0AF5               	incf	___lwmod@counter,f
  5269  1BC7  2BD3               	goto	l2519
  5270  1BC8                     l2515:
  5271  1BC8  3001               	movlw	1
  5272  1BC9                     u3465:
  5273  1BC9  1003               	clrc
  5274  1BCA  0DF0               	rlf	___lwmod@divisor,f
  5275  1BCB  0DF1               	rlf	___lwmod@divisor+1,f
  5276  1BCC  3EFF               	addlw	-1
  5277  1BCD  1D03               	skipz
  5278  1BCE  2BC9               	goto	u3465
  5279  1BCF                     l2517:
  5280  1BCF  3001               	movlw	1
  5281  1BD0  00F4               	movwf	??___lwmod
  5282  1BD1  0874               	movf	??___lwmod,w
  5283  1BD2  07F5               	addwf	___lwmod@counter,f
  5284  1BD3                     l2519:
  5285  1BD3  1FF1               	btfss	___lwmod@divisor+1,7
  5286  1BD4  2BD6               	goto	u3471
  5287  1BD5  2BD7               	goto	u3470
  5288  1BD6                     u3471:
  5289  1BD6  2BC8               	goto	l2515
  5290  1BD7                     u3470:
  5291  1BD7                     l2521:
  5292  1BD7  0871               	movf	___lwmod@divisor+1,w
  5293  1BD8  0273               	subwf	___lwmod@dividend+1,w
  5294  1BD9  1D03               	skipz
  5295  1BDA  2BDD               	goto	u3485
  5296  1BDB  0870               	movf	___lwmod@divisor,w
  5297  1BDC  0272               	subwf	___lwmod@dividend,w
  5298  1BDD                     u3485:
  5299  1BDD  1C03               	skipc
  5300  1BDE  2BE0               	goto	u3481
  5301  1BDF  2BE1               	goto	u3480
  5302  1BE0                     u3481:
  5303  1BE0  2BE7               	goto	l2525
  5304  1BE1                     u3480:
  5305  1BE1                     l2523:
  5306  1BE1  0870               	movf	___lwmod@divisor,w
  5307  1BE2  02F2               	subwf	___lwmod@dividend,f
  5308  1BE3  0871               	movf	___lwmod@divisor+1,w
  5309  1BE4  1C03               	skipc
  5310  1BE5  03F3               	decf	___lwmod@dividend+1,f
  5311  1BE6  02F3               	subwf	___lwmod@dividend+1,f
  5312  1BE7                     l2525:
  5313  1BE7  3001               	movlw	1
  5314  1BE8                     u3495:
  5315  1BE8  1003               	clrc
  5316  1BE9  0CF1               	rrf	___lwmod@divisor+1,f
  5317  1BEA  0CF0               	rrf	___lwmod@divisor,f
  5318  1BEB  3EFF               	addlw	-1
  5319  1BEC  1D03               	skipz
  5320  1BED  2BE8               	goto	u3495
  5321  1BEE                     l2527:
  5322  1BEE  3001               	movlw	1
  5323  1BEF  02F5               	subwf	___lwmod@counter,f
  5324  1BF0  1D03               	btfss	3,2
  5325  1BF1  2BF3               	goto	u3501
  5326  1BF2  2BF4               	goto	u3500
  5327  1BF3                     u3501:
  5328  1BF3  2BD7               	goto	l2521
  5329  1BF4                     u3500:
  5330  1BF4                     l2529:
  5331  1BF4  0873               	movf	___lwmod@dividend+1,w
  5332  1BF5  00F1               	movwf	?___lwmod+1
  5333  1BF6  0872               	movf	___lwmod@dividend,w
  5334  1BF7  00F0               	movwf	?___lwmod
  5335  1BF8                     l630:
  5336  1BF8  0008               	return
  5337  1BF9                     __end_of___lwmod:
  5338                           
  5339                           	psect	text8
  5340  1BF9                     __ptext8:	
  5341 ;; *************** function ___lwdiv *****************
  5342 ;; Defined at:
  5343 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  5344 ;; Parameters:    Size  Location     Type
  5345 ;;  divisor         2    6[COMMON] unsigned int 
  5346 ;;  dividend        2    8[COMMON] unsigned int 
  5347 ;; Auto vars:     Size  Location     Type
  5348 ;;  quotient        2   11[COMMON] unsigned int 
  5349 ;;  counter         1   13[COMMON] unsigned char 
  5350 ;; Return value:  Size  Location     Type
  5351 ;;                  2    6[COMMON] unsigned int 
  5352 ;; Registers used:
  5353 ;;		wreg, status,2, status,0
  5354 ;; Tracked objects:
  5355 ;;		On entry : 0/0
  5356 ;;		On exit  : 0/0
  5357 ;;		Unchanged: 0/0
  5358 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5359 ;;      Params:         4       0       0       0       0
  5360 ;;      Locals:         3       0       0       0       0
  5361 ;;      Temps:          1       0       0       0       0
  5362 ;;      Totals:         8       0       0       0       0
  5363 ;;Total ram usage:        8 bytes
  5364 ;; Hardware stack levels used:    1
  5365 ;; This function calls:
  5366 ;;		Nothing
  5367 ;; This function is called by:
  5368 ;;		_fround
  5369 ;;		_lcd_print_number
  5370 ;; This function uses a non-reentrant model
  5371 ;;
  5372                           
  5373                           
  5374                           ;psect for function ___lwdiv
  5375  1BF9                     ___lwdiv:
  5376  1BF9                     l2485:	
  5377                           ;incstack = 0
  5378                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  5379                           
  5380  1BF9  01FB               	clrf	___lwdiv@quotient
  5381  1BFA  01FC               	clrf	___lwdiv@quotient+1
  5382  1BFB                     l2487:
  5383  1BFB  0876               	movf	___lwdiv@divisor,w
  5384  1BFC  0477               	iorwf	___lwdiv@divisor+1,w
  5385  1BFD  1903               	btfsc	3,2
  5386  1BFE  2C00               	goto	u3381
  5387  1BFF  2C01               	goto	u3380
  5388  1C00                     u3381:
  5389  1C00  2C38               	goto	l2507
  5390  1C01                     u3380:
  5391  1C01                     l2489:
  5392  1C01  01FD               	clrf	___lwdiv@counter
  5393  1C02  0AFD               	incf	___lwdiv@counter,f
  5394  1C03  2C0F               	goto	l2495
  5395  1C04                     l2491:
  5396  1C04  3001               	movlw	1
  5397  1C05                     u3395:
  5398  1C05  1003               	clrc
  5399  1C06  0DF6               	rlf	___lwdiv@divisor,f
  5400  1C07  0DF7               	rlf	___lwdiv@divisor+1,f
  5401  1C08  3EFF               	addlw	-1
  5402  1C09  1D03               	skipz
  5403  1C0A  2C05               	goto	u3395
  5404  1C0B                     l2493:
  5405  1C0B  3001               	movlw	1
  5406  1C0C  00FA               	movwf	??___lwdiv
  5407  1C0D  087A               	movf	??___lwdiv,w
  5408  1C0E  07FD               	addwf	___lwdiv@counter,f
  5409  1C0F                     l2495:
  5410  1C0F  1FF7               	btfss	___lwdiv@divisor+1,7
  5411  1C10  2C12               	goto	u3401
  5412  1C11  2C13               	goto	u3400
  5413  1C12                     u3401:
  5414  1C12  2C04               	goto	l2491
  5415  1C13                     u3400:
  5416  1C13                     l2497:
  5417  1C13  3001               	movlw	1
  5418  1C14                     u3415:
  5419  1C14  1003               	clrc
  5420  1C15  0DFB               	rlf	___lwdiv@quotient,f
  5421  1C16  0DFC               	rlf	___lwdiv@quotient+1,f
  5422  1C17  3EFF               	addlw	-1
  5423  1C18  1D03               	skipz
  5424  1C19  2C14               	goto	u3415
  5425  1C1A  0877               	movf	___lwdiv@divisor+1,w
  5426  1C1B  0279               	subwf	___lwdiv@dividend+1,w
  5427  1C1C  1D03               	skipz
  5428  1C1D  2C20               	goto	u3425
  5429  1C1E  0876               	movf	___lwdiv@divisor,w
  5430  1C1F  0278               	subwf	___lwdiv@dividend,w
  5431  1C20                     u3425:
  5432  1C20  1C03               	skipc
  5433  1C21  2C23               	goto	u3421
  5434  1C22  2C24               	goto	u3420
  5435  1C23                     u3421:
  5436  1C23  2C2B               	goto	l2503
  5437  1C24                     u3420:
  5438  1C24                     l2499:
  5439  1C24  0876               	movf	___lwdiv@divisor,w
  5440  1C25  02F8               	subwf	___lwdiv@dividend,f
  5441  1C26  0877               	movf	___lwdiv@divisor+1,w
  5442  1C27  1C03               	skipc
  5443  1C28  03F9               	decf	___lwdiv@dividend+1,f
  5444  1C29  02F9               	subwf	___lwdiv@dividend+1,f
  5445  1C2A                     l2501:
  5446  1C2A  147B               	bsf	___lwdiv@quotient,0
  5447  1C2B                     l2503:
  5448  1C2B  3001               	movlw	1
  5449  1C2C                     u3435:
  5450  1C2C  1003               	clrc
  5451  1C2D  0CF7               	rrf	___lwdiv@divisor+1,f
  5452  1C2E  0CF6               	rrf	___lwdiv@divisor,f
  5453  1C2F  3EFF               	addlw	-1
  5454  1C30  1D03               	skipz
  5455  1C31  2C2C               	goto	u3435
  5456  1C32                     l2505:
  5457  1C32  3001               	movlw	1
  5458  1C33  02FD               	subwf	___lwdiv@counter,f
  5459  1C34  1D03               	btfss	3,2
  5460  1C35  2C37               	goto	u3441
  5461  1C36  2C38               	goto	u3440
  5462  1C37                     u3441:
  5463  1C37  2C13               	goto	l2497
  5464  1C38                     u3440:
  5465  1C38                     l2507:
  5466  1C38  087C               	movf	___lwdiv@quotient+1,w
  5467  1C39  00F7               	movwf	?___lwdiv+1
  5468  1C3A  087B               	movf	___lwdiv@quotient,w
  5469  1C3B  00F6               	movwf	?___lwdiv
  5470  1C3C                     l620:
  5471  1C3C  0008               	return
  5472  1C3D                     __end_of___lwdiv:
  5473                           
  5474                           	psect	text9
  5475  0C9F                     __ptext9:	
  5476 ;; *************** function ___flmul *****************
  5477 ;; Defined at:
  5478 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcmul.c"
  5479 ;; Parameters:    Size  Location     Type
  5480 ;;  b               4    4[BANK0 ] unsigned int 
  5481 ;;  a               4    8[BANK0 ] unsigned int 
  5482 ;; Auto vars:     Size  Location     Type
  5483 ;;  prod            4   24[BANK0 ] struct .
  5484 ;;  grs             4   18[BANK0 ] unsigned long 
  5485 ;;  temp            2   28[BANK0 ] struct .
  5486 ;;  bexp            1   23[BANK0 ] unsigned char 
  5487 ;;  aexp            1   22[BANK0 ] unsigned char 
  5488 ;;  sign            1   17[BANK0 ] unsigned char 
  5489 ;; Return value:  Size  Location     Type
  5490 ;;                  4    4[BANK0 ] unsigned char 
  5491 ;; Registers used:
  5492 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5493 ;; Tracked objects:
  5494 ;;		On entry : 0/0
  5495 ;;		On exit  : 0/0
  5496 ;;		Unchanged: 0/0
  5497 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5498 ;;      Params:         0       8       0       0       0
  5499 ;;      Locals:         0      13       0       0       0
  5500 ;;      Temps:          0       5       0       0       0
  5501 ;;      Totals:         0      26       0       0       0
  5502 ;;Total ram usage:       26 bytes
  5503 ;; Hardware stack levels used:    1
  5504 ;; Hardware stack levels required when called:    1
  5505 ;; This function calls:
  5506 ;;		__Umul8_16
  5507 ;; This function is called by:
  5508 ;;		_fround
  5509 ;;		_scale
  5510 ;;		_sprintf
  5511 ;; This function uses a non-reentrant model
  5512 ;;
  5513                           
  5514                           
  5515                           ;psect for function ___flmul
  5516  0C9F                     ___flmul:
  5517  0C9F                     l2727:	
  5518                           ;incstack = 0
  5519                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5520                           
  5521  0C9F  1283               	bcf	3,5	;RP0=0, select bank0
  5522  0CA0  1303               	bcf	3,6	;RP1=0, select bank0
  5523  0CA1  0827               	movf	___flmul@b+3,w
  5524  0CA2  3980               	andlw	128
  5525  0CA3  00AC               	movwf	??___flmul
  5526  0CA4  082C               	movf	??___flmul,w
  5527  0CA5  00B1               	movwf	___flmul@sign
  5528  0CA6                     l2729:
  5529  0CA6  0827               	movf	___flmul@b+3,w
  5530  0CA7  00AC               	movwf	??___flmul
  5531  0CA8  072C               	addwf	??___flmul,w
  5532  0CA9  00AD               	movwf	??___flmul+1
  5533  0CAA  082D               	movf	??___flmul+1,w
  5534  0CAB  00B7               	movwf	___flmul@bexp
  5535  0CAC                     l2731:
  5536  0CAC  1FA6               	btfss	___flmul@b+2,7
  5537  0CAD  2CAF               	goto	u3971
  5538  0CAE  2CB0               	goto	u3970
  5539  0CAF                     u3971:
  5540  0CAF  2CB1               	goto	l2735
  5541  0CB0                     u3970:
  5542  0CB0                     l2733:
  5543  0CB0  1437               	bsf	___flmul@bexp,0
  5544  0CB1                     l2735:
  5545  0CB1  0837               	movf	___flmul@bexp,w
  5546  0CB2  1903               	btfsc	3,2
  5547  0CB3  2CB5               	goto	u3981
  5548  0CB4  2CB6               	goto	u3980
  5549  0CB5                     u3981:
  5550  0CB5  2CC5               	goto	l2743
  5551  0CB6                     u3980:
  5552  0CB6                     l2737:
  5553  0CB6  0A37               	incf	___flmul@bexp,w
  5554  0CB7  1D03               	btfss	3,2
  5555  0CB8  2CBA               	goto	u3991
  5556  0CB9  2CBB               	goto	u3990
  5557  0CBA                     u3991:
  5558  0CBA  2CC3               	goto	l2741
  5559  0CBB                     u3990:
  5560  0CBB                     l2739:
  5561  0CBB  3000               	movlw	0
  5562  0CBC  00A7               	movwf	___flmul@b+3
  5563  0CBD  3000               	movlw	0
  5564  0CBE  00A6               	movwf	___flmul@b+2
  5565  0CBF  3000               	movlw	0
  5566  0CC0  00A5               	movwf	___flmul@b+1
  5567  0CC1  3000               	movlw	0
  5568  0CC2  00A4               	movwf	___flmul@b
  5569  0CC3                     l2741:
  5570  0CC3  17A6               	bsf	___flmul@b+2,7
  5571  0CC4  2CCD               	goto	l2745
  5572  0CC5                     l2743:
  5573  0CC5  3000               	movlw	0
  5574  0CC6  00A7               	movwf	___flmul@b+3
  5575  0CC7  3000               	movlw	0
  5576  0CC8  00A6               	movwf	___flmul@b+2
  5577  0CC9  3000               	movlw	0
  5578  0CCA  00A5               	movwf	___flmul@b+1
  5579  0CCB  3000               	movlw	0
  5580  0CCC  00A4               	movwf	___flmul@b
  5581  0CCD                     l2745:
  5582  0CCD  082B               	movf	___flmul@a+3,w
  5583  0CCE  3980               	andlw	128
  5584  0CCF  00AC               	movwf	??___flmul
  5585  0CD0  082C               	movf	??___flmul,w
  5586  0CD1  06B1               	xorwf	___flmul@sign,f
  5587  0CD2                     l2747:
  5588  0CD2  082B               	movf	___flmul@a+3,w
  5589  0CD3  00AC               	movwf	??___flmul
  5590  0CD4  072C               	addwf	??___flmul,w
  5591  0CD5  00AD               	movwf	??___flmul+1
  5592  0CD6  082D               	movf	??___flmul+1,w
  5593  0CD7  00B6               	movwf	___flmul@aexp
  5594  0CD8                     l2749:
  5595  0CD8  1FAA               	btfss	___flmul@a+2,7
  5596  0CD9  2CDB               	goto	u4001
  5597  0CDA  2CDC               	goto	u4000
  5598  0CDB                     u4001:
  5599  0CDB  2CDD               	goto	l2753
  5600  0CDC                     u4000:
  5601  0CDC                     l2751:
  5602  0CDC  1436               	bsf	___flmul@aexp,0
  5603  0CDD                     l2753:
  5604  0CDD  0836               	movf	___flmul@aexp,w
  5605  0CDE  1903               	btfsc	3,2
  5606  0CDF  2CE1               	goto	u4011
  5607  0CE0  2CE2               	goto	u4010
  5608  0CE1                     u4011:
  5609  0CE1  2CF1               	goto	l2761
  5610  0CE2                     u4010:
  5611  0CE2                     l2755:
  5612  0CE2  0A36               	incf	___flmul@aexp,w
  5613  0CE3  1D03               	btfss	3,2
  5614  0CE4  2CE6               	goto	u4021
  5615  0CE5  2CE7               	goto	u4020
  5616  0CE6                     u4021:
  5617  0CE6  2CEF               	goto	l2759
  5618  0CE7                     u4020:
  5619  0CE7                     l2757:
  5620  0CE7  3000               	movlw	0
  5621  0CE8  00AB               	movwf	___flmul@a+3
  5622  0CE9  3000               	movlw	0
  5623  0CEA  00AA               	movwf	___flmul@a+2
  5624  0CEB  3000               	movlw	0
  5625  0CEC  00A9               	movwf	___flmul@a+1
  5626  0CED  3000               	movlw	0
  5627  0CEE  00A8               	movwf	___flmul@a
  5628  0CEF                     l2759:
  5629  0CEF  17AA               	bsf	___flmul@a+2,7
  5630  0CF0  2CF9               	goto	l2763
  5631  0CF1                     l2761:
  5632  0CF1  3000               	movlw	0
  5633  0CF2  00AB               	movwf	___flmul@a+3
  5634  0CF3  3000               	movlw	0
  5635  0CF4  00AA               	movwf	___flmul@a+2
  5636  0CF5  3000               	movlw	0
  5637  0CF6  00A9               	movwf	___flmul@a+1
  5638  0CF7  3000               	movlw	0
  5639  0CF8  00A8               	movwf	___flmul@a
  5640  0CF9                     l2763:
  5641  0CF9  0836               	movf	___flmul@aexp,w
  5642  0CFA  1903               	btfsc	3,2
  5643  0CFB  2CFD               	goto	u4031
  5644  0CFC  2CFE               	goto	u4030
  5645  0CFD                     u4031:
  5646  0CFD  2D03               	goto	l2767
  5647  0CFE                     u4030:
  5648  0CFE                     l2765:
  5649  0CFE  0837               	movf	___flmul@bexp,w
  5650  0CFF  1D03               	btfss	3,2
  5651  0D00  2D02               	goto	u4041
  5652  0D01  2D03               	goto	u4040
  5653  0D02                     u4041:
  5654  0D02  2D0C               	goto	l2771
  5655  0D03                     u4040:
  5656  0D03                     l2767:
  5657  0D03  3000               	movlw	0
  5658  0D04  00A7               	movwf	?___flmul+3
  5659  0D05  3000               	movlw	0
  5660  0D06  00A6               	movwf	?___flmul+2
  5661  0D07  3000               	movlw	0
  5662  0D08  00A5               	movwf	?___flmul+1
  5663  0D09  3000               	movlw	0
  5664  0D0A  00A4               	movwf	?___flmul
  5665  0D0B  2FFF               	goto	l737
  5666  0D0C                     l2771:
  5667  0D0C  0824               	movf	___flmul@b,w
  5668  0D0D  00AC               	movwf	??___flmul
  5669  0D0E  082C               	movf	??___flmul,w
  5670  0D0F  00F0               	movwf	__Umul8_16@multiplicand
  5671  0D10  082A               	movf	___flmul@a+2,w
  5672  0D11  160A  158A  2398  120A  158A  	fcall	__Umul8_16
  5673  0D16  0871               	movf	?__Umul8_16+1,w
  5674  0D17  1283               	bcf	3,5	;RP0=0, select bank0
  5675  0D18  1303               	bcf	3,6	;RP1=0, select bank0
  5676  0D19  00BD               	movwf	___flmul@temp+1
  5677  0D1A  0870               	movf	?__Umul8_16,w
  5678  0D1B  00BC               	movwf	___flmul@temp
  5679  0D1C                     l2773:
  5680  0D1C  083C               	movf	___flmul@temp,w
  5681  0D1D  00AC               	movwf	??___flmul
  5682  0D1E  01AD               	clrf	??___flmul+1
  5683  0D1F  01AE               	clrf	??___flmul+2
  5684  0D20  01AF               	clrf	??___flmul+3
  5685  0D21  082F               	movf	??___flmul+3,w
  5686  0D22  00B5               	movwf	___flmul@grs+3
  5687  0D23  082E               	movf	??___flmul+2,w
  5688  0D24  00B4               	movwf	___flmul@grs+2
  5689  0D25  082D               	movf	??___flmul+1,w
  5690  0D26  00B3               	movwf	___flmul@grs+1
  5691  0D27  082C               	movf	??___flmul,w
  5692  0D28  00B2               	movwf	___flmul@grs
  5693  0D29                     l2775:
  5694  0D29  083D               	movf	___flmul@temp+1,w
  5695  0D2A  00AC               	movwf	??___flmul
  5696  0D2B  01AD               	clrf	??___flmul+1
  5697  0D2C  01AE               	clrf	??___flmul+2
  5698  0D2D  01AF               	clrf	??___flmul+3
  5699  0D2E  082F               	movf	??___flmul+3,w
  5700  0D2F  00BB               	movwf	___flmul@prod+3
  5701  0D30  082E               	movf	??___flmul+2,w
  5702  0D31  00BA               	movwf	___flmul@prod+2
  5703  0D32  082D               	movf	??___flmul+1,w
  5704  0D33  00B9               	movwf	___flmul@prod+1
  5705  0D34  082C               	movf	??___flmul,w
  5706  0D35  00B8               	movwf	___flmul@prod
  5707  0D36  0825               	movf	___flmul@b+1,w
  5708  0D37  00AC               	movwf	??___flmul
  5709  0D38  082C               	movf	??___flmul,w
  5710  0D39  00F0               	movwf	__Umul8_16@multiplicand
  5711  0D3A  0829               	movf	___flmul@a+1,w
  5712  0D3B  160A  158A  2398  120A  158A  	fcall	__Umul8_16
  5713  0D40  0871               	movf	?__Umul8_16+1,w
  5714  0D41  1283               	bcf	3,5	;RP0=0, select bank0
  5715  0D42  1303               	bcf	3,6	;RP1=0, select bank0
  5716  0D43  00BD               	movwf	___flmul@temp+1
  5717  0D44  0870               	movf	?__Umul8_16,w
  5718  0D45  00BC               	movwf	___flmul@temp
  5719  0D46                     l2777:
  5720  0D46  083C               	movf	___flmul@temp,w
  5721  0D47  00AC               	movwf	??___flmul
  5722  0D48  01AD               	clrf	??___flmul+1
  5723  0D49  01AE               	clrf	??___flmul+2
  5724  0D4A  01AF               	clrf	??___flmul+3
  5725  0D4B  082C               	movf	??___flmul,w
  5726  0D4C  07B2               	addwf	___flmul@grs,f
  5727  0D4D  082D               	movf	??___flmul+1,w
  5728  0D4E  1103               	clrz
  5729  0D4F  1803               	skipnc
  5730  0D50  3E01               	addlw	1
  5731  0D51  1903               	skipnz
  5732  0D52  2D54               	goto	u4051
  5733  0D53  07B3               	addwf	___flmul@grs+1,f
  5734  0D54                     u4051:
  5735  0D54  082E               	movf	??___flmul+2,w
  5736  0D55  1103               	clrz
  5737  0D56  1803               	skipnc
  5738  0D57  3E01               	addlw	1
  5739  0D58  1903               	skipnz
  5740  0D59  2D5B               	goto	u4052
  5741  0D5A  07B4               	addwf	___flmul@grs+2,f
  5742  0D5B                     u4052:
  5743  0D5B  082F               	movf	??___flmul+3,w
  5744  0D5C  1103               	clrz
  5745  0D5D  1803               	skipnc
  5746  0D5E  3E01               	addlw	1
  5747  0D5F  1903               	skipnz
  5748  0D60  2D62               	goto	u4053
  5749  0D61  07B5               	addwf	___flmul@grs+3,f
  5750  0D62                     u4053:
  5751  0D62                     l2779:
  5752  0D62  083D               	movf	___flmul@temp+1,w
  5753  0D63  00AC               	movwf	??___flmul
  5754  0D64  01AD               	clrf	??___flmul+1
  5755  0D65  01AE               	clrf	??___flmul+2
  5756  0D66  01AF               	clrf	??___flmul+3
  5757  0D67  082C               	movf	??___flmul,w
  5758  0D68  07B8               	addwf	___flmul@prod,f
  5759  0D69  082D               	movf	??___flmul+1,w
  5760  0D6A  1103               	clrz
  5761  0D6B  1803               	skipnc
  5762  0D6C  3E01               	addlw	1
  5763  0D6D  1903               	skipnz
  5764  0D6E  2D70               	goto	u4061
  5765  0D6F  07B9               	addwf	___flmul@prod+1,f
  5766  0D70                     u4061:
  5767  0D70  082E               	movf	??___flmul+2,w
  5768  0D71  1103               	clrz
  5769  0D72  1803               	skipnc
  5770  0D73  3E01               	addlw	1
  5771  0D74  1903               	skipnz
  5772  0D75  2D77               	goto	u4062
  5773  0D76  07BA               	addwf	___flmul@prod+2,f
  5774  0D77                     u4062:
  5775  0D77  082F               	movf	??___flmul+3,w
  5776  0D78  1103               	clrz
  5777  0D79  1803               	skipnc
  5778  0D7A  3E01               	addlw	1
  5779  0D7B  1903               	skipnz
  5780  0D7C  2D7E               	goto	u4063
  5781  0D7D  07BB               	addwf	___flmul@prod+3,f
  5782  0D7E                     u4063:
  5783  0D7E  0826               	movf	___flmul@b+2,w
  5784  0D7F  00AC               	movwf	??___flmul
  5785  0D80  082C               	movf	??___flmul,w
  5786  0D81  00F0               	movwf	__Umul8_16@multiplicand
  5787  0D82  0828               	movf	___flmul@a,w
  5788  0D83  160A  158A  2398  120A  158A  	fcall	__Umul8_16
  5789  0D88  0871               	movf	?__Umul8_16+1,w
  5790  0D89  1283               	bcf	3,5	;RP0=0, select bank0
  5791  0D8A  1303               	bcf	3,6	;RP1=0, select bank0
  5792  0D8B  00BD               	movwf	___flmul@temp+1
  5793  0D8C  0870               	movf	?__Umul8_16,w
  5794  0D8D  00BC               	movwf	___flmul@temp
  5795  0D8E                     l2781:
  5796  0D8E  083C               	movf	___flmul@temp,w
  5797  0D8F  00AC               	movwf	??___flmul
  5798  0D90  01AD               	clrf	??___flmul+1
  5799  0D91  01AE               	clrf	??___flmul+2
  5800  0D92  01AF               	clrf	??___flmul+3
  5801  0D93  082C               	movf	??___flmul,w
  5802  0D94  07B2               	addwf	___flmul@grs,f
  5803  0D95  082D               	movf	??___flmul+1,w
  5804  0D96  1103               	clrz
  5805  0D97  1803               	skipnc
  5806  0D98  3E01               	addlw	1
  5807  0D99  1903               	skipnz
  5808  0D9A  2D9C               	goto	u4071
  5809  0D9B  07B3               	addwf	___flmul@grs+1,f
  5810  0D9C                     u4071:
  5811  0D9C  082E               	movf	??___flmul+2,w
  5812  0D9D  1103               	clrz
  5813  0D9E  1803               	skipnc
  5814  0D9F  3E01               	addlw	1
  5815  0DA0  1903               	skipnz
  5816  0DA1  2DA3               	goto	u4072
  5817  0DA2  07B4               	addwf	___flmul@grs+2,f
  5818  0DA3                     u4072:
  5819  0DA3  082F               	movf	??___flmul+3,w
  5820  0DA4  1103               	clrz
  5821  0DA5  1803               	skipnc
  5822  0DA6  3E01               	addlw	1
  5823  0DA7  1903               	skipnz
  5824  0DA8  2DAA               	goto	u4073
  5825  0DA9  07B5               	addwf	___flmul@grs+3,f
  5826  0DAA                     u4073:
  5827  0DAA                     l2783:
  5828  0DAA  083D               	movf	___flmul@temp+1,w
  5829  0DAB  00AC               	movwf	??___flmul
  5830  0DAC  01AD               	clrf	??___flmul+1
  5831  0DAD  01AE               	clrf	??___flmul+2
  5832  0DAE  01AF               	clrf	??___flmul+3
  5833  0DAF  082C               	movf	??___flmul,w
  5834  0DB0  07B8               	addwf	___flmul@prod,f
  5835  0DB1  082D               	movf	??___flmul+1,w
  5836  0DB2  1103               	clrz
  5837  0DB3  1803               	skipnc
  5838  0DB4  3E01               	addlw	1
  5839  0DB5  1903               	skipnz
  5840  0DB6  2DB8               	goto	u4081
  5841  0DB7  07B9               	addwf	___flmul@prod+1,f
  5842  0DB8                     u4081:
  5843  0DB8  082E               	movf	??___flmul+2,w
  5844  0DB9  1103               	clrz
  5845  0DBA  1803               	skipnc
  5846  0DBB  3E01               	addlw	1
  5847  0DBC  1903               	skipnz
  5848  0DBD  2DBF               	goto	u4082
  5849  0DBE  07BA               	addwf	___flmul@prod+2,f
  5850  0DBF                     u4082:
  5851  0DBF  082F               	movf	??___flmul+3,w
  5852  0DC0  1103               	clrz
  5853  0DC1  1803               	skipnc
  5854  0DC2  3E01               	addlw	1
  5855  0DC3  1903               	skipnz
  5856  0DC4  2DC6               	goto	u4083
  5857  0DC5  07BB               	addwf	___flmul@prod+3,f
  5858  0DC6                     u4083:
  5859  0DC6                     l2785:
  5860  0DC6  3008               	movlw	8
  5861  0DC7  00AC               	movwf	??___flmul
  5862  0DC8                     u4095:
  5863  0DC8  1003               	clrc
  5864  0DC9  0DB2               	rlf	___flmul@grs,f
  5865  0DCA  0DB3               	rlf	___flmul@grs+1,f
  5866  0DCB  0DB4               	rlf	___flmul@grs+2,f
  5867  0DCC  0DB5               	rlf	___flmul@grs+3,f
  5868  0DCD  0BAC               	decfsz	??___flmul,f
  5869  0DCE  2DC8               	goto	u4095
  5870  0DCF                     l2787:
  5871  0DCF  0825               	movf	___flmul@b+1,w
  5872  0DD0  00AC               	movwf	??___flmul
  5873  0DD1  082C               	movf	??___flmul,w
  5874  0DD2  00F0               	movwf	__Umul8_16@multiplicand
  5875  0DD3  0828               	movf	___flmul@a,w
  5876  0DD4  160A  158A  2398  120A  158A  	fcall	__Umul8_16
  5877  0DD9  0871               	movf	?__Umul8_16+1,w
  5878  0DDA  1283               	bcf	3,5	;RP0=0, select bank0
  5879  0DDB  1303               	bcf	3,6	;RP1=0, select bank0
  5880  0DDC  00BD               	movwf	___flmul@temp+1
  5881  0DDD  0870               	movf	?__Umul8_16,w
  5882  0DDE  00BC               	movwf	___flmul@temp
  5883  0DDF                     l2789:
  5884  0DDF  083C               	movf	___flmul@temp,w
  5885  0DE0  00AC               	movwf	??___flmul
  5886  0DE1  083D               	movf	___flmul@temp+1,w
  5887  0DE2  00AD               	movwf	??___flmul+1
  5888  0DE3  01AE               	clrf	??___flmul+2
  5889  0DE4  01AF               	clrf	??___flmul+3
  5890  0DE5  082C               	movf	??___flmul,w
  5891  0DE6  07B2               	addwf	___flmul@grs,f
  5892  0DE7  082D               	movf	??___flmul+1,w
  5893  0DE8  1103               	clrz
  5894  0DE9  1803               	skipnc
  5895  0DEA  3E01               	addlw	1
  5896  0DEB  1903               	skipnz
  5897  0DEC  2DEE               	goto	u4101
  5898  0DED  07B3               	addwf	___flmul@grs+1,f
  5899  0DEE                     u4101:
  5900  0DEE  082E               	movf	??___flmul+2,w
  5901  0DEF  1103               	clrz
  5902  0DF0  1803               	skipnc
  5903  0DF1  3E01               	addlw	1
  5904  0DF2  1903               	skipnz
  5905  0DF3  2DF5               	goto	u4102
  5906  0DF4  07B4               	addwf	___flmul@grs+2,f
  5907  0DF5                     u4102:
  5908  0DF5  082F               	movf	??___flmul+3,w
  5909  0DF6  1103               	clrz
  5910  0DF7  1803               	skipnc
  5911  0DF8  3E01               	addlw	1
  5912  0DF9  1903               	skipnz
  5913  0DFA  2DFC               	goto	u4103
  5914  0DFB  07B5               	addwf	___flmul@grs+3,f
  5915  0DFC                     u4103:
  5916  0DFC                     l2791:
  5917  0DFC  0824               	movf	___flmul@b,w
  5918  0DFD  00AC               	movwf	??___flmul
  5919  0DFE  082C               	movf	??___flmul,w
  5920  0DFF  00F0               	movwf	__Umul8_16@multiplicand
  5921  0E00  0829               	movf	___flmul@a+1,w
  5922  0E01  160A  158A  2398  120A  158A  	fcall	__Umul8_16
  5923  0E06  0871               	movf	?__Umul8_16+1,w
  5924  0E07  1283               	bcf	3,5	;RP0=0, select bank0
  5925  0E08  1303               	bcf	3,6	;RP1=0, select bank0
  5926  0E09  00BD               	movwf	___flmul@temp+1
  5927  0E0A  0870               	movf	?__Umul8_16,w
  5928  0E0B  00BC               	movwf	___flmul@temp
  5929  0E0C                     l2793:
  5930  0E0C  083C               	movf	___flmul@temp,w
  5931  0E0D  00AC               	movwf	??___flmul
  5932  0E0E  083D               	movf	___flmul@temp+1,w
  5933  0E0F  00AD               	movwf	??___flmul+1
  5934  0E10  01AE               	clrf	??___flmul+2
  5935  0E11  01AF               	clrf	??___flmul+3
  5936  0E12  082C               	movf	??___flmul,w
  5937  0E13  07B2               	addwf	___flmul@grs,f
  5938  0E14  082D               	movf	??___flmul+1,w
  5939  0E15  1103               	clrz
  5940  0E16  1803               	skipnc
  5941  0E17  3E01               	addlw	1
  5942  0E18  1903               	skipnz
  5943  0E19  2E1B               	goto	u4111
  5944  0E1A  07B3               	addwf	___flmul@grs+1,f
  5945  0E1B                     u4111:
  5946  0E1B  082E               	movf	??___flmul+2,w
  5947  0E1C  1103               	clrz
  5948  0E1D  1803               	skipnc
  5949  0E1E  3E01               	addlw	1
  5950  0E1F  1903               	skipnz
  5951  0E20  2E22               	goto	u4112
  5952  0E21  07B4               	addwf	___flmul@grs+2,f
  5953  0E22                     u4112:
  5954  0E22  082F               	movf	??___flmul+3,w
  5955  0E23  1103               	clrz
  5956  0E24  1803               	skipnc
  5957  0E25  3E01               	addlw	1
  5958  0E26  1903               	skipnz
  5959  0E27  2E29               	goto	u4113
  5960  0E28  07B5               	addwf	___flmul@grs+3,f
  5961  0E29                     u4113:
  5962  0E29                     l2795:
  5963  0E29  3008               	movlw	8
  5964  0E2A  00AC               	movwf	??___flmul
  5965  0E2B                     u4125:
  5966  0E2B  1003               	clrc
  5967  0E2C  0DB2               	rlf	___flmul@grs,f
  5968  0E2D  0DB3               	rlf	___flmul@grs+1,f
  5969  0E2E  0DB4               	rlf	___flmul@grs+2,f
  5970  0E2F  0DB5               	rlf	___flmul@grs+3,f
  5971  0E30  0BAC               	decfsz	??___flmul,f
  5972  0E31  2E2B               	goto	u4125
  5973  0E32  0824               	movf	___flmul@b,w
  5974  0E33  00AC               	movwf	??___flmul
  5975  0E34  082C               	movf	??___flmul,w
  5976  0E35  00F0               	movwf	__Umul8_16@multiplicand
  5977  0E36  0828               	movf	___flmul@a,w
  5978  0E37  160A  158A  2398  120A  158A  	fcall	__Umul8_16
  5979  0E3C  0871               	movf	?__Umul8_16+1,w
  5980  0E3D  1283               	bcf	3,5	;RP0=0, select bank0
  5981  0E3E  1303               	bcf	3,6	;RP1=0, select bank0
  5982  0E3F  00BD               	movwf	___flmul@temp+1
  5983  0E40  0870               	movf	?__Umul8_16,w
  5984  0E41  00BC               	movwf	___flmul@temp
  5985  0E42                     l2797:
  5986  0E42  083C               	movf	___flmul@temp,w
  5987  0E43  00AC               	movwf	??___flmul
  5988  0E44  083D               	movf	___flmul@temp+1,w
  5989  0E45  00AD               	movwf	??___flmul+1
  5990  0E46  01AE               	clrf	??___flmul+2
  5991  0E47  01AF               	clrf	??___flmul+3
  5992  0E48  082C               	movf	??___flmul,w
  5993  0E49  07B2               	addwf	___flmul@grs,f
  5994  0E4A  082D               	movf	??___flmul+1,w
  5995  0E4B  1103               	clrz
  5996  0E4C  1803               	skipnc
  5997  0E4D  3E01               	addlw	1
  5998  0E4E  1903               	skipnz
  5999  0E4F  2E51               	goto	u4131
  6000  0E50  07B3               	addwf	___flmul@grs+1,f
  6001  0E51                     u4131:
  6002  0E51  082E               	movf	??___flmul+2,w
  6003  0E52  1103               	clrz
  6004  0E53  1803               	skipnc
  6005  0E54  3E01               	addlw	1
  6006  0E55  1903               	skipnz
  6007  0E56  2E58               	goto	u4132
  6008  0E57  07B4               	addwf	___flmul@grs+2,f
  6009  0E58                     u4132:
  6010  0E58  082F               	movf	??___flmul+3,w
  6011  0E59  1103               	clrz
  6012  0E5A  1803               	skipnc
  6013  0E5B  3E01               	addlw	1
  6014  0E5C  1903               	skipnz
  6015  0E5D  2E5F               	goto	u4133
  6016  0E5E  07B5               	addwf	___flmul@grs+3,f
  6017  0E5F                     u4133:
  6018  0E5F                     l2799:
  6019  0E5F  0825               	movf	___flmul@b+1,w
  6020  0E60  00AC               	movwf	??___flmul
  6021  0E61  082C               	movf	??___flmul,w
  6022  0E62  00F0               	movwf	__Umul8_16@multiplicand
  6023  0E63  082A               	movf	___flmul@a+2,w
  6024  0E64  160A  158A  2398  120A  158A  	fcall	__Umul8_16
  6025  0E69  0871               	movf	?__Umul8_16+1,w
  6026  0E6A  1283               	bcf	3,5	;RP0=0, select bank0
  6027  0E6B  1303               	bcf	3,6	;RP1=0, select bank0
  6028  0E6C  00BD               	movwf	___flmul@temp+1
  6029  0E6D  0870               	movf	?__Umul8_16,w
  6030  0E6E  00BC               	movwf	___flmul@temp
  6031  0E6F  083C               	movf	___flmul@temp,w
  6032  0E70  00AC               	movwf	??___flmul
  6033  0E71  083D               	movf	___flmul@temp+1,w
  6034  0E72  00AD               	movwf	??___flmul+1
  6035  0E73  01AE               	clrf	??___flmul+2
  6036  0E74  01AF               	clrf	??___flmul+3
  6037  0E75  082C               	movf	??___flmul,w
  6038  0E76  07B8               	addwf	___flmul@prod,f
  6039  0E77  082D               	movf	??___flmul+1,w
  6040  0E78  1103               	clrz
  6041  0E79  1803               	skipnc
  6042  0E7A  3E01               	addlw	1
  6043  0E7B  1903               	skipnz
  6044  0E7C  2E7E               	goto	u4141
  6045  0E7D  07B9               	addwf	___flmul@prod+1,f
  6046  0E7E                     u4141:
  6047  0E7E  082E               	movf	??___flmul+2,w
  6048  0E7F  1103               	clrz
  6049  0E80  1803               	skipnc
  6050  0E81  3E01               	addlw	1
  6051  0E82  1903               	skipnz
  6052  0E83  2E85               	goto	u4142
  6053  0E84  07BA               	addwf	___flmul@prod+2,f
  6054  0E85                     u4142:
  6055  0E85  082F               	movf	??___flmul+3,w
  6056  0E86  1103               	clrz
  6057  0E87  1803               	skipnc
  6058  0E88  3E01               	addlw	1
  6059  0E89  1903               	skipnz
  6060  0E8A  2E8C               	goto	u4143
  6061  0E8B  07BB               	addwf	___flmul@prod+3,f
  6062  0E8C                     u4143:
  6063  0E8C                     l2801:
  6064  0E8C  0826               	movf	___flmul@b+2,w
  6065  0E8D  00AC               	movwf	??___flmul
  6066  0E8E  082C               	movf	??___flmul,w
  6067  0E8F  00F0               	movwf	__Umul8_16@multiplicand
  6068  0E90  0829               	movf	___flmul@a+1,w
  6069  0E91  160A  158A  2398  120A  158A  	fcall	__Umul8_16
  6070  0E96  0871               	movf	?__Umul8_16+1,w
  6071  0E97  1283               	bcf	3,5	;RP0=0, select bank0
  6072  0E98  1303               	bcf	3,6	;RP1=0, select bank0
  6073  0E99  00BD               	movwf	___flmul@temp+1
  6074  0E9A  0870               	movf	?__Umul8_16,w
  6075  0E9B  00BC               	movwf	___flmul@temp
  6076  0E9C                     l2803:
  6077  0E9C  083C               	movf	___flmul@temp,w
  6078  0E9D  00AC               	movwf	??___flmul
  6079  0E9E  083D               	movf	___flmul@temp+1,w
  6080  0E9F  00AD               	movwf	??___flmul+1
  6081  0EA0  01AE               	clrf	??___flmul+2
  6082  0EA1  01AF               	clrf	??___flmul+3
  6083  0EA2  082C               	movf	??___flmul,w
  6084  0EA3  07B8               	addwf	___flmul@prod,f
  6085  0EA4  082D               	movf	??___flmul+1,w
  6086  0EA5  1103               	clrz
  6087  0EA6  1803               	skipnc
  6088  0EA7  3E01               	addlw	1
  6089  0EA8  1903               	skipnz
  6090  0EA9  2EAB               	goto	u4151
  6091  0EAA  07B9               	addwf	___flmul@prod+1,f
  6092  0EAB                     u4151:
  6093  0EAB  082E               	movf	??___flmul+2,w
  6094  0EAC  1103               	clrz
  6095  0EAD  1803               	skipnc
  6096  0EAE  3E01               	addlw	1
  6097  0EAF  1903               	skipnz
  6098  0EB0  2EB2               	goto	u4152
  6099  0EB1  07BA               	addwf	___flmul@prod+2,f
  6100  0EB2                     u4152:
  6101  0EB2  082F               	movf	??___flmul+3,w
  6102  0EB3  1103               	clrz
  6103  0EB4  1803               	skipnc
  6104  0EB5  3E01               	addlw	1
  6105  0EB6  1903               	skipnz
  6106  0EB7  2EB9               	goto	u4153
  6107  0EB8  07BB               	addwf	___flmul@prod+3,f
  6108  0EB9                     u4153:
  6109  0EB9  0826               	movf	___flmul@b+2,w
  6110  0EBA  00AC               	movwf	??___flmul
  6111  0EBB  082C               	movf	??___flmul,w
  6112  0EBC  00F0               	movwf	__Umul8_16@multiplicand
  6113  0EBD  082A               	movf	___flmul@a+2,w
  6114  0EBE  160A  158A  2398  120A  158A  	fcall	__Umul8_16
  6115  0EC3  0871               	movf	?__Umul8_16+1,w
  6116  0EC4  1283               	bcf	3,5	;RP0=0, select bank0
  6117  0EC5  1303               	bcf	3,6	;RP1=0, select bank0
  6118  0EC6  00BD               	movwf	___flmul@temp+1
  6119  0EC7  0870               	movf	?__Umul8_16,w
  6120  0EC8  00BC               	movwf	___flmul@temp
  6121  0EC9                     l2805:
  6122  0EC9  083C               	movf	___flmul@temp,w
  6123  0ECA  00AC               	movwf	??___flmul
  6124  0ECB  083D               	movf	___flmul@temp+1,w
  6125  0ECC  00AD               	movwf	??___flmul+1
  6126  0ECD  01AE               	clrf	??___flmul+2
  6127  0ECE  01AF               	clrf	??___flmul+3
  6128  0ECF  3008               	movlw	8
  6129  0ED0                     u4165:
  6130  0ED0  1003               	clrc
  6131  0ED1  0DAC               	rlf	??___flmul,f
  6132  0ED2  0DAD               	rlf	??___flmul+1,f
  6133  0ED3  0DAE               	rlf	??___flmul+2,f
  6134  0ED4  0DAF               	rlf	??___flmul+3,f
  6135  0ED5                     u4160:
  6136  0ED5  3EFF               	addlw	-1
  6137  0ED6  1D03               	skipz
  6138  0ED7  2ED0               	goto	u4165
  6139  0ED8  082C               	movf	??___flmul,w
  6140  0ED9  07B8               	addwf	___flmul@prod,f
  6141  0EDA  082D               	movf	??___flmul+1,w
  6142  0EDB  1103               	clrz
  6143  0EDC  1803               	skipnc
  6144  0EDD  3E01               	addlw	1
  6145  0EDE  1903               	skipnz
  6146  0EDF  2EE1               	goto	u4171
  6147  0EE0  07B9               	addwf	___flmul@prod+1,f
  6148  0EE1                     u4171:
  6149  0EE1  082E               	movf	??___flmul+2,w
  6150  0EE2  1103               	clrz
  6151  0EE3  1803               	skipnc
  6152  0EE4  3E01               	addlw	1
  6153  0EE5  1903               	skipnz
  6154  0EE6  2EE8               	goto	u4172
  6155  0EE7  07BA               	addwf	___flmul@prod+2,f
  6156  0EE8                     u4172:
  6157  0EE8  082F               	movf	??___flmul+3,w
  6158  0EE9  1103               	clrz
  6159  0EEA  1803               	skipnc
  6160  0EEB  3E01               	addlw	1
  6161  0EEC  1903               	skipnz
  6162  0EED  2EEF               	goto	u4173
  6163  0EEE  07BB               	addwf	___flmul@prod+3,f
  6164  0EEF                     u4173:
  6165  0EEF                     l2807:
  6166  0EEF  0832               	movf	___flmul@grs,w
  6167  0EF0  00AC               	movwf	??___flmul
  6168  0EF1  0833               	movf	___flmul@grs+1,w
  6169  0EF2  00AD               	movwf	??___flmul+1
  6170  0EF3  0834               	movf	___flmul@grs+2,w
  6171  0EF4  00AE               	movwf	??___flmul+2
  6172  0EF5  0835               	movf	___flmul@grs+3,w
  6173  0EF6  00AF               	movwf	??___flmul+3
  6174  0EF7  3018               	movlw	24
  6175  0EF8                     u4185:
  6176  0EF8  1003               	clrc
  6177  0EF9  0CAF               	rrf	??___flmul+3,f
  6178  0EFA  0CAE               	rrf	??___flmul+2,f
  6179  0EFB  0CAD               	rrf	??___flmul+1,f
  6180  0EFC  0CAC               	rrf	??___flmul,f
  6181  0EFD                     u4180:
  6182  0EFD  3EFF               	addlw	-1
  6183  0EFE  1D03               	skipz
  6184  0EFF  2EF8               	goto	u4185
  6185  0F00  082C               	movf	??___flmul,w
  6186  0F01  07B8               	addwf	___flmul@prod,f
  6187  0F02  082D               	movf	??___flmul+1,w
  6188  0F03  1103               	clrz
  6189  0F04  1803               	skipnc
  6190  0F05  3E01               	addlw	1
  6191  0F06  1903               	skipnz
  6192  0F07  2F09               	goto	u4191
  6193  0F08  07B9               	addwf	___flmul@prod+1,f
  6194  0F09                     u4191:
  6195  0F09  082E               	movf	??___flmul+2,w
  6196  0F0A  1103               	clrz
  6197  0F0B  1803               	skipnc
  6198  0F0C  3E01               	addlw	1
  6199  0F0D  1903               	skipnz
  6200  0F0E  2F10               	goto	u4192
  6201  0F0F  07BA               	addwf	___flmul@prod+2,f
  6202  0F10                     u4192:
  6203  0F10  082F               	movf	??___flmul+3,w
  6204  0F11  1103               	clrz
  6205  0F12  1803               	skipnc
  6206  0F13  3E01               	addlw	1
  6207  0F14  1903               	skipnz
  6208  0F15  2F17               	goto	u4193
  6209  0F16  07BB               	addwf	___flmul@prod+3,f
  6210  0F17                     u4193:
  6211  0F17                     l2809:
  6212  0F17  3008               	movlw	8
  6213  0F18  00AC               	movwf	??___flmul
  6214  0F19                     u4205:
  6215  0F19  1003               	clrc
  6216  0F1A  0DB2               	rlf	___flmul@grs,f
  6217  0F1B  0DB3               	rlf	___flmul@grs+1,f
  6218  0F1C  0DB4               	rlf	___flmul@grs+2,f
  6219  0F1D  0DB5               	rlf	___flmul@grs+3,f
  6220  0F1E  0BAC               	decfsz	??___flmul,f
  6221  0F1F  2F19               	goto	u4205
  6222  0F20                     l2811:
  6223  0F20  0837               	movf	___flmul@bexp,w
  6224  0F21  0736               	addwf	___flmul@aexp,w
  6225  0F22  00AC               	movwf	??___flmul
  6226  0F23  01AD               	clrf	??___flmul+1
  6227  0F24  0DAD               	rlf	??___flmul+1,f
  6228  0F25  082C               	movf	??___flmul,w
  6229  0F26  3E82               	addlw	130
  6230  0F27  00BC               	movwf	___flmul@temp
  6231  0F28  082D               	movf	??___flmul+1,w
  6232  0F29  1803               	skipnc
  6233  0F2A  3E01               	addlw	1
  6234  0F2B  3EFF               	addlw	255
  6235  0F2C  00BD               	movwf	___flmul@temp+1
  6236  0F2D  2F4B               	goto	l2823
  6237  0F2E                     l2813:
  6238  0F2E  3001               	movlw	1
  6239  0F2F  00AC               	movwf	??___flmul
  6240  0F30                     u4215:
  6241  0F30  1003               	clrc
  6242  0F31  0DB8               	rlf	___flmul@prod,f
  6243  0F32  0DB9               	rlf	___flmul@prod+1,f
  6244  0F33  0DBA               	rlf	___flmul@prod+2,f
  6245  0F34  0DBB               	rlf	___flmul@prod+3,f
  6246  0F35  0BAC               	decfsz	??___flmul,f
  6247  0F36  2F30               	goto	u4215
  6248  0F37                     l2815:
  6249  0F37  1FB5               	btfss	___flmul@grs+3,7
  6250  0F38  2F3A               	goto	u4221
  6251  0F39  2F3B               	goto	u4220
  6252  0F3A                     u4221:
  6253  0F3A  2F3C               	goto	l2819
  6254  0F3B                     u4220:
  6255  0F3B                     l2817:
  6256  0F3B  1438               	bsf	___flmul@prod,0
  6257  0F3C                     l2819:
  6258  0F3C  3001               	movlw	1
  6259  0F3D  00AC               	movwf	??___flmul
  6260  0F3E                     u4235:
  6261  0F3E  1003               	clrc
  6262  0F3F  0DB2               	rlf	___flmul@grs,f
  6263  0F40  0DB3               	rlf	___flmul@grs+1,f
  6264  0F41  0DB4               	rlf	___flmul@grs+2,f
  6265  0F42  0DB5               	rlf	___flmul@grs+3,f
  6266  0F43  0BAC               	decfsz	??___flmul,f
  6267  0F44  2F3E               	goto	u4235
  6268  0F45                     l2821:
  6269  0F45  30FF               	movlw	255
  6270  0F46  07BC               	addwf	___flmul@temp,f
  6271  0F47  1803               	skipnc
  6272  0F48  0ABD               	incf	___flmul@temp+1,f
  6273  0F49  30FF               	movlw	255
  6274  0F4A  07BD               	addwf	___flmul@temp+1,f
  6275  0F4B                     l2823:
  6276  0F4B  1FBA               	btfss	___flmul@prod+2,7
  6277  0F4C  2F4E               	goto	u4241
  6278  0F4D  2F4F               	goto	u4240
  6279  0F4E                     u4241:
  6280  0F4E  2F2E               	goto	l2813
  6281  0F4F                     u4240:
  6282  0F4F                     l2825:
  6283  0F4F  01B6               	clrf	___flmul@aexp
  6284  0F50                     l2827:
  6285  0F50  1FB5               	btfss	___flmul@grs+3,7
  6286  0F51  2F53               	goto	u4251
  6287  0F52  2F54               	goto	u4250
  6288  0F53                     u4251:
  6289  0F53  2F70               	goto	l2835
  6290  0F54                     u4250:
  6291  0F54                     l2829:
  6292  0F54  30FF               	movlw	255
  6293  0F55  0532               	andwf	___flmul@grs,w
  6294  0F56  00AC               	movwf	??___flmul
  6295  0F57  30FF               	movlw	255
  6296  0F58  0533               	andwf	___flmul@grs+1,w
  6297  0F59  00AD               	movwf	??___flmul+1
  6298  0F5A  30FF               	movlw	255
  6299  0F5B  0534               	andwf	___flmul@grs+2,w
  6300  0F5C  00AE               	movwf	??___flmul+2
  6301  0F5D  307F               	movlw	127
  6302  0F5E  0535               	andwf	___flmul@grs+3,w
  6303  0F5F  00AF               	movwf	??___flmul+3
  6304  0F60  082F               	movf	??___flmul+3,w
  6305  0F61  042E               	iorwf	??___flmul+2,w
  6306  0F62  042D               	iorwf	??___flmul+1,w
  6307  0F63  042C               	iorwf	??___flmul,w
  6308  0F64  1903               	skipnz
  6309  0F65  2F67               	goto	u4261
  6310  0F66  2F68               	goto	u4260
  6311  0F67                     u4261:
  6312  0F67  2F6B               	goto	l743
  6313  0F68                     u4260:
  6314  0F68                     l2831:
  6315  0F68  01B6               	clrf	___flmul@aexp
  6316  0F69  0AB6               	incf	___flmul@aexp,f
  6317  0F6A  2F70               	goto	l2835
  6318  0F6B                     l743:
  6319  0F6B  1C38               	btfss	___flmul@prod,0
  6320  0F6C  2F6E               	goto	u4271
  6321  0F6D  2F6F               	goto	u4270
  6322  0F6E                     u4271:
  6323  0F6E  2F70               	goto	l2835
  6324  0F6F                     u4270:
  6325  0F6F  2F68               	goto	l2831
  6326  0F70                     l2835:
  6327  0F70  0836               	movf	___flmul@aexp,w
  6328  0F71  1903               	btfsc	3,2
  6329  0F72  2F74               	goto	u4281
  6330  0F73  2F75               	goto	u4280
  6331  0F74                     u4281:
  6332  0F74  2FA6               	goto	l2845
  6333  0F75                     u4280:
  6334  0F75                     l2837:
  6335  0F75  3001               	movlw	1
  6336  0F76  07B8               	addwf	___flmul@prod,f
  6337  0F77  3000               	movlw	0
  6338  0F78  1803               	skipnc
  6339  0F79  3001               	movlw	1
  6340  0F7A  07B9               	addwf	___flmul@prod+1,f
  6341  0F7B  3000               	movlw	0
  6342  0F7C  1803               	skipnc
  6343  0F7D  3001               	movlw	1
  6344  0F7E  07BA               	addwf	___flmul@prod+2,f
  6345  0F7F  3000               	movlw	0
  6346  0F80  1803               	skipnc
  6347  0F81  3001               	movlw	1
  6348  0F82  07BB               	addwf	___flmul@prod+3,f
  6349  0F83                     l2839:
  6350  0F83  1C3B               	btfss	___flmul@prod+3,0
  6351  0F84  2F86               	goto	u4291
  6352  0F85  2F87               	goto	u4290
  6353  0F86                     u4291:
  6354  0F86  2FA6               	goto	l2845
  6355  0F87                     u4290:
  6356  0F87                     l2841:
  6357  0F87  0838               	movf	___flmul@prod,w
  6358  0F88  00AC               	movwf	??___flmul
  6359  0F89  0839               	movf	___flmul@prod+1,w
  6360  0F8A  00AD               	movwf	??___flmul+1
  6361  0F8B  083A               	movf	___flmul@prod+2,w
  6362  0F8C  00AE               	movwf	??___flmul+2
  6363  0F8D  083B               	movf	___flmul@prod+3,w
  6364  0F8E  00AF               	movwf	??___flmul+3
  6365  0F8F  3001               	movlw	1
  6366  0F90  00B0               	movwf	??___flmul+4
  6367  0F91                     u4305:
  6368  0F91  0D2F               	rlf	??___flmul+3,w
  6369  0F92  0CAF               	rrf	??___flmul+3,f
  6370  0F93  0CAE               	rrf	??___flmul+2,f
  6371  0F94  0CAD               	rrf	??___flmul+1,f
  6372  0F95  0CAC               	rrf	??___flmul,f
  6373  0F96                     u4300:
  6374  0F96  0BB0               	decfsz	??___flmul+4,f
  6375  0F97  2F91               	goto	u4305
  6376  0F98  082F               	movf	??___flmul+3,w
  6377  0F99  00BB               	movwf	___flmul@prod+3
  6378  0F9A  082E               	movf	??___flmul+2,w
  6379  0F9B  00BA               	movwf	___flmul@prod+2
  6380  0F9C  082D               	movf	??___flmul+1,w
  6381  0F9D  00B9               	movwf	___flmul@prod+1
  6382  0F9E  082C               	movf	??___flmul,w
  6383  0F9F  00B8               	movwf	___flmul@prod
  6384  0FA0                     l2843:
  6385  0FA0  3001               	movlw	1
  6386  0FA1  07BC               	addwf	___flmul@temp,f
  6387  0FA2  1803               	skipnc
  6388  0FA3  0ABD               	incf	___flmul@temp+1,f
  6389  0FA4  3000               	movlw	0
  6390  0FA5  07BD               	addwf	___flmul@temp+1,f
  6391  0FA6                     l2845:
  6392  0FA6  083D               	movf	___flmul@temp+1,w
  6393  0FA7  3A80               	xorlw	128
  6394  0FA8  00FF               	movwf	btemp+1
  6395  0FA9  3080               	movlw	128
  6396  0FAA  027F               	subwf	btemp+1,w
  6397  0FAB  1D03               	skipz
  6398  0FAC  2FAF               	goto	u4315
  6399  0FAD  30FF               	movlw	255
  6400  0FAE  023C               	subwf	___flmul@temp,w
  6401  0FAF                     u4315:
  6402  0FAF  1C03               	skipc
  6403  0FB0  2FB2               	goto	u4311
  6404  0FB1  2FB3               	goto	u4310
  6405  0FB2                     u4311:
  6406  0FB2  2FBE               	goto	l2849
  6407  0FB3                     u4310:
  6408  0FB3                     l2847:
  6409  0FB3  307F               	movlw	127
  6410  0FB4  1283               	bcf	3,5	;RP0=0, select bank0
  6411  0FB5  1303               	bcf	3,6	;RP1=0, select bank0
  6412  0FB6  00BB               	movwf	___flmul@prod+3
  6413  0FB7  3080               	movlw	128
  6414  0FB8  00BA               	movwf	___flmul@prod+2
  6415  0FB9  3000               	movlw	0
  6416  0FBA  00B9               	movwf	___flmul@prod+1
  6417  0FBB  3000               	movlw	0
  6418  0FBC  00B8               	movwf	___flmul@prod
  6419  0FBD  2FF3               	goto	l749
  6420  0FBE                     l2849:
  6421  0FBE  1283               	bcf	3,5	;RP0=0, select bank0
  6422  0FBF  1303               	bcf	3,6	;RP1=0, select bank0
  6423  0FC0  083D               	movf	___flmul@temp+1,w
  6424  0FC1  3A80               	xorlw	128
  6425  0FC2  00FF               	movwf	btemp+1
  6426  0FC3  3080               	movlw	128
  6427  0FC4  027F               	subwf	btemp+1,w
  6428  0FC5  1D03               	skipz
  6429  0FC6  2FC9               	goto	u4325
  6430  0FC7  3001               	movlw	1
  6431  0FC8  023C               	subwf	___flmul@temp,w
  6432  0FC9                     u4325:
  6433  0FC9  1803               	skipnc
  6434  0FCA  2FCC               	goto	u4321
  6435  0FCB  2FCD               	goto	u4320
  6436  0FCC                     u4321:
  6437  0FCC  2FD9               	goto	l2855
  6438  0FCD                     u4320:
  6439  0FCD                     l2851:
  6440  0FCD  3000               	movlw	0
  6441  0FCE  1283               	bcf	3,5	;RP0=0, select bank0
  6442  0FCF  1303               	bcf	3,6	;RP1=0, select bank0
  6443  0FD0  00BB               	movwf	___flmul@prod+3
  6444  0FD1  3000               	movlw	0
  6445  0FD2  00BA               	movwf	___flmul@prod+2
  6446  0FD3  3000               	movlw	0
  6447  0FD4  00B9               	movwf	___flmul@prod+1
  6448  0FD5  3000               	movlw	0
  6449  0FD6  00B8               	movwf	___flmul@prod
  6450  0FD7                     l2853:
  6451  0FD7  01B1               	clrf	___flmul@sign
  6452  0FD8  2FF3               	goto	l749
  6453  0FD9                     l2855:
  6454  0FD9  1283               	bcf	3,5	;RP0=0, select bank0
  6455  0FDA  1303               	bcf	3,6	;RP1=0, select bank0
  6456  0FDB  083C               	movf	___flmul@temp,w
  6457  0FDC  00AC               	movwf	??___flmul
  6458  0FDD  082C               	movf	??___flmul,w
  6459  0FDE  00B7               	movwf	___flmul@bexp
  6460  0FDF  30FF               	movlw	255
  6461  0FE0  05B8               	andwf	___flmul@prod,f
  6462  0FE1  30FF               	movlw	255
  6463  0FE2  05B9               	andwf	___flmul@prod+1,f
  6464  0FE3  307F               	movlw	127
  6465  0FE4  05BA               	andwf	___flmul@prod+2,f
  6466  0FE5  3000               	movlw	0
  6467  0FE6  05BB               	andwf	___flmul@prod+3,f
  6468  0FE7                     l2857:
  6469  0FE7  1C37               	btfss	___flmul@bexp,0
  6470  0FE8  2FEA               	goto	u4331
  6471  0FE9  2FEB               	goto	u4330
  6472  0FEA                     u4331:
  6473  0FEA  2FEC               	goto	l2861
  6474  0FEB                     u4330:
  6475  0FEB                     l2859:
  6476  0FEB  17BA               	bsf	___flmul@prod+2,7
  6477  0FEC                     l2861:
  6478  0FEC  0837               	movf	___flmul@bexp,w
  6479  0FED  00AC               	movwf	??___flmul
  6480  0FEE  1003               	clrc
  6481  0FEF  0C2C               	rrf	??___flmul,w
  6482  0FF0  00AD               	movwf	??___flmul+1
  6483  0FF1  082D               	movf	??___flmul+1,w
  6484  0FF2  00BB               	movwf	___flmul@prod+3
  6485  0FF3                     l749:
  6486  0FF3  0831               	movf	___flmul@sign,w
  6487  0FF4  00AC               	movwf	??___flmul
  6488  0FF5  082C               	movf	??___flmul,w
  6489  0FF6  04BB               	iorwf	___flmul@prod+3,f
  6490  0FF7                     l2863:
  6491  0FF7  083B               	movf	___flmul@prod+3,w
  6492  0FF8  00A7               	movwf	?___flmul+3
  6493  0FF9  083A               	movf	___flmul@prod+2,w
  6494  0FFA  00A6               	movwf	?___flmul+2
  6495  0FFB  0839               	movf	___flmul@prod+1,w
  6496  0FFC  00A5               	movwf	?___flmul+1
  6497  0FFD  0838               	movf	___flmul@prod,w
  6498  0FFE  00A4               	movwf	?___flmul
  6499  0FFF                     l737:
  6500  0FFF  0008               	return
  6501  1000                     __end_of___flmul:
  6502                           
  6503                           	psect	text10
  6504  1B98                     __ptext10:	
  6505 ;; *************** function __Umul8_16 *****************
  6506 ;; Defined at:
  6507 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8_16.c"
  6508 ;; Parameters:    Size  Location     Type
  6509 ;;  multiplier      1    wreg     unsigned char 
  6510 ;;  multiplicand    1    0[COMMON] unsigned char 
  6511 ;; Auto vars:     Size  Location     Type
  6512 ;;  multiplier      1    8[COMMON] unsigned char 
  6513 ;;  word_mpld       2    6[COMMON] unsigned int 
  6514 ;;  product         2    4[COMMON] unsigned int 
  6515 ;; Return value:  Size  Location     Type
  6516 ;;                  2    0[COMMON] unsigned int 
  6517 ;; Registers used:
  6518 ;;		wreg, status,2, status,0
  6519 ;; Tracked objects:
  6520 ;;		On entry : 0/0
  6521 ;;		On exit  : 0/0
  6522 ;;		Unchanged: 0/0
  6523 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6524 ;;      Params:         2       0       0       0       0
  6525 ;;      Locals:         5       0       0       0       0
  6526 ;;      Temps:          2       0       0       0       0
  6527 ;;      Totals:         9       0       0       0       0
  6528 ;;Total ram usage:        9 bytes
  6529 ;; Hardware stack levels used:    1
  6530 ;; This function calls:
  6531 ;;		Nothing
  6532 ;; This function is called by:
  6533 ;;		___flmul
  6534 ;; This function uses a non-reentrant model
  6535 ;;
  6536                           
  6537                           
  6538                           ;psect for function __Umul8_16
  6539  1B98                     __Umul8_16:
  6540                           
  6541                           ;incstack = 0
  6542                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  6543                           ;__Umul8_16@multiplier stored from wreg
  6544  1B98  00F8               	movwf	__Umul8_16@multiplier
  6545  1B99                     l2357:
  6546  1B99  01F4               	clrf	__Umul8_16@product
  6547  1B9A  01F5               	clrf	__Umul8_16@product+1
  6548  1B9B                     l2359:
  6549  1B9B  0870               	movf	__Umul8_16@multiplicand,w
  6550  1B9C  00F2               	movwf	??__Umul8_16
  6551  1B9D  01F3               	clrf	??__Umul8_16+1
  6552  1B9E  0872               	movf	??__Umul8_16,w
  6553  1B9F  00F6               	movwf	__Umul8_16@word_mpld
  6554  1BA0  0873               	movf	??__Umul8_16+1,w
  6555  1BA1  00F7               	movwf	__Umul8_16@word_mpld+1
  6556  1BA2                     l2361:
  6557  1BA2  1C78               	btfss	__Umul8_16@multiplier,0
  6558  1BA3  2BA5               	goto	u3141
  6559  1BA4  2BA6               	goto	u3140
  6560  1BA5                     u3141:
  6561  1BA5  2BAC               	goto	l756
  6562  1BA6                     u3140:
  6563  1BA6                     l2363:
  6564  1BA6  0876               	movf	__Umul8_16@word_mpld,w
  6565  1BA7  07F4               	addwf	__Umul8_16@product,f
  6566  1BA8  1803               	skipnc
  6567  1BA9  0AF5               	incf	__Umul8_16@product+1,f
  6568  1BAA  0877               	movf	__Umul8_16@word_mpld+1,w
  6569  1BAB  07F5               	addwf	__Umul8_16@product+1,f
  6570  1BAC                     l756:
  6571  1BAC  3001               	movlw	1
  6572  1BAD                     u3155:
  6573  1BAD  1003               	clrc
  6574  1BAE  0DF6               	rlf	__Umul8_16@word_mpld,f
  6575  1BAF  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  6576  1BB0  3EFF               	addlw	-1
  6577  1BB1  1D03               	skipz
  6578  1BB2  2BAD               	goto	u3155
  6579  1BB3  1003               	clrc
  6580  1BB4  0CF8               	rrf	__Umul8_16@multiplier,f
  6581  1BB5                     l2365:
  6582  1BB5  0878               	movf	__Umul8_16@multiplier,w
  6583  1BB6  1D03               	btfss	3,2
  6584  1BB7  2BB9               	goto	u3161
  6585  1BB8  2BBA               	goto	u3160
  6586  1BB9                     u3161:
  6587  1BB9  2BA2               	goto	l2361
  6588  1BBA                     u3160:
  6589  1BBA                     l2367:
  6590  1BBA  0875               	movf	__Umul8_16@product+1,w
  6591  1BBB  00F1               	movwf	?__Umul8_16+1
  6592  1BBC  0874               	movf	__Umul8_16@product,w
  6593  1BBD  00F0               	movwf	?__Umul8_16
  6594  1BBE                     l758:
  6595  1BBE  0008               	return
  6596  1BBF                     __end_of__Umul8_16:
  6597                           
  6598                           	psect	text11
  6599  10CD                     __ptext11:	
  6600 ;; *************** function __tdiv_to_l_ *****************
  6601 ;; Defined at:
  6602 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\ftdivl.c"
  6603 ;; Parameters:    Size  Location     Type
  6604 ;;  f1              4    0[COMMON] float 
  6605 ;;  f2              4    4[COMMON] float 
  6606 ;; Auto vars:     Size  Location     Type
  6607 ;;  quot            4    0[BANK0 ] unsigned long 
  6608 ;;  exp1            1    5[BANK0 ] unsigned char 
  6609 ;;  cntr            1    4[BANK0 ] unsigned char 
  6610 ;; Return value:  Size  Location     Type
  6611 ;;                  4    0[COMMON] unsigned long 
  6612 ;; Registers used:
  6613 ;;		wreg, status,2, status,0
  6614 ;; Tracked objects:
  6615 ;;		On entry : 0/0
  6616 ;;		On exit  : 0/0
  6617 ;;		Unchanged: 0/0
  6618 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6619 ;;      Params:         8       0       0       0       0
  6620 ;;      Locals:         0       6       0       0       0
  6621 ;;      Temps:          4       0       0       0       0
  6622 ;;      Totals:        12       6       0       0       0
  6623 ;;Total ram usage:       18 bytes
  6624 ;; Hardware stack levels used:    1
  6625 ;; This function calls:
  6626 ;;		Nothing
  6627 ;; This function is called by:
  6628 ;;		_sprintf
  6629 ;; This function uses a non-reentrant model
  6630 ;;
  6631                           
  6632                           
  6633                           ;psect for function __tdiv_to_l_
  6634  10CD                     __tdiv_to_l_:
  6635  10CD                     l2951:	
  6636                           ;incstack = 0
  6637                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  6638                           
  6639  10CD  0870               	movf	__tdiv_to_l_@f1,w
  6640  10CE  00F8               	movwf	??__tdiv_to_l_
  6641  10CF  0871               	movf	__tdiv_to_l_@f1+1,w
  6642  10D0  00F9               	movwf	??__tdiv_to_l_+1
  6643  10D1  0872               	movf	__tdiv_to_l_@f1+2,w
  6644  10D2  00FA               	movwf	??__tdiv_to_l_+2
  6645  10D3  1003               	clrc
  6646  10D4  0D79               	rlf	??__tdiv_to_l_+1,w
  6647  10D5  0D7A               	rlf	??__tdiv_to_l_+2,w
  6648  10D6  00FB               	movwf	??__tdiv_to_l_+3
  6649  10D7  087B               	movf	??__tdiv_to_l_+3,w
  6650  10D8  1283               	bcf	3,5	;RP0=0, select bank0
  6651  10D9  1303               	bcf	3,6	;RP1=0, select bank0
  6652  10DA  00A5               	movwf	__tdiv_to_l_@exp1
  6653  10DB  0825               	movf	__tdiv_to_l_@exp1,w
  6654  10DC  1D03               	btfss	3,2
  6655  10DD  28DF               	goto	u4611
  6656  10DE  28E0               	goto	u4610
  6657  10DF                     u4611:
  6658  10DF  28E9               	goto	l2957
  6659  10E0                     u4610:
  6660  10E0                     l2953:
  6661  10E0  3000               	movlw	0
  6662  10E1  00F3               	movwf	?__tdiv_to_l_+3
  6663  10E2  3000               	movlw	0
  6664  10E3  00F2               	movwf	?__tdiv_to_l_+2
  6665  10E4  3000               	movlw	0
  6666  10E5  00F1               	movwf	?__tdiv_to_l_+1
  6667  10E6  3000               	movlw	0
  6668  10E7  00F0               	movwf	?__tdiv_to_l_
  6669  10E8  2989               	goto	l531
  6670  10E9                     l2957:
  6671  10E9  0874               	movf	__tdiv_to_l_@f2,w
  6672  10EA  00F8               	movwf	??__tdiv_to_l_
  6673  10EB  0875               	movf	__tdiv_to_l_@f2+1,w
  6674  10EC  00F9               	movwf	??__tdiv_to_l_+1
  6675  10ED  0876               	movf	__tdiv_to_l_@f2+2,w
  6676  10EE  00FA               	movwf	??__tdiv_to_l_+2
  6677  10EF  1003               	clrc
  6678  10F0  0D79               	rlf	??__tdiv_to_l_+1,w
  6679  10F1  0D7A               	rlf	??__tdiv_to_l_+2,w
  6680  10F2  00FB               	movwf	??__tdiv_to_l_+3
  6681  10F3  087B               	movf	??__tdiv_to_l_+3,w
  6682  10F4  00A4               	movwf	__tdiv_to_l_@cntr
  6683  10F5  0824               	movf	__tdiv_to_l_@cntr,w
  6684  10F6  1D03               	btfss	3,2
  6685  10F7  28F9               	goto	u4621
  6686  10F8  28FA               	goto	u4620
  6687  10F9                     u4621:
  6688  10F9  28FB               	goto	l532
  6689  10FA                     u4620:
  6690  10FA  28E0               	goto	l2953
  6691  10FB                     l532:
  6692  10FB  17F1               	bsf	__tdiv_to_l_@f1+1,7
  6693  10FC                     l2963:
  6694  10FC  30FF               	movlw	255
  6695  10FD  05F0               	andwf	__tdiv_to_l_@f1,f
  6696  10FE  30FF               	movlw	255
  6697  10FF  05F1               	andwf	__tdiv_to_l_@f1+1,f
  6698  1100  3000               	movlw	0
  6699  1101  05F2               	andwf	__tdiv_to_l_@f1+2,f
  6700  1102                     l2965:
  6701  1102  17F5               	bsf	__tdiv_to_l_@f2+1,7
  6702  1103  30FF               	movlw	255
  6703  1104  05F4               	andwf	__tdiv_to_l_@f2,f
  6704  1105  30FF               	movlw	255
  6705  1106  05F5               	andwf	__tdiv_to_l_@f2+1,f
  6706  1107  3000               	movlw	0
  6707  1108  05F6               	andwf	__tdiv_to_l_@f2+2,f
  6708  1109  3000               	movlw	0
  6709  110A  00A3               	movwf	__tdiv_to_l_@quot+3
  6710  110B  3000               	movlw	0
  6711  110C  00A2               	movwf	__tdiv_to_l_@quot+2
  6712  110D  3000               	movlw	0
  6713  110E  00A1               	movwf	__tdiv_to_l_@quot+1
  6714  110F  3000               	movlw	0
  6715  1110  00A0               	movwf	__tdiv_to_l_@quot
  6716  1111                     l2967:
  6717  1111  307F               	movlw	127
  6718  1112  02A5               	subwf	__tdiv_to_l_@exp1,f
  6719  1113                     l2969:
  6720  1113  3098               	movlw	152
  6721  1114  0724               	addwf	__tdiv_to_l_@cntr,w
  6722  1115  00F8               	movwf	??__tdiv_to_l_
  6723  1116  0878               	movf	??__tdiv_to_l_,w
  6724  1117  02A5               	subwf	__tdiv_to_l_@exp1,f
  6725  1118  3018               	movlw	24
  6726  1119  00F8               	movwf	??__tdiv_to_l_
  6727  111A  0878               	movf	??__tdiv_to_l_,w
  6728  111B  00A4               	movwf	__tdiv_to_l_@cntr
  6729  111C                     l2971:
  6730  111C  3001               	movlw	1
  6731  111D  00F8               	movwf	??__tdiv_to_l_
  6732  111E                     u4635:
  6733  111E  1003               	clrc
  6734  111F  0DA0               	rlf	__tdiv_to_l_@quot,f
  6735  1120  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  6736  1121  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  6737  1122  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  6738  1123  0BF8               	decfsz	??__tdiv_to_l_,f
  6739  1124  291E               	goto	u4635
  6740  1125                     l2973:
  6741  1125  0876               	movf	__tdiv_to_l_@f2+2,w
  6742  1126  0272               	subwf	__tdiv_to_l_@f1+2,w
  6743  1127  1D03               	skipz
  6744  1128  292F               	goto	u4645
  6745  1129  0875               	movf	__tdiv_to_l_@f2+1,w
  6746  112A  0271               	subwf	__tdiv_to_l_@f1+1,w
  6747  112B  1D03               	skipz
  6748  112C  292F               	goto	u4645
  6749  112D  0874               	movf	__tdiv_to_l_@f2,w
  6750  112E  0270               	subwf	__tdiv_to_l_@f1,w
  6751  112F                     u4645:
  6752  112F  1C03               	skipc
  6753  1130  2932               	goto	u4641
  6754  1131  2933               	goto	u4640
  6755  1132                     u4641:
  6756  1132  293E               	goto	l2979
  6757  1133                     u4640:
  6758  1133                     l2975:
  6759  1133  0874               	movf	__tdiv_to_l_@f2,w
  6760  1134  02F0               	subwf	__tdiv_to_l_@f1,f
  6761  1135  0875               	movf	__tdiv_to_l_@f2+1,w
  6762  1136  1C03               	skipc
  6763  1137  0F75               	incfsz	__tdiv_to_l_@f2+1,w
  6764  1138  02F1               	subwf	__tdiv_to_l_@f1+1,f
  6765  1139  0876               	movf	__tdiv_to_l_@f2+2,w
  6766  113A  1C03               	skipc
  6767  113B  0A76               	incf	__tdiv_to_l_@f2+2,w
  6768  113C  02F2               	subwf	__tdiv_to_l_@f1+2,f
  6769  113D                     l2977:
  6770  113D  1420               	bsf	__tdiv_to_l_@quot,0
  6771  113E                     l2979:
  6772  113E  3001               	movlw	1
  6773  113F                     u4655:
  6774  113F  1003               	clrc
  6775  1140  0DF0               	rlf	__tdiv_to_l_@f1,f
  6776  1141  0DF1               	rlf	__tdiv_to_l_@f1+1,f
  6777  1142  0DF2               	rlf	__tdiv_to_l_@f1+2,f
  6778  1143  3EFF               	addlw	-1
  6779  1144  1D03               	skipz
  6780  1145  293F               	goto	u4655
  6781  1146                     l2981:
  6782  1146  3001               	movlw	1
  6783  1147  02A4               	subwf	__tdiv_to_l_@cntr,f
  6784  1148  1D03               	btfss	3,2
  6785  1149  294B               	goto	u4661
  6786  114A  294C               	goto	u4660
  6787  114B                     u4661:
  6788  114B  291C               	goto	l2971
  6789  114C                     u4660:
  6790  114C                     l535:
  6791  114C  1FA5               	btfss	__tdiv_to_l_@exp1,7
  6792  114D  294F               	goto	u4671
  6793  114E  2950               	goto	u4670
  6794  114F                     u4671:
  6795  114F  296A               	goto	l2991
  6796  1150                     u4670:
  6797  1150                     l2983:
  6798  1150  0825               	movf	__tdiv_to_l_@exp1,w
  6799  1151  3A80               	xorlw	128
  6800  1152  3E97               	addlw	151
  6801  1153  1803               	skipnc
  6802  1154  2956               	goto	u4681
  6803  1155  2957               	goto	u4680
  6804  1156                     u4681:
  6805  1156  2958               	goto	l2989
  6806  1157                     u4680:
  6807  1157  28E0               	goto	l2953
  6808  1158                     l2989:
  6809  1158  3001               	movlw	1
  6810  1159                     u4695:
  6811  1159  1003               	clrc
  6812  115A  0CA3               	rrf	__tdiv_to_l_@quot+3,f
  6813  115B  0CA2               	rrf	__tdiv_to_l_@quot+2,f
  6814  115C  0CA1               	rrf	__tdiv_to_l_@quot+1,f
  6815  115D  0CA0               	rrf	__tdiv_to_l_@quot,f
  6816  115E  3EFF               	addlw	-1
  6817  115F  1D03               	skipz
  6818  1160  2959               	goto	u4695
  6819  1161  3001               	movlw	1
  6820  1162  00F8               	movwf	??__tdiv_to_l_
  6821  1163  0878               	movf	??__tdiv_to_l_,w
  6822  1164  07A5               	addwf	__tdiv_to_l_@exp1,f
  6823  1165  1D03               	btfss	3,2
  6824  1166  2968               	goto	u4701
  6825  1167  2969               	goto	u4700
  6826  1168                     u4701:
  6827  1168  2958               	goto	l2989
  6828  1169                     u4700:
  6829  1169  2981               	goto	l2999
  6830  116A                     l2991:
  6831  116A  3018               	movlw	24
  6832  116B  0225               	subwf	__tdiv_to_l_@exp1,w
  6833  116C  1C03               	skipc
  6834  116D  296F               	goto	u4711
  6835  116E  2970               	goto	u4710
  6836  116F                     u4711:
  6837  116F  297C               	goto	l542
  6838  1170                     u4710:
  6839  1170  28E0               	goto	l2953
  6840  1171                     l2997:
  6841  1171  3001               	movlw	1
  6842  1172  00F8               	movwf	??__tdiv_to_l_
  6843  1173                     u4725:
  6844  1173  1003               	clrc
  6845  1174  0DA0               	rlf	__tdiv_to_l_@quot,f
  6846  1175  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  6847  1176  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  6848  1177  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  6849  1178  0BF8               	decfsz	??__tdiv_to_l_,f
  6850  1179  2973               	goto	u4725
  6851  117A  3001               	movlw	1
  6852  117B  02A5               	subwf	__tdiv_to_l_@exp1,f
  6853  117C                     l542:
  6854  117C  0825               	movf	__tdiv_to_l_@exp1,w
  6855  117D  1D03               	btfss	3,2
  6856  117E  2980               	goto	u4731
  6857  117F  2981               	goto	u4730
  6858  1180                     u4731:
  6859  1180  2971               	goto	l2997
  6860  1181                     u4730:
  6861  1181                     l2999:
  6862  1181  0823               	movf	__tdiv_to_l_@quot+3,w
  6863  1182  00F3               	movwf	?__tdiv_to_l_+3
  6864  1183  0822               	movf	__tdiv_to_l_@quot+2,w
  6865  1184  00F2               	movwf	?__tdiv_to_l_+2
  6866  1185  0821               	movf	__tdiv_to_l_@quot+1,w
  6867  1186  00F1               	movwf	?__tdiv_to_l_+1
  6868  1187  0820               	movf	__tdiv_to_l_@quot,w
  6869  1188  00F0               	movwf	?__tdiv_to_l_
  6870  1189                     l531:
  6871  1189  0008               	return
  6872  118A                     __end_of__tdiv_to_l_:
  6873                           
  6874                           	psect	text12
  6875  0882                     __ptext12:	
  6876 ;; *************** function __div_to_l_ *****************
  6877 ;; Defined at:
  6878 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fldivl.c"
  6879 ;; Parameters:    Size  Location     Type
  6880 ;;  f1              4    0[COMMON] unsigned long 
  6881 ;;  f2              4    4[COMMON] unsigned long 
  6882 ;; Auto vars:     Size  Location     Type
  6883 ;;  quot            4    0[BANK0 ] unsigned long 
  6884 ;;  exp1            1    5[BANK0 ] unsigned char 
  6885 ;;  cntr            1    4[BANK0 ] unsigned char 
  6886 ;; Return value:  Size  Location     Type
  6887 ;;                  4    0[COMMON] unsigned long 
  6888 ;; Registers used:
  6889 ;;		wreg, status,2, status,0
  6890 ;; Tracked objects:
  6891 ;;		On entry : 0/0
  6892 ;;		On exit  : 0/0
  6893 ;;		Unchanged: 0/0
  6894 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6895 ;;      Params:         8       0       0       0       0
  6896 ;;      Locals:         0       6       0       0       0
  6897 ;;      Temps:          1       0       0       0       0
  6898 ;;      Totals:         9       6       0       0       0
  6899 ;;Total ram usage:       15 bytes
  6900 ;; Hardware stack levels used:    1
  6901 ;; This function calls:
  6902 ;;		Nothing
  6903 ;; This function is called by:
  6904 ;;		_sprintf
  6905 ;; This function uses a non-reentrant model
  6906 ;;
  6907                           
  6908                           
  6909                           ;psect for function __div_to_l_
  6910  0882                     __div_to_l_:
  6911  0882                     l3003:	
  6912                           ;incstack = 0
  6913                           ; Regs used in __div_to_l_: [wreg+status,2+status,0]
  6914                           
  6915  0882  1003               	clrc
  6916  0883  0D72               	rlf	__div_to_l_@f1+2,w
  6917  0884  0D73               	rlf	__div_to_l_@f1+3,w
  6918  0885  00F8               	movwf	??__div_to_l_
  6919  0886  0878               	movf	??__div_to_l_,w
  6920  0887  1283               	bcf	3,5	;RP0=0, select bank0
  6921  0888  1303               	bcf	3,6	;RP1=0, select bank0
  6922  0889  00A5               	movwf	__div_to_l_@exp1
  6923  088A  0825               	movf	__div_to_l_@exp1,w
  6924  088B  1D03               	btfss	3,2
  6925  088C  288E               	goto	u4741
  6926  088D  288F               	goto	u4740
  6927  088E                     u4741:
  6928  088E  2898               	goto	l3009
  6929  088F                     u4740:
  6930  088F                     l3005:
  6931  088F  3000               	movlw	0
  6932  0890  00F3               	movwf	?__div_to_l_+3
  6933  0891  3000               	movlw	0
  6934  0892  00F2               	movwf	?__div_to_l_+2
  6935  0893  3000               	movlw	0
  6936  0894  00F1               	movwf	?__div_to_l_+1
  6937  0895  3000               	movlw	0
  6938  0896  00F0               	movwf	?__div_to_l_
  6939  0897  293F               	goto	l484
  6940  0898                     l3009:
  6941  0898  1003               	clrc
  6942  0899  0D76               	rlf	__div_to_l_@f2+2,w
  6943  089A  0D77               	rlf	__div_to_l_@f2+3,w
  6944  089B  00F8               	movwf	??__div_to_l_
  6945  089C  0878               	movf	??__div_to_l_,w
  6946  089D  00A4               	movwf	__div_to_l_@cntr
  6947  089E  0824               	movf	__div_to_l_@cntr,w
  6948  089F  1D03               	btfss	3,2
  6949  08A0  28A2               	goto	u4751
  6950  08A1  28A3               	goto	u4750
  6951  08A2                     u4751:
  6952  08A2  28A4               	goto	l485
  6953  08A3                     u4750:
  6954  08A3  288F               	goto	l3005
  6955  08A4                     l485:
  6956  08A4  17F2               	bsf	__div_to_l_@f1+2,7
  6957  08A5                     l3015:
  6958  08A5  30FF               	movlw	255
  6959  08A6  05F0               	andwf	__div_to_l_@f1,f
  6960  08A7  30FF               	movlw	255
  6961  08A8  05F1               	andwf	__div_to_l_@f1+1,f
  6962  08A9  30FF               	movlw	255
  6963  08AA  05F2               	andwf	__div_to_l_@f1+2,f
  6964  08AB  3000               	movlw	0
  6965  08AC  05F3               	andwf	__div_to_l_@f1+3,f
  6966  08AD                     l3017:
  6967  08AD  17F6               	bsf	__div_to_l_@f2+2,7
  6968  08AE  30FF               	movlw	255
  6969  08AF  05F4               	andwf	__div_to_l_@f2,f
  6970  08B0  30FF               	movlw	255
  6971  08B1  05F5               	andwf	__div_to_l_@f2+1,f
  6972  08B2  30FF               	movlw	255
  6973  08B3  05F6               	andwf	__div_to_l_@f2+2,f
  6974  08B4  3000               	movlw	0
  6975  08B5  05F7               	andwf	__div_to_l_@f2+3,f
  6976  08B6  3000               	movlw	0
  6977  08B7  00A3               	movwf	__div_to_l_@quot+3
  6978  08B8  3000               	movlw	0
  6979  08B9  00A2               	movwf	__div_to_l_@quot+2
  6980  08BA  3000               	movlw	0
  6981  08BB  00A1               	movwf	__div_to_l_@quot+1
  6982  08BC  3000               	movlw	0
  6983  08BD  00A0               	movwf	__div_to_l_@quot
  6984  08BE                     l3019:
  6985  08BE  307F               	movlw	127
  6986  08BF  02A5               	subwf	__div_to_l_@exp1,f
  6987  08C0                     l3021:
  6988  08C0  30A0               	movlw	160
  6989  08C1  0724               	addwf	__div_to_l_@cntr,w
  6990  08C2  00F8               	movwf	??__div_to_l_
  6991  08C3  0878               	movf	??__div_to_l_,w
  6992  08C4  02A5               	subwf	__div_to_l_@exp1,f
  6993  08C5  3020               	movlw	32
  6994  08C6  00F8               	movwf	??__div_to_l_
  6995  08C7  0878               	movf	??__div_to_l_,w
  6996  08C8  00A4               	movwf	__div_to_l_@cntr
  6997  08C9                     l3023:
  6998  08C9  3001               	movlw	1
  6999  08CA  00F8               	movwf	??__div_to_l_
  7000  08CB                     u4765:
  7001  08CB  1003               	clrc
  7002  08CC  0DA0               	rlf	__div_to_l_@quot,f
  7003  08CD  0DA1               	rlf	__div_to_l_@quot+1,f
  7004  08CE  0DA2               	rlf	__div_to_l_@quot+2,f
  7005  08CF  0DA3               	rlf	__div_to_l_@quot+3,f
  7006  08D0  0BF8               	decfsz	??__div_to_l_,f
  7007  08D1  28CB               	goto	u4765
  7008  08D2                     l3025:
  7009  08D2  0877               	movf	__div_to_l_@f2+3,w
  7010  08D3  0273               	subwf	__div_to_l_@f1+3,w
  7011  08D4  1D03               	skipz
  7012  08D5  28E0               	goto	u4775
  7013  08D6  0876               	movf	__div_to_l_@f2+2,w
  7014  08D7  0272               	subwf	__div_to_l_@f1+2,w
  7015  08D8  1D03               	skipz
  7016  08D9  28E0               	goto	u4775
  7017  08DA  0875               	movf	__div_to_l_@f2+1,w
  7018  08DB  0271               	subwf	__div_to_l_@f1+1,w
  7019  08DC  1D03               	skipz
  7020  08DD  28E0               	goto	u4775
  7021  08DE  0874               	movf	__div_to_l_@f2,w
  7022  08DF  0270               	subwf	__div_to_l_@f1,w
  7023  08E0                     u4775:
  7024  08E0  1C03               	skipc
  7025  08E1  28E3               	goto	u4771
  7026  08E2  28E4               	goto	u4770
  7027  08E3                     u4771:
  7028  08E3  28F3               	goto	l3031
  7029  08E4                     u4770:
  7030  08E4                     l3027:
  7031  08E4  0874               	movf	__div_to_l_@f2,w
  7032  08E5  02F0               	subwf	__div_to_l_@f1,f
  7033  08E6  0875               	movf	__div_to_l_@f2+1,w
  7034  08E7  1C03               	skipc
  7035  08E8  0F75               	incfsz	__div_to_l_@f2+1,w
  7036  08E9  02F1               	subwf	__div_to_l_@f1+1,f
  7037  08EA  0876               	movf	__div_to_l_@f2+2,w
  7038  08EB  1C03               	skipc
  7039  08EC  0F76               	incfsz	__div_to_l_@f2+2,w
  7040  08ED  02F2               	subwf	__div_to_l_@f1+2,f
  7041  08EE  0877               	movf	__div_to_l_@f2+3,w
  7042  08EF  1C03               	skipc
  7043  08F0  0F77               	incfsz	__div_to_l_@f2+3,w
  7044  08F1  02F3               	subwf	__div_to_l_@f1+3,f
  7045  08F2                     l3029:
  7046  08F2  1420               	bsf	__div_to_l_@quot,0
  7047  08F3                     l3031:
  7048  08F3  3001               	movlw	1
  7049  08F4  00F8               	movwf	??__div_to_l_
  7050  08F5                     u4785:
  7051  08F5  1003               	clrc
  7052  08F6  0DF0               	rlf	__div_to_l_@f1,f
  7053  08F7  0DF1               	rlf	__div_to_l_@f1+1,f
  7054  08F8  0DF2               	rlf	__div_to_l_@f1+2,f
  7055  08F9  0DF3               	rlf	__div_to_l_@f1+3,f
  7056  08FA  0BF8               	decfsz	??__div_to_l_,f
  7057  08FB  28F5               	goto	u4785
  7058  08FC                     l3033:
  7059  08FC  3001               	movlw	1
  7060  08FD  02A4               	subwf	__div_to_l_@cntr,f
  7061  08FE  1D03               	btfss	3,2
  7062  08FF  2901               	goto	u4791
  7063  0900  2902               	goto	u4790
  7064  0901                     u4791:
  7065  0901  28C9               	goto	l3023
  7066  0902                     u4790:
  7067  0902                     l488:
  7068  0902  1FA5               	btfss	__div_to_l_@exp1,7
  7069  0903  2905               	goto	u4801
  7070  0904  2906               	goto	u4800
  7071  0905                     u4801:
  7072  0905  2920               	goto	l3043
  7073  0906                     u4800:
  7074  0906                     l3035:
  7075  0906  0825               	movf	__div_to_l_@exp1,w
  7076  0907  3A80               	xorlw	128
  7077  0908  3E9F               	addlw	159
  7078  0909  1803               	skipnc
  7079  090A  290C               	goto	u4811
  7080  090B  290D               	goto	u4810
  7081  090C                     u4811:
  7082  090C  290E               	goto	l3041
  7083  090D                     u4810:
  7084  090D  288F               	goto	l3005
  7085  090E                     l3041:
  7086  090E  3001               	movlw	1
  7087  090F                     u4825:
  7088  090F  1003               	clrc
  7089  0910  0CA3               	rrf	__div_to_l_@quot+3,f
  7090  0911  0CA2               	rrf	__div_to_l_@quot+2,f
  7091  0912  0CA1               	rrf	__div_to_l_@quot+1,f
  7092  0913  0CA0               	rrf	__div_to_l_@quot,f
  7093  0914  3EFF               	addlw	-1
  7094  0915  1D03               	skipz
  7095  0916  290F               	goto	u4825
  7096  0917  3001               	movlw	1
  7097  0918  00F8               	movwf	??__div_to_l_
  7098  0919  0878               	movf	??__div_to_l_,w
  7099  091A  07A5               	addwf	__div_to_l_@exp1,f
  7100  091B  1D03               	btfss	3,2
  7101  091C  291E               	goto	u4831
  7102  091D  291F               	goto	u4830
  7103  091E                     u4831:
  7104  091E  290E               	goto	l3041
  7105  091F                     u4830:
  7106  091F  2937               	goto	l3051
  7107  0920                     l3043:
  7108  0920  3020               	movlw	32
  7109  0921  0225               	subwf	__div_to_l_@exp1,w
  7110  0922  1C03               	skipc
  7111  0923  2925               	goto	u4841
  7112  0924  2926               	goto	u4840
  7113  0925                     u4841:
  7114  0925  2932               	goto	l495
  7115  0926                     u4840:
  7116  0926  288F               	goto	l3005
  7117  0927                     l3049:
  7118  0927  3001               	movlw	1
  7119  0928  00F8               	movwf	??__div_to_l_
  7120  0929                     u4855:
  7121  0929  1003               	clrc
  7122  092A  0DA0               	rlf	__div_to_l_@quot,f
  7123  092B  0DA1               	rlf	__div_to_l_@quot+1,f
  7124  092C  0DA2               	rlf	__div_to_l_@quot+2,f
  7125  092D  0DA3               	rlf	__div_to_l_@quot+3,f
  7126  092E  0BF8               	decfsz	??__div_to_l_,f
  7127  092F  2929               	goto	u4855
  7128  0930  3001               	movlw	1
  7129  0931  02A5               	subwf	__div_to_l_@exp1,f
  7130  0932                     l495:
  7131  0932  0825               	movf	__div_to_l_@exp1,w
  7132  0933  1D03               	btfss	3,2
  7133  0934  2936               	goto	u4861
  7134  0935  2937               	goto	u4860
  7135  0936                     u4861:
  7136  0936  2927               	goto	l3049
  7137  0937                     u4860:
  7138  0937                     l3051:
  7139  0937  0823               	movf	__div_to_l_@quot+3,w
  7140  0938  00F3               	movwf	?__div_to_l_+3
  7141  0939  0822               	movf	__div_to_l_@quot+2,w
  7142  093A  00F2               	movwf	?__div_to_l_+2
  7143  093B  0821               	movf	__div_to_l_@quot+1,w
  7144  093C  00F1               	movwf	?__div_to_l_+1
  7145  093D  0820               	movf	__div_to_l_@quot,w
  7146  093E  00F0               	movwf	?__div_to_l_
  7147  093F                     l484:
  7148  093F  0008               	return
  7149  0940                     __end_of__div_to_l_:
  7150                           
  7151                           	psect	text13
  7152  1B73                     __ptext13:	
  7153 ;; *************** function ___wmul *****************
  7154 ;; Defined at:
  7155 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  7156 ;; Parameters:    Size  Location     Type
  7157 ;;  multiplier      2    0[COMMON] unsigned int 
  7158 ;;  multiplicand    2    2[COMMON] unsigned int 
  7159 ;; Auto vars:     Size  Location     Type
  7160 ;;  product         2    4[COMMON] unsigned int 
  7161 ;; Return value:  Size  Location     Type
  7162 ;;                  2    0[COMMON] unsigned int 
  7163 ;; Registers used:
  7164 ;;		wreg, status,2, status,0
  7165 ;; Tracked objects:
  7166 ;;		On entry : 0/0
  7167 ;;		On exit  : 0/0
  7168 ;;		Unchanged: 0/0
  7169 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7170 ;;      Params:         4       0       0       0       0
  7171 ;;      Locals:         2       0       0       0       0
  7172 ;;      Temps:          0       0       0       0       0
  7173 ;;      Totals:         6       0       0       0       0
  7174 ;;Total ram usage:        6 bytes
  7175 ;; Hardware stack levels used:    1
  7176 ;; This function calls:
  7177 ;;		Nothing
  7178 ;; This function is called by:
  7179 ;;		_sprintf
  7180 ;; This function uses a non-reentrant model
  7181 ;;
  7182                           
  7183                           
  7184                           ;psect for function ___wmul
  7185  1B73                     ___wmul:
  7186  1B73                     l3055:	
  7187                           ;incstack = 0
  7188                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  7189                           
  7190  1B73  01F4               	clrf	___wmul@product
  7191  1B74  01F5               	clrf	___wmul@product+1
  7192  1B75                     l3057:
  7193  1B75  1C70               	btfss	___wmul@multiplier,0
  7194  1B76  2B78               	goto	u4871
  7195  1B77  2B79               	goto	u4870
  7196  1B78                     u4871:
  7197  1B78  2B7F               	goto	l314
  7198  1B79                     u4870:
  7199  1B79                     l3059:
  7200  1B79  0872               	movf	___wmul@multiplicand,w
  7201  1B7A  07F4               	addwf	___wmul@product,f
  7202  1B7B  1803               	skipnc
  7203  1B7C  0AF5               	incf	___wmul@product+1,f
  7204  1B7D  0873               	movf	___wmul@multiplicand+1,w
  7205  1B7E  07F5               	addwf	___wmul@product+1,f
  7206  1B7F                     l314:
  7207  1B7F  3001               	movlw	1
  7208  1B80                     u4885:
  7209  1B80  1003               	clrc
  7210  1B81  0DF2               	rlf	___wmul@multiplicand,f
  7211  1B82  0DF3               	rlf	___wmul@multiplicand+1,f
  7212  1B83  3EFF               	addlw	-1
  7213  1B84  1D03               	skipz
  7214  1B85  2B80               	goto	u4885
  7215  1B86                     l3061:
  7216  1B86  3001               	movlw	1
  7217  1B87                     u4895:
  7218  1B87  1003               	clrc
  7219  1B88  0CF1               	rrf	___wmul@multiplier+1,f
  7220  1B89  0CF0               	rrf	___wmul@multiplier,f
  7221  1B8A  3EFF               	addlw	-1
  7222  1B8B  1D03               	skipz
  7223  1B8C  2B87               	goto	u4895
  7224  1B8D                     l3063:
  7225  1B8D  0870               	movf	___wmul@multiplier,w
  7226  1B8E  0471               	iorwf	___wmul@multiplier+1,w
  7227  1B8F  1D03               	btfss	3,2
  7228  1B90  2B92               	goto	u4901
  7229  1B91  2B93               	goto	u4900
  7230  1B92                     u4901:
  7231  1B92  2B75               	goto	l3057
  7232  1B93                     u4900:
  7233  1B93                     l3065:
  7234  1B93  0875               	movf	___wmul@product+1,w
  7235  1B94  00F1               	movwf	?___wmul+1
  7236  1B95  0874               	movf	___wmul@product,w
  7237  1B96  00F0               	movwf	?___wmul
  7238  1B97                     l316:
  7239  1B97  0008               	return
  7240  1B98                     __end_of___wmul:
  7241                           
  7242                           	psect	text14
  7243  1CDD                     __ptext14:	
  7244 ;; *************** function ___llmod *****************
  7245 ;; Defined at:
  7246 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\llmod.c"
  7247 ;; Parameters:    Size  Location     Type
  7248 ;;  divisor         4    0[COMMON] unsigned long 
  7249 ;;  dividend        4    4[COMMON] unsigned long 
  7250 ;; Auto vars:     Size  Location     Type
  7251 ;;  counter         1    9[COMMON] unsigned char 
  7252 ;; Return value:  Size  Location     Type
  7253 ;;                  4    0[COMMON] unsigned long 
  7254 ;; Registers used:
  7255 ;;		wreg, status,2, status,0
  7256 ;; Tracked objects:
  7257 ;;		On entry : 0/0
  7258 ;;		On exit  : 0/0
  7259 ;;		Unchanged: 0/0
  7260 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7261 ;;      Params:         8       0       0       0       0
  7262 ;;      Locals:         1       0       0       0       0
  7263 ;;      Temps:          1       0       0       0       0
  7264 ;;      Totals:        10       0       0       0       0
  7265 ;;Total ram usage:       10 bytes
  7266 ;; Hardware stack levels used:    1
  7267 ;; This function calls:
  7268 ;;		Nothing
  7269 ;; This function is called by:
  7270 ;;		_sprintf
  7271 ;; This function uses a non-reentrant model
  7272 ;;
  7273                           
  7274                           
  7275                           ;psect for function ___llmod
  7276  1CDD                     ___llmod:
  7277  1CDD                     l3169:	
  7278                           ;incstack = 0
  7279                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  7280                           
  7281  1CDD  0873               	movf	___llmod@divisor+3,w
  7282  1CDE  0472               	iorwf	___llmod@divisor+2,w
  7283  1CDF  0471               	iorwf	___llmod@divisor+1,w
  7284  1CE0  0470               	iorwf	___llmod@divisor,w
  7285  1CE1  1903               	skipnz
  7286  1CE2  2CE4               	goto	u5191
  7287  1CE3  2CE5               	goto	u5190
  7288  1CE4                     u5191:
  7289  1CE4  2D28               	goto	l3185
  7290  1CE5                     u5190:
  7291  1CE5                     l3171:
  7292  1CE5  01F9               	clrf	___llmod@counter
  7293  1CE6  0AF9               	incf	___llmod@counter,f
  7294  1CE7  2CF5               	goto	l3175
  7295  1CE8                     l3173:
  7296  1CE8  3001               	movlw	1
  7297  1CE9  00F8               	movwf	??___llmod
  7298  1CEA                     u5205:
  7299  1CEA  1003               	clrc
  7300  1CEB  0DF0               	rlf	___llmod@divisor,f
  7301  1CEC  0DF1               	rlf	___llmod@divisor+1,f
  7302  1CED  0DF2               	rlf	___llmod@divisor+2,f
  7303  1CEE  0DF3               	rlf	___llmod@divisor+3,f
  7304  1CEF  0BF8               	decfsz	??___llmod,f
  7305  1CF0  2CEA               	goto	u5205
  7306  1CF1  3001               	movlw	1
  7307  1CF2  00F8               	movwf	??___llmod
  7308  1CF3  0878               	movf	??___llmod,w
  7309  1CF4  07F9               	addwf	___llmod@counter,f
  7310  1CF5                     l3175:
  7311  1CF5  1FF3               	btfss	___llmod@divisor+3,7
  7312  1CF6  2CF8               	goto	u5211
  7313  1CF7  2CF9               	goto	u5210
  7314  1CF8                     u5211:
  7315  1CF8  2CE8               	goto	l3173
  7316  1CF9                     u5210:
  7317  1CF9                     l3177:
  7318  1CF9  0873               	movf	___llmod@divisor+3,w
  7319  1CFA  0277               	subwf	___llmod@dividend+3,w
  7320  1CFB  1D03               	skipz
  7321  1CFC  2D07               	goto	u5225
  7322  1CFD  0872               	movf	___llmod@divisor+2,w
  7323  1CFE  0276               	subwf	___llmod@dividend+2,w
  7324  1CFF  1D03               	skipz
  7325  1D00  2D07               	goto	u5225
  7326  1D01  0871               	movf	___llmod@divisor+1,w
  7327  1D02  0275               	subwf	___llmod@dividend+1,w
  7328  1D03  1D03               	skipz
  7329  1D04  2D07               	goto	u5225
  7330  1D05  0870               	movf	___llmod@divisor,w
  7331  1D06  0274               	subwf	___llmod@dividend,w
  7332  1D07                     u5225:
  7333  1D07  1C03               	skipc
  7334  1D08  2D0A               	goto	u5221
  7335  1D09  2D0B               	goto	u5220
  7336  1D0A                     u5221:
  7337  1D0A  2D19               	goto	l3181
  7338  1D0B                     u5220:
  7339  1D0B                     l3179:
  7340  1D0B  0870               	movf	___llmod@divisor,w
  7341  1D0C  02F4               	subwf	___llmod@dividend,f
  7342  1D0D  0871               	movf	___llmod@divisor+1,w
  7343  1D0E  1C03               	skipc
  7344  1D0F  0F71               	incfsz	___llmod@divisor+1,w
  7345  1D10  02F5               	subwf	___llmod@dividend+1,f
  7346  1D11  0872               	movf	___llmod@divisor+2,w
  7347  1D12  1C03               	skipc
  7348  1D13  0F72               	incfsz	___llmod@divisor+2,w
  7349  1D14  02F6               	subwf	___llmod@dividend+2,f
  7350  1D15  0873               	movf	___llmod@divisor+3,w
  7351  1D16  1C03               	skipc
  7352  1D17  0F73               	incfsz	___llmod@divisor+3,w
  7353  1D18  02F7               	subwf	___llmod@dividend+3,f
  7354  1D19                     l3181:
  7355  1D19  3001               	movlw	1
  7356  1D1A                     u5235:
  7357  1D1A  1003               	clrc
  7358  1D1B  0CF3               	rrf	___llmod@divisor+3,f
  7359  1D1C  0CF2               	rrf	___llmod@divisor+2,f
  7360  1D1D  0CF1               	rrf	___llmod@divisor+1,f
  7361  1D1E  0CF0               	rrf	___llmod@divisor,f
  7362  1D1F  3EFF               	addlw	-1
  7363  1D20  1D03               	skipz
  7364  1D21  2D1A               	goto	u5235
  7365  1D22                     l3183:
  7366  1D22  3001               	movlw	1
  7367  1D23  02F9               	subwf	___llmod@counter,f
  7368  1D24  1D03               	btfss	3,2
  7369  1D25  2D27               	goto	u5241
  7370  1D26  2D28               	goto	u5240
  7371  1D27                     u5241:
  7372  1D27  2CF9               	goto	l3177
  7373  1D28                     u5240:
  7374  1D28                     l3185:
  7375  1D28  0877               	movf	___llmod@dividend+3,w
  7376  1D29  00F3               	movwf	?___llmod+3
  7377  1D2A  0876               	movf	___llmod@dividend+2,w
  7378  1D2B  00F2               	movwf	?___llmod+2
  7379  1D2C  0875               	movf	___llmod@dividend+1,w
  7380  1D2D  00F1               	movwf	?___llmod+1
  7381  1D2E  0874               	movf	___llmod@dividend,w
  7382  1D2F  00F0               	movwf	?___llmod
  7383  1D30                     l570:
  7384  1D30  0008               	return
  7385  1D31                     __end_of___llmod:
  7386                           
  7387                           	psect	text15
  7388  1DE0                     __ptext15:	
  7389 ;; *************** function ___lldiv *****************
  7390 ;; Defined at:
  7391 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  7392 ;; Parameters:    Size  Location     Type
  7393 ;;  divisor         4    0[COMMON] unsigned long 
  7394 ;;  dividend        4    4[COMMON] unsigned long 
  7395 ;; Auto vars:     Size  Location     Type
  7396 ;;  quotient        4    9[COMMON] unsigned long 
  7397 ;;  counter         1   13[COMMON] unsigned char 
  7398 ;; Return value:  Size  Location     Type
  7399 ;;                  4    0[COMMON] unsigned long 
  7400 ;; Registers used:
  7401 ;;		wreg, status,2, status,0
  7402 ;; Tracked objects:
  7403 ;;		On entry : 0/0
  7404 ;;		On exit  : 0/0
  7405 ;;		Unchanged: 0/0
  7406 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7407 ;;      Params:         8       0       0       0       0
  7408 ;;      Locals:         5       0       0       0       0
  7409 ;;      Temps:          1       0       0       0       0
  7410 ;;      Totals:        14       0       0       0       0
  7411 ;;Total ram usage:       14 bytes
  7412 ;; Hardware stack levels used:    1
  7413 ;; This function calls:
  7414 ;;		Nothing
  7415 ;; This function is called by:
  7416 ;;		_sprintf
  7417 ;; This function uses a non-reentrant model
  7418 ;;
  7419                           
  7420                           
  7421                           ;psect for function ___lldiv
  7422  1DE0                     ___lldiv:
  7423  1DE0                     l3069:	
  7424                           ;incstack = 0
  7425                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  7426                           
  7427  1DE0  3000               	movlw	0
  7428  1DE1  00FC               	movwf	___lldiv@quotient+3
  7429  1DE2  3000               	movlw	0
  7430  1DE3  00FB               	movwf	___lldiv@quotient+2
  7431  1DE4  3000               	movlw	0
  7432  1DE5  00FA               	movwf	___lldiv@quotient+1
  7433  1DE6  3000               	movlw	0
  7434  1DE7  00F9               	movwf	___lldiv@quotient
  7435  1DE8  0873               	movf	___lldiv@divisor+3,w
  7436  1DE9  0472               	iorwf	___lldiv@divisor+2,w
  7437  1DEA  0471               	iorwf	___lldiv@divisor+1,w
  7438  1DEB  0470               	iorwf	___lldiv@divisor,w
  7439  1DEC  1903               	skipnz
  7440  1DED  2DEF               	goto	u4911
  7441  1DEE  2DF0               	goto	u4910
  7442  1DEF                     u4911:
  7443  1DEF  2E3D               	goto	l3089
  7444  1DF0                     u4910:
  7445  1DF0                     l3071:
  7446  1DF0  01FD               	clrf	___lldiv@counter
  7447  1DF1  0AFD               	incf	___lldiv@counter,f
  7448  1DF2  2E00               	goto	l3075
  7449  1DF3                     l3073:
  7450  1DF3  3001               	movlw	1
  7451  1DF4  00F8               	movwf	??___lldiv
  7452  1DF5                     u4925:
  7453  1DF5  1003               	clrc
  7454  1DF6  0DF0               	rlf	___lldiv@divisor,f
  7455  1DF7  0DF1               	rlf	___lldiv@divisor+1,f
  7456  1DF8  0DF2               	rlf	___lldiv@divisor+2,f
  7457  1DF9  0DF3               	rlf	___lldiv@divisor+3,f
  7458  1DFA  0BF8               	decfsz	??___lldiv,f
  7459  1DFB  2DF5               	goto	u4925
  7460  1DFC  3001               	movlw	1
  7461  1DFD  00F8               	movwf	??___lldiv
  7462  1DFE  0878               	movf	??___lldiv,w
  7463  1DFF  07FD               	addwf	___lldiv@counter,f
  7464  1E00                     l3075:
  7465  1E00  1FF3               	btfss	___lldiv@divisor+3,7
  7466  1E01  2E03               	goto	u4931
  7467  1E02  2E04               	goto	u4930
  7468  1E03                     u4931:
  7469  1E03  2DF3               	goto	l3073
  7470  1E04                     u4930:
  7471  1E04                     l3077:
  7472  1E04  3001               	movlw	1
  7473  1E05  00F8               	movwf	??___lldiv
  7474  1E06                     u4945:
  7475  1E06  1003               	clrc
  7476  1E07  0DF9               	rlf	___lldiv@quotient,f
  7477  1E08  0DFA               	rlf	___lldiv@quotient+1,f
  7478  1E09  0DFB               	rlf	___lldiv@quotient+2,f
  7479  1E0A  0DFC               	rlf	___lldiv@quotient+3,f
  7480  1E0B  0BF8               	decfsz	??___lldiv,f
  7481  1E0C  2E06               	goto	u4945
  7482  1E0D                     l3079:
  7483  1E0D  0873               	movf	___lldiv@divisor+3,w
  7484  1E0E  0277               	subwf	___lldiv@dividend+3,w
  7485  1E0F  1D03               	skipz
  7486  1E10  2E1B               	goto	u4955
  7487  1E11  0872               	movf	___lldiv@divisor+2,w
  7488  1E12  0276               	subwf	___lldiv@dividend+2,w
  7489  1E13  1D03               	skipz
  7490  1E14  2E1B               	goto	u4955
  7491  1E15  0871               	movf	___lldiv@divisor+1,w
  7492  1E16  0275               	subwf	___lldiv@dividend+1,w
  7493  1E17  1D03               	skipz
  7494  1E18  2E1B               	goto	u4955
  7495  1E19  0870               	movf	___lldiv@divisor,w
  7496  1E1A  0274               	subwf	___lldiv@dividend,w
  7497  1E1B                     u4955:
  7498  1E1B  1C03               	skipc
  7499  1E1C  2E1E               	goto	u4951
  7500  1E1D  2E1F               	goto	u4950
  7501  1E1E                     u4951:
  7502  1E1E  2E2E               	goto	l3085
  7503  1E1F                     u4950:
  7504  1E1F                     l3081:
  7505  1E1F  0870               	movf	___lldiv@divisor,w
  7506  1E20  02F4               	subwf	___lldiv@dividend,f
  7507  1E21  0871               	movf	___lldiv@divisor+1,w
  7508  1E22  1C03               	skipc
  7509  1E23  0F71               	incfsz	___lldiv@divisor+1,w
  7510  1E24  02F5               	subwf	___lldiv@dividend+1,f
  7511  1E25  0872               	movf	___lldiv@divisor+2,w
  7512  1E26  1C03               	skipc
  7513  1E27  0F72               	incfsz	___lldiv@divisor+2,w
  7514  1E28  02F6               	subwf	___lldiv@dividend+2,f
  7515  1E29  0873               	movf	___lldiv@divisor+3,w
  7516  1E2A  1C03               	skipc
  7517  1E2B  0F73               	incfsz	___lldiv@divisor+3,w
  7518  1E2C  02F7               	subwf	___lldiv@dividend+3,f
  7519  1E2D                     l3083:
  7520  1E2D  1479               	bsf	___lldiv@quotient,0
  7521  1E2E                     l3085:
  7522  1E2E  3001               	movlw	1
  7523  1E2F                     u4965:
  7524  1E2F  1003               	clrc
  7525  1E30  0CF3               	rrf	___lldiv@divisor+3,f
  7526  1E31  0CF2               	rrf	___lldiv@divisor+2,f
  7527  1E32  0CF1               	rrf	___lldiv@divisor+1,f
  7528  1E33  0CF0               	rrf	___lldiv@divisor,f
  7529  1E34  3EFF               	addlw	-1
  7530  1E35  1D03               	skipz
  7531  1E36  2E2F               	goto	u4965
  7532  1E37                     l3087:
  7533  1E37  3001               	movlw	1
  7534  1E38  02FD               	subwf	___lldiv@counter,f
  7535  1E39  1D03               	btfss	3,2
  7536  1E3A  2E3C               	goto	u4971
  7537  1E3B  2E3D               	goto	u4970
  7538  1E3C                     u4971:
  7539  1E3C  2E04               	goto	l3077
  7540  1E3D                     u4970:
  7541  1E3D                     l3089:
  7542  1E3D  087C               	movf	___lldiv@quotient+3,w
  7543  1E3E  00F3               	movwf	?___lldiv+3
  7544  1E3F  087B               	movf	___lldiv@quotient+2,w
  7545  1E40  00F2               	movwf	?___lldiv+2
  7546  1E41  087A               	movf	___lldiv@quotient+1,w
  7547  1E42  00F1               	movwf	?___lldiv+1
  7548  1E43  0879               	movf	___lldiv@quotient,w
  7549  1E44  00F0               	movwf	?___lldiv
  7550  1E45                     l350:
  7551  1E45  0008               	return
  7552  1E46                     __end_of___lldiv:
  7553                           
  7554                           	psect	text16
  7555  0806                     __ptext16:	
  7556 ;; *************** function ___fltol *****************
  7557 ;; Defined at:
  7558 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fltol.c"
  7559 ;; Parameters:    Size  Location     Type
  7560 ;;  f1              4   30[BANK0 ] unsigned long 
  7561 ;; Auto vars:     Size  Location     Type
  7562 ;;  exp1            1   40[BANK0 ] unsigned char 
  7563 ;;  sign1           1   39[BANK0 ] unsigned char 
  7564 ;; Return value:  Size  Location     Type
  7565 ;;                  4   30[BANK0 ] long 
  7566 ;; Registers used:
  7567 ;;		wreg, status,2, status,0
  7568 ;; Tracked objects:
  7569 ;;		On entry : 0/0
  7570 ;;		On exit  : 0/0
  7571 ;;		Unchanged: 0/0
  7572 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7573 ;;      Params:         0       4       0       0       0
  7574 ;;      Locals:         0       2       0       0       0
  7575 ;;      Temps:          0       5       0       0       0
  7576 ;;      Totals:         0      11       0       0       0
  7577 ;;Total ram usage:       11 bytes
  7578 ;; Hardware stack levels used:    1
  7579 ;; This function calls:
  7580 ;;		Nothing
  7581 ;; This function is called by:
  7582 ;;		_sprintf
  7583 ;; This function uses a non-reentrant model
  7584 ;;
  7585                           
  7586                           
  7587                           ;psect for function ___fltol
  7588  0806                     ___fltol:
  7589  0806                     l3133:	
  7590                           ;incstack = 0
  7591                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  7592                           
  7593  0806  1003               	clrc
  7594  0807  1283               	bcf	3,5	;RP0=0, select bank0
  7595  0808  1303               	bcf	3,6	;RP1=0, select bank0
  7596  0809  0D40               	rlf	___fltol@f1+2,w
  7597  080A  0D41               	rlf	___fltol@f1+3,w
  7598  080B  00C2               	movwf	??___fltol
  7599  080C  0842               	movf	??___fltol,w
  7600  080D  00C8               	movwf	___fltol@exp1
  7601  080E  0848               	movf	___fltol@exp1,w
  7602  080F  1D03               	btfss	3,2
  7603  0810  2812               	goto	u5091
  7604  0811  2813               	goto	u5090
  7605  0812                     u5091:
  7606  0812  281C               	goto	l3139
  7607  0813                     u5090:
  7608  0813                     l3135:
  7609  0813  3000               	movlw	0
  7610  0814  00C1               	movwf	?___fltol+3
  7611  0815  3000               	movlw	0
  7612  0816  00C0               	movwf	?___fltol+2
  7613  0817  3000               	movlw	0
  7614  0818  00BF               	movwf	?___fltol+1
  7615  0819  3000               	movlw	0
  7616  081A  00BE               	movwf	?___fltol
  7617  081B  2881               	goto	l517
  7618  081C                     l3139:
  7619  081C  083E               	movf	___fltol@f1,w
  7620  081D  00C2               	movwf	??___fltol
  7621  081E  083F               	movf	___fltol@f1+1,w
  7622  081F  00C3               	movwf	??___fltol+1
  7623  0820  0840               	movf	___fltol@f1+2,w
  7624  0821  00C4               	movwf	??___fltol+2
  7625  0822  0841               	movf	___fltol@f1+3,w
  7626  0823  00C5               	movwf	??___fltol+3
  7627  0824  301F               	movlw	31
  7628  0825                     u5105:
  7629  0825  1003               	clrc
  7630  0826  0CC5               	rrf	??___fltol+3,f
  7631  0827  0CC4               	rrf	??___fltol+2,f
  7632  0828  0CC3               	rrf	??___fltol+1,f
  7633  0829  0CC2               	rrf	??___fltol,f
  7634  082A                     u5100:
  7635  082A  3EFF               	addlw	-1
  7636  082B  1D03               	skipz
  7637  082C  2825               	goto	u5105
  7638  082D  0842               	movf	??___fltol,w
  7639  082E  00C6               	movwf	??___fltol+4
  7640  082F  0846               	movf	??___fltol+4,w
  7641  0830  00C7               	movwf	___fltol@sign1
  7642  0831                     l3141:
  7643  0831  17C0               	bsf	___fltol@f1+2,7
  7644  0832                     l3143:
  7645  0832  30FF               	movlw	255
  7646  0833  05BE               	andwf	___fltol@f1,f
  7647  0834  30FF               	movlw	255
  7648  0835  05BF               	andwf	___fltol@f1+1,f
  7649  0836  30FF               	movlw	255
  7650  0837  05C0               	andwf	___fltol@f1+2,f
  7651  0838  3000               	movlw	0
  7652  0839  05C1               	andwf	___fltol@f1+3,f
  7653  083A                     l3145:
  7654  083A  3096               	movlw	150
  7655  083B  02C8               	subwf	___fltol@exp1,f
  7656  083C                     l3147:
  7657  083C  1FC8               	btfss	___fltol@exp1,7
  7658  083D  283F               	goto	u5111
  7659  083E  2840               	goto	u5110
  7660  083F                     u5111:
  7661  083F  285A               	goto	l3157
  7662  0840                     u5110:
  7663  0840                     l3149:
  7664  0840  0848               	movf	___fltol@exp1,w
  7665  0841  3A80               	xorlw	128
  7666  0842  3E97               	addlw	151
  7667  0843  1803               	skipnc
  7668  0844  2846               	goto	u5121
  7669  0845  2847               	goto	u5120
  7670  0846                     u5121:
  7671  0846  2848               	goto	l3155
  7672  0847                     u5120:
  7673  0847  2813               	goto	l3135
  7674  0848                     l3155:
  7675  0848  3001               	movlw	1
  7676  0849                     u5135:
  7677  0849  1003               	clrc
  7678  084A  0CC1               	rrf	___fltol@f1+3,f
  7679  084B  0CC0               	rrf	___fltol@f1+2,f
  7680  084C  0CBF               	rrf	___fltol@f1+1,f
  7681  084D  0CBE               	rrf	___fltol@f1,f
  7682  084E  3EFF               	addlw	-1
  7683  084F  1D03               	skipz
  7684  0850  2849               	goto	u5135
  7685  0851  3001               	movlw	1
  7686  0852  00C2               	movwf	??___fltol
  7687  0853  0842               	movf	??___fltol,w
  7688  0854  07C8               	addwf	___fltol@exp1,f
  7689  0855  1D03               	btfss	3,2
  7690  0856  2858               	goto	u5141
  7691  0857  2859               	goto	u5140
  7692  0858                     u5141:
  7693  0858  2848               	goto	l3155
  7694  0859                     u5140:
  7695  0859  2871               	goto	l3165
  7696  085A                     l3157:
  7697  085A  3020               	movlw	32
  7698  085B  0248               	subwf	___fltol@exp1,w
  7699  085C  1C03               	skipc
  7700  085D  285F               	goto	u5151
  7701  085E  2860               	goto	u5150
  7702  085F                     u5151:
  7703  085F  286C               	goto	l524
  7704  0860                     u5150:
  7705  0860  2813               	goto	l3135
  7706  0861                     l3163:
  7707  0861  3001               	movlw	1
  7708  0862  00C2               	movwf	??___fltol
  7709  0863                     u5165:
  7710  0863  1003               	clrc
  7711  0864  0DBE               	rlf	___fltol@f1,f
  7712  0865  0DBF               	rlf	___fltol@f1+1,f
  7713  0866  0DC0               	rlf	___fltol@f1+2,f
  7714  0867  0DC1               	rlf	___fltol@f1+3,f
  7715  0868  0BC2               	decfsz	??___fltol,f
  7716  0869  2863               	goto	u5165
  7717  086A  3001               	movlw	1
  7718  086B  02C8               	subwf	___fltol@exp1,f
  7719  086C                     l524:
  7720  086C  0848               	movf	___fltol@exp1,w
  7721  086D  1D03               	btfss	3,2
  7722  086E  2870               	goto	u5171
  7723  086F  2871               	goto	u5170
  7724  0870                     u5171:
  7725  0870  2861               	goto	l3163
  7726  0871                     u5170:
  7727  0871                     l3165:
  7728  0871  0847               	movf	___fltol@sign1,w
  7729  0872  1903               	btfsc	3,2
  7730  0873  2875               	goto	u5181
  7731  0874  2876               	goto	u5180
  7732  0875                     u5181:
  7733  0875  2881               	goto	l527
  7734  0876                     u5180:
  7735  0876                     l3167:
  7736  0876  09BE               	comf	___fltol@f1,f
  7737  0877  09BF               	comf	___fltol@f1+1,f
  7738  0878  09C0               	comf	___fltol@f1+2,f
  7739  0879  09C1               	comf	___fltol@f1+3,f
  7740  087A  0ABE               	incf	___fltol@f1,f
  7741  087B  1903               	skipnz
  7742  087C  0ABF               	incf	___fltol@f1+1,f
  7743  087D  1903               	skipnz
  7744  087E  0AC0               	incf	___fltol@f1+2,f
  7745  087F  1903               	skipnz
  7746  0880  0AC1               	incf	___fltol@f1+3,f
  7747  0881                     l527:
  7748  0881                     l517:
  7749  0881  0008               	return
  7750  0882                     __end_of___fltol:
  7751                           
  7752                           	psect	text17
  7753  1B4F                     __ptext17:	
  7754 ;; *************** function ___flsub *****************
  7755 ;; Defined at:
  7756 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  7757 ;; Parameters:    Size  Location     Type
  7758 ;;  a               4   70[BANK0 ] long 
  7759 ;;  b               4   74[BANK0 ] long 
  7760 ;; Auto vars:     Size  Location     Type
  7761 ;;		None
  7762 ;; Return value:  Size  Location     Type
  7763 ;;                  4   70[BANK0 ] long 
  7764 ;; Registers used:
  7765 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7766 ;; Tracked objects:
  7767 ;;		On entry : 0/0
  7768 ;;		On exit  : 0/0
  7769 ;;		Unchanged: 0/0
  7770 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7771 ;;      Params:         0       8       0       0       0
  7772 ;;      Locals:         0       0       0       0       0
  7773 ;;      Temps:          0       0       0       0       0
  7774 ;;      Totals:         0       8       0       0       0
  7775 ;;Total ram usage:        8 bytes
  7776 ;; Hardware stack levels used:    1
  7777 ;; Hardware stack levels required when called:    1
  7778 ;; This function calls:
  7779 ;;		___fladd
  7780 ;; This function is called by:
  7781 ;;		_sprintf
  7782 ;; This function uses a non-reentrant model
  7783 ;;
  7784                           
  7785                           
  7786                           ;psect for function ___flsub
  7787  1B4F                     ___flsub:
  7788  1B4F                     l3189:	
  7789                           ;incstack = 0
  7790                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  7791                           
  7792  1B4F  3080               	movlw	128
  7793  1B50  1283               	bcf	3,5	;RP0=0, select bank0
  7794  1B51  1303               	bcf	3,6	;RP1=0, select bank0
  7795  1B52  06E9               	xorwf	___flsub@a+3,f
  7796  1B53                     l3191:
  7797  1B53  086D               	movf	___flsub@b+3,w
  7798  1B54  00D5               	movwf	___fladd@b+3
  7799  1B55  086C               	movf	___flsub@b+2,w
  7800  1B56  00D4               	movwf	___fladd@b+2
  7801  1B57  086B               	movf	___flsub@b+1,w
  7802  1B58  00D3               	movwf	___fladd@b+1
  7803  1B59  086A               	movf	___flsub@b,w
  7804  1B5A  00D2               	movwf	___fladd@b
  7805  1B5B  0869               	movf	___flsub@a+3,w
  7806  1B5C  00D9               	movwf	___fladd@a+3
  7807  1B5D  0868               	movf	___flsub@a+2,w
  7808  1B5E  00D8               	movwf	___fladd@a+2
  7809  1B5F  0867               	movf	___flsub@a+1,w
  7810  1B60  00D7               	movwf	___fladd@a+1
  7811  1B61  0866               	movf	___flsub@a,w
  7812  1B62  00D6               	movwf	___fladd@a
  7813  1B63  160A  118A  2578  160A  158A  	fcall	___fladd
  7814  1B68  1283               	bcf	3,5	;RP0=0, select bank0
  7815  1B69  1303               	bcf	3,6	;RP1=0, select bank0
  7816  1B6A  0855               	movf	?___fladd+3,w
  7817  1B6B  00E9               	movwf	?___flsub+3
  7818  1B6C  0854               	movf	?___fladd+2,w
  7819  1B6D  00E8               	movwf	?___flsub+2
  7820  1B6E  0853               	movf	?___fladd+1,w
  7821  1B6F  00E7               	movwf	?___flsub+1
  7822  1B70  0852               	movf	?___fladd,w
  7823  1B71  00E6               	movwf	?___flsub
  7824  1B72                     l687:
  7825  1B72  0008               	return
  7826  1B73                     __end_of___flsub:
  7827                           
  7828                           	psect	text18
  7829  1578                     __ptext18:	
  7830 ;; *************** function ___fladd *****************
  7831 ;; Defined at:
  7832 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  7833 ;; Parameters:    Size  Location     Type
  7834 ;;  b               4   50[BANK0 ] long 
  7835 ;;  a               4   54[BANK0 ] long 
  7836 ;; Auto vars:     Size  Location     Type
  7837 ;;  grs             1   69[BANK0 ] unsigned char 
  7838 ;;  bexp            1   68[BANK0 ] unsigned char 
  7839 ;;  aexp            1   67[BANK0 ] unsigned char 
  7840 ;;  signs           1   66[BANK0 ] unsigned char 
  7841 ;; Return value:  Size  Location     Type
  7842 ;;                  4   50[BANK0 ] unsigned char 
  7843 ;; Registers used:
  7844 ;;		wreg, status,2, status,0, btemp+1
  7845 ;; Tracked objects:
  7846 ;;		On entry : 0/0
  7847 ;;		On exit  : 0/0
  7848 ;;		Unchanged: 0/0
  7849 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7850 ;;      Params:         0       8       0       0       0
  7851 ;;      Locals:         0       4       0       0       0
  7852 ;;      Temps:          0       8       0       0       0
  7853 ;;      Totals:         0      20       0       0       0
  7854 ;;Total ram usage:       20 bytes
  7855 ;; Hardware stack levels used:    1
  7856 ;; This function calls:
  7857 ;;		Nothing
  7858 ;; This function is called by:
  7859 ;;		_sprintf
  7860 ;;		___flsub
  7861 ;; This function uses a non-reentrant model
  7862 ;;
  7863                           
  7864                           
  7865                           ;psect for function ___fladd
  7866  1578                     ___fladd:
  7867  1578                     l2533:	
  7868                           ;incstack = 0
  7869                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  7870                           
  7871  1578  1283               	bcf	3,5	;RP0=0, select bank0
  7872  1579  1303               	bcf	3,6	;RP1=0, select bank0
  7873  157A  0855               	movf	___fladd@b+3,w
  7874  157B  3980               	andlw	128
  7875  157C  00DA               	movwf	??___fladd
  7876  157D  085A               	movf	??___fladd,w
  7877  157E  00E2               	movwf	___fladd@signs
  7878  157F                     l2535:
  7879  157F  0855               	movf	___fladd@b+3,w
  7880  1580  00DA               	movwf	??___fladd
  7881  1581  075A               	addwf	??___fladd,w
  7882  1582  00DB               	movwf	??___fladd+1
  7883  1583  085B               	movf	??___fladd+1,w
  7884  1584  00E4               	movwf	___fladd@bexp
  7885  1585                     l2537:
  7886  1585  1FD4               	btfss	___fladd@b+2,7
  7887  1586  2D88               	goto	u3511
  7888  1587  2D89               	goto	u3510
  7889  1588                     u3511:
  7890  1588  2D8A               	goto	l2541
  7891  1589                     u3510:
  7892  1589                     l2539:
  7893  1589  1464               	bsf	___fladd@bexp,0
  7894  158A                     l2541:
  7895  158A  0864               	movf	___fladd@bexp,w
  7896  158B  1903               	btfsc	3,2
  7897  158C  2D8E               	goto	u3521
  7898  158D  2D8F               	goto	u3520
  7899  158E                     u3521:
  7900  158E  2D9F               	goto	l2551
  7901  158F                     u3520:
  7902  158F                     l2543:
  7903  158F  0A64               	incf	___fladd@bexp,w
  7904  1590  1D03               	btfss	3,2
  7905  1591  2D93               	goto	u3531
  7906  1592  2D94               	goto	u3530
  7907  1593                     u3531:
  7908  1593  2D9C               	goto	l2547
  7909  1594                     u3530:
  7910  1594                     l2545:
  7911  1594  3000               	movlw	0
  7912  1595  00D5               	movwf	___fladd@b+3
  7913  1596  3000               	movlw	0
  7914  1597  00D4               	movwf	___fladd@b+2
  7915  1598  3000               	movlw	0
  7916  1599  00D3               	movwf	___fladd@b+1
  7917  159A  3000               	movlw	0
  7918  159B  00D2               	movwf	___fladd@b
  7919  159C                     l2547:
  7920  159C  17D4               	bsf	___fladd@b+2,7
  7921  159D                     l2549:
  7922  159D  01D5               	clrf	___fladd@b+3
  7923  159E  2DA7               	goto	l2553
  7924  159F                     l2551:
  7925  159F  3000               	movlw	0
  7926  15A0  00D5               	movwf	___fladd@b+3
  7927  15A1  3000               	movlw	0
  7928  15A2  00D4               	movwf	___fladd@b+2
  7929  15A3  3000               	movlw	0
  7930  15A4  00D3               	movwf	___fladd@b+1
  7931  15A5  3000               	movlw	0
  7932  15A6  00D2               	movwf	___fladd@b
  7933  15A7                     l2553:
  7934  15A7  0859               	movf	___fladd@a+3,w
  7935  15A8  3980               	andlw	128
  7936  15A9  00DA               	movwf	??___fladd
  7937  15AA  085A               	movf	??___fladd,w
  7938  15AB  00E3               	movwf	___fladd@aexp
  7939  15AC                     l2555:
  7940  15AC  0863               	movf	___fladd@aexp,w
  7941  15AD  0662               	xorwf	___fladd@signs,w
  7942  15AE  1903               	skipnz
  7943  15AF  2DB1               	goto	u3541
  7944  15B0  2DB2               	goto	u3540
  7945  15B1                     u3541:
  7946  15B1  2DB3               	goto	l2559
  7947  15B2                     u3540:
  7948  15B2                     l2557:
  7949  15B2  1762               	bsf	___fladd@signs,6
  7950  15B3                     l2559:
  7951  15B3  0859               	movf	___fladd@a+3,w
  7952  15B4  00DA               	movwf	??___fladd
  7953  15B5  075A               	addwf	??___fladd,w
  7954  15B6  00DB               	movwf	??___fladd+1
  7955  15B7  085B               	movf	??___fladd+1,w
  7956  15B8  00E3               	movwf	___fladd@aexp
  7957  15B9                     l2561:
  7958  15B9  1FD8               	btfss	___fladd@a+2,7
  7959  15BA  2DBC               	goto	u3551
  7960  15BB  2DBD               	goto	u3550
  7961  15BC                     u3551:
  7962  15BC  2DBE               	goto	l2565
  7963  15BD                     u3550:
  7964  15BD                     l2563:
  7965  15BD  1463               	bsf	___fladd@aexp,0
  7966  15BE                     l2565:
  7967  15BE  0863               	movf	___fladd@aexp,w
  7968  15BF  1903               	btfsc	3,2
  7969  15C0  2DC2               	goto	u3561
  7970  15C1  2DC3               	goto	u3560
  7971  15C2                     u3561:
  7972  15C2  2DD3               	goto	l2575
  7973  15C3                     u3560:
  7974  15C3                     l2567:
  7975  15C3  0A63               	incf	___fladd@aexp,w
  7976  15C4  1D03               	btfss	3,2
  7977  15C5  2DC7               	goto	u3571
  7978  15C6  2DC8               	goto	u3570
  7979  15C7                     u3571:
  7980  15C7  2DD0               	goto	l2571
  7981  15C8                     u3570:
  7982  15C8                     l2569:
  7983  15C8  3000               	movlw	0
  7984  15C9  00D9               	movwf	___fladd@a+3
  7985  15CA  3000               	movlw	0
  7986  15CB  00D8               	movwf	___fladd@a+2
  7987  15CC  3000               	movlw	0
  7988  15CD  00D7               	movwf	___fladd@a+1
  7989  15CE  3000               	movlw	0
  7990  15CF  00D6               	movwf	___fladd@a
  7991  15D0                     l2571:
  7992  15D0  17D8               	bsf	___fladd@a+2,7
  7993  15D1                     l2573:
  7994  15D1  01D9               	clrf	___fladd@a+3
  7995  15D2  2DDB               	goto	l641
  7996  15D3                     l2575:
  7997  15D3  3000               	movlw	0
  7998  15D4  00D9               	movwf	___fladd@a+3
  7999  15D5  3000               	movlw	0
  8000  15D6  00D8               	movwf	___fladd@a+2
  8001  15D7  3000               	movlw	0
  8002  15D8  00D7               	movwf	___fladd@a+1
  8003  15D9  3000               	movlw	0
  8004  15DA  00D6               	movwf	___fladd@a
  8005  15DB                     l641:
  8006  15DB  0864               	movf	___fladd@bexp,w
  8007  15DC  0263               	subwf	___fladd@aexp,w
  8008  15DD  1803               	skipnc
  8009  15DE  2DE0               	goto	u3581
  8010  15DF  2DE1               	goto	u3580
  8011  15E0                     u3581:
  8012  15E0  2E25               	goto	l2611
  8013  15E1                     u3580:
  8014  15E1                     l2577:
  8015  15E1  1F62               	btfss	___fladd@signs,6
  8016  15E2  2DE4               	goto	u3591
  8017  15E3  2DE5               	goto	u3590
  8018  15E4                     u3591:
  8019  15E4  2DE9               	goto	l2581
  8020  15E5                     u3590:
  8021  15E5                     l2579:
  8022  15E5  3080               	movlw	128
  8023  15E6  00DA               	movwf	??___fladd
  8024  15E7  085A               	movf	??___fladd,w
  8025  15E8  06E2               	xorwf	___fladd@signs,f
  8026  15E9                     l2581:
  8027  15E9  0864               	movf	___fladd@bexp,w
  8028  15EA  00DA               	movwf	??___fladd
  8029  15EB  085A               	movf	??___fladd,w
  8030  15EC  00E5               	movwf	___fladd@grs
  8031  15ED                     l2583:
  8032  15ED  0863               	movf	___fladd@aexp,w
  8033  15EE  00DA               	movwf	??___fladd
  8034  15EF  085A               	movf	??___fladd,w
  8035  15F0  00E4               	movwf	___fladd@bexp
  8036  15F1                     l2585:
  8037  15F1  0865               	movf	___fladd@grs,w
  8038  15F2  00DA               	movwf	??___fladd
  8039  15F3  085A               	movf	??___fladd,w
  8040  15F4  00E3               	movwf	___fladd@aexp
  8041  15F5                     l2587:
  8042  15F5  0852               	movf	___fladd@b,w
  8043  15F6  00DA               	movwf	??___fladd
  8044  15F7  085A               	movf	??___fladd,w
  8045  15F8  00E5               	movwf	___fladd@grs
  8046  15F9                     l2589:
  8047  15F9  0856               	movf	___fladd@a,w
  8048  15FA  00DA               	movwf	??___fladd
  8049  15FB  085A               	movf	??___fladd,w
  8050  15FC  00D2               	movwf	___fladd@b
  8051  15FD                     l2591:
  8052  15FD  0865               	movf	___fladd@grs,w
  8053  15FE  00DA               	movwf	??___fladd
  8054  15FF  085A               	movf	??___fladd,w
  8055  1600  00D6               	movwf	___fladd@a
  8056  1601                     l2593:
  8057  1601  0853               	movf	___fladd@b+1,w
  8058  1602  00DA               	movwf	??___fladd
  8059  1603  085A               	movf	??___fladd,w
  8060  1604  00E5               	movwf	___fladd@grs
  8061  1605                     l2595:
  8062  1605  0857               	movf	___fladd@a+1,w
  8063  1606  00DA               	movwf	??___fladd
  8064  1607  085A               	movf	??___fladd,w
  8065  1608  00D3               	movwf	___fladd@b+1
  8066  1609                     l2597:
  8067  1609  0865               	movf	___fladd@grs,w
  8068  160A  00DA               	movwf	??___fladd
  8069  160B  085A               	movf	??___fladd,w
  8070  160C  00D7               	movwf	___fladd@a+1
  8071  160D                     l2599:
  8072  160D  0854               	movf	___fladd@b+2,w
  8073  160E  00DA               	movwf	??___fladd
  8074  160F  085A               	movf	??___fladd,w
  8075  1610  00E5               	movwf	___fladd@grs
  8076  1611                     l2601:
  8077  1611  0858               	movf	___fladd@a+2,w
  8078  1612  00DA               	movwf	??___fladd
  8079  1613  085A               	movf	??___fladd,w
  8080  1614  00D4               	movwf	___fladd@b+2
  8081  1615                     l2603:
  8082  1615  0865               	movf	___fladd@grs,w
  8083  1616  00DA               	movwf	??___fladd
  8084  1617  085A               	movf	??___fladd,w
  8085  1618  00D8               	movwf	___fladd@a+2
  8086  1619                     l2605:
  8087  1619  0855               	movf	___fladd@b+3,w
  8088  161A  00DA               	movwf	??___fladd
  8089  161B  085A               	movf	??___fladd,w
  8090  161C  00E5               	movwf	___fladd@grs
  8091  161D                     l2607:
  8092  161D  0859               	movf	___fladd@a+3,w
  8093  161E  00DA               	movwf	??___fladd
  8094  161F  085A               	movf	??___fladd,w
  8095  1620  00D5               	movwf	___fladd@b+3
  8096  1621                     l2609:
  8097  1621  0865               	movf	___fladd@grs,w
  8098  1622  00DA               	movwf	??___fladd
  8099  1623  085A               	movf	??___fladd,w
  8100  1624  00D9               	movwf	___fladd@a+3
  8101  1625                     l2611:
  8102  1625  01E5               	clrf	___fladd@grs
  8103  1626                     l2613:
  8104  1626  0863               	movf	___fladd@aexp,w
  8105  1627  00DA               	movwf	??___fladd
  8106  1628  01DB               	clrf	??___fladd+1
  8107  1629  085B               	movf	??___fladd+1,w
  8108  162A  00DD               	movwf	??___fladd+3
  8109  162B  0864               	movf	___fladd@bexp,w
  8110  162C  025A               	subwf	??___fladd,w
  8111  162D  00DC               	movwf	??___fladd+2
  8112  162E  1C03               	skipc
  8113  162F  03DD               	decf	??___fladd+3,f
  8114  1630  085D               	movf	??___fladd+3,w
  8115  1631  3A80               	xorlw	128
  8116  1632  00FF               	movwf	btemp+1
  8117  1633  3080               	movlw	128
  8118  1634  027F               	subwf	btemp+1,w
  8119  1635  1D03               	skipz
  8120  1636  2E39               	goto	u3605
  8121  1637  301A               	movlw	26
  8122  1638  025C               	subwf	??___fladd+2,w
  8123  1639                     u3605:
  8124  1639  1C03               	skipc
  8125  163A  2E3C               	goto	u3601
  8126  163B  2E3D               	goto	u3600
  8127  163C                     u3601:
  8128  163C  2E7A               	goto	l2629
  8129  163D                     u3600:
  8130  163D                     l2615:
  8131  163D  1283               	bcf	3,5	;RP0=0, select bank0
  8132  163E  1303               	bcf	3,6	;RP1=0, select bank0
  8133  163F  0855               	movf	___fladd@b+3,w
  8134  1640  0454               	iorwf	___fladd@b+2,w
  8135  1641  0453               	iorwf	___fladd@b+1,w
  8136  1642  0452               	iorwf	___fladd@b,w
  8137  1643  1D03               	skipz
  8138  1644  2E46               	goto	u3611
  8139  1645  2E48               	goto	u3610
  8140  1646                     u3611:
  8141  1646  3001               	movlw	1
  8142  1647  2E49               	goto	u3620
  8143  1648                     u3610:
  8144  1648  3000               	movlw	0
  8145  1649                     u3620:
  8146  1649  00DA               	movwf	??___fladd
  8147  164A  085A               	movf	??___fladd,w
  8148  164B  00E5               	movwf	___fladd@grs
  8149  164C  3000               	movlw	0
  8150  164D  00D5               	movwf	___fladd@b+3
  8151  164E  3000               	movlw	0
  8152  164F  00D4               	movwf	___fladd@b+2
  8153  1650  3000               	movlw	0
  8154  1651  00D3               	movwf	___fladd@b+1
  8155  1652  3000               	movlw	0
  8156  1653  00D2               	movwf	___fladd@b
  8157  1654  0863               	movf	___fladd@aexp,w
  8158  1655  00DA               	movwf	??___fladd
  8159  1656  085A               	movf	??___fladd,w
  8160  1657  00E4               	movwf	___fladd@bexp
  8161  1658  2E82               	goto	l645
  8162  1659                     l647:
  8163  1659  1C65               	btfss	___fladd@grs,0
  8164  165A  2E5C               	goto	u3631
  8165  165B  2E5D               	goto	u3630
  8166  165C                     u3631:
  8167  165C  2E66               	goto	l2619
  8168  165D                     u3630:
  8169  165D                     l2617:
  8170  165D  0865               	movf	___fladd@grs,w
  8171  165E  00DA               	movwf	??___fladd
  8172  165F  1003               	clrc
  8173  1660  0C5A               	rrf	??___fladd,w
  8174  1661  3801               	iorlw	1
  8175  1662  00DB               	movwf	??___fladd+1
  8176  1663  085B               	movf	??___fladd+1,w
  8177  1664  00E5               	movwf	___fladd@grs
  8178  1665  2E68               	goto	l2621
  8179  1666                     l2619:
  8180  1666  1003               	clrc
  8181  1667  0CE5               	rrf	___fladd@grs,f
  8182  1668                     l2621:
  8183  1668  1C52               	btfss	___fladd@b,0
  8184  1669  2E6B               	goto	u3641
  8185  166A  2E6C               	goto	u3640
  8186  166B                     u3641:
  8187  166B  2E6D               	goto	l2625
  8188  166C                     u3640:
  8189  166C                     l2623:
  8190  166C  17E5               	bsf	___fladd@grs,7
  8191  166D                     l2625:
  8192  166D  3001               	movlw	1
  8193  166E  00DA               	movwf	??___fladd
  8194  166F                     u3655:
  8195  166F  0D55               	rlf	___fladd@b+3,w
  8196  1670  0CD5               	rrf	___fladd@b+3,f
  8197  1671  0CD4               	rrf	___fladd@b+2,f
  8198  1672  0CD3               	rrf	___fladd@b+1,f
  8199  1673  0CD2               	rrf	___fladd@b,f
  8200  1674  0BDA               	decfsz	??___fladd& (0+127),f
  8201  1675  2E6F               	goto	u3655
  8202  1676                     l2627:
  8203  1676  3001               	movlw	1
  8204  1677  00DA               	movwf	??___fladd
  8205  1678  085A               	movf	??___fladd,w
  8206  1679  07E4               	addwf	___fladd@bexp,f
  8207  167A                     l2629:
  8208  167A  1283               	bcf	3,5	;RP0=0, select bank0
  8209  167B  1303               	bcf	3,6	;RP1=0, select bank0
  8210  167C  0863               	movf	___fladd@aexp,w
  8211  167D  0264               	subwf	___fladd@bexp,w
  8212  167E  1C03               	skipc
  8213  167F  2E81               	goto	u3661
  8214  1680  2E82               	goto	u3660
  8215  1681                     u3661:
  8216  1681  2E59               	goto	l647
  8217  1682                     u3660:
  8218  1682                     l645:
  8219  1682  1B62               	btfsc	___fladd@signs,6
  8220  1683  2E85               	goto	u3671
  8221  1684  2E86               	goto	u3670
  8222  1685                     u3671:
  8223  1685  2ED1               	goto	l2655
  8224  1686                     u3670:
  8225  1686                     l2631:
  8226  1686  0864               	movf	___fladd@bexp,w
  8227  1687  1D03               	btfss	3,2
  8228  1688  2E8A               	goto	u3681
  8229  1689  2E8B               	goto	u3680
  8230  168A                     u3681:
  8231  168A  2E94               	goto	l2637
  8232  168B                     u3680:
  8233  168B                     l2633:
  8234  168B  3000               	movlw	0
  8235  168C  00D5               	movwf	?___fladd+3
  8236  168D  3000               	movlw	0
  8237  168E  00D4               	movwf	?___fladd+2
  8238  168F  3000               	movlw	0
  8239  1690  00D3               	movwf	?___fladd+1
  8240  1691  3000               	movlw	0
  8241  1692  00D2               	movwf	?___fladd
  8242  1693  2FFF               	goto	l654
  8243  1694                     l2637:
  8244  1694  0856               	movf	___fladd@a,w
  8245  1695  07D2               	addwf	___fladd@b,f
  8246  1696  0857               	movf	___fladd@a+1,w
  8247  1697  1103               	clrz
  8248  1698  1803               	skipnc
  8249  1699  3E01               	addlw	1
  8250  169A  1903               	skipnz
  8251  169B  2E9D               	goto	u3691
  8252  169C  07D3               	addwf	___fladd@b+1,f
  8253  169D                     u3691:
  8254  169D  0858               	movf	___fladd@a+2,w
  8255  169E  1103               	clrz
  8256  169F  1803               	skipnc
  8257  16A0  3E01               	addlw	1
  8258  16A1  1903               	skipnz
  8259  16A2  2EA4               	goto	u3692
  8260  16A3  07D4               	addwf	___fladd@b+2,f
  8261  16A4                     u3692:
  8262  16A4  0859               	movf	___fladd@a+3,w
  8263  16A5  1103               	clrz
  8264  16A6  1803               	skipnc
  8265  16A7  3E01               	addlw	1
  8266  16A8  1903               	skipnz
  8267  16A9  2EAB               	goto	u3693
  8268  16AA  07D5               	addwf	___fladd@b+3,f
  8269  16AB                     u3693:
  8270  16AB                     l2639:
  8271  16AB  1C55               	btfss	___fladd@b+3,0
  8272  16AC  2EAE               	goto	u3701
  8273  16AD  2EAF               	goto	u3700
  8274  16AE                     u3701:
  8275  16AE  2F85               	goto	l2689
  8276  16AF                     u3700:
  8277  16AF                     l2641:
  8278  16AF  1C65               	btfss	___fladd@grs,0
  8279  16B0  2EB2               	goto	u3711
  8280  16B1  2EB3               	goto	u3710
  8281  16B2                     u3711:
  8282  16B2  2EBC               	goto	l2645
  8283  16B3                     u3710:
  8284  16B3                     l2643:
  8285  16B3  0865               	movf	___fladd@grs,w
  8286  16B4  00DA               	movwf	??___fladd
  8287  16B5  1003               	clrc
  8288  16B6  0C5A               	rrf	??___fladd,w
  8289  16B7  3801               	iorlw	1
  8290  16B8  00DB               	movwf	??___fladd+1
  8291  16B9  085B               	movf	??___fladd+1,w
  8292  16BA  00E5               	movwf	___fladd@grs
  8293  16BB  2EBE               	goto	l2647
  8294  16BC                     l2645:
  8295  16BC  1003               	clrc
  8296  16BD  0CE5               	rrf	___fladd@grs,f
  8297  16BE                     l2647:
  8298  16BE  1C52               	btfss	___fladd@b,0
  8299  16BF  2EC1               	goto	u3721
  8300  16C0  2EC2               	goto	u3720
  8301  16C1                     u3721:
  8302  16C1  2EC3               	goto	l2651
  8303  16C2                     u3720:
  8304  16C2                     l2649:
  8305  16C2  17E5               	bsf	___fladd@grs,7
  8306  16C3                     l2651:
  8307  16C3  3001               	movlw	1
  8308  16C4  00DA               	movwf	??___fladd
  8309  16C5                     u3735:
  8310  16C5  0D55               	rlf	___fladd@b+3,w
  8311  16C6  0CD5               	rrf	___fladd@b+3,f
  8312  16C7  0CD4               	rrf	___fladd@b+2,f
  8313  16C8  0CD3               	rrf	___fladd@b+1,f
  8314  16C9  0CD2               	rrf	___fladd@b,f
  8315  16CA  0BDA               	decfsz	??___fladd& (0+127),f
  8316  16CB  2EC5               	goto	u3735
  8317  16CC                     l2653:
  8318  16CC  3001               	movlw	1
  8319  16CD  00DA               	movwf	??___fladd
  8320  16CE  085A               	movf	??___fladd,w
  8321  16CF  07E4               	addwf	___fladd@bexp,f
  8322  16D0  2F85               	goto	l2689
  8323  16D1                     l2655:
  8324  16D1  0855               	movf	___fladd@b+3,w
  8325  16D2  3A80               	xorlw	128
  8326  16D3  00FF               	movwf	btemp+1
  8327  16D4  0859               	movf	___fladd@a+3,w
  8328  16D5  3A80               	xorlw	128
  8329  16D6  027F               	subwf	btemp+1,w
  8330  16D7  1D03               	skipz
  8331  16D8  2EE3               	goto	u3743
  8332  16D9  0858               	movf	___fladd@a+2,w
  8333  16DA  0254               	subwf	___fladd@b+2,w
  8334  16DB  1D03               	skipz
  8335  16DC  2EE3               	goto	u3743
  8336  16DD  0857               	movf	___fladd@a+1,w
  8337  16DE  0253               	subwf	___fladd@b+1,w
  8338  16DF  1D03               	skipz
  8339  16E0  2EE3               	goto	u3743
  8340  16E1  0856               	movf	___fladd@a,w
  8341  16E2  0252               	subwf	___fladd@b,w
  8342  16E3                     u3743:
  8343  16E3  1803               	skipnc
  8344  16E4  2EE6               	goto	u3741
  8345  16E5  2EE7               	goto	u3740
  8346  16E6                     u3741:
  8347  16E6  2F3F               	goto	l2665
  8348  16E7                     u3740:
  8349  16E7                     l2657:
  8350  16E7  30FF               	movlw	255
  8351  16E8  00DA               	movwf	??___fladd
  8352  16E9  30FF               	movlw	255
  8353  16EA  00DB               	movwf	??___fladd+1
  8354  16EB  30FF               	movlw	255
  8355  16EC  00DC               	movwf	??___fladd+2
  8356  16ED  30FF               	movlw	255
  8357  16EE  00DD               	movwf	??___fladd+3
  8358  16EF  0856               	movf	___fladd@a,w
  8359  16F0  00DE               	movwf	??___fladd+4
  8360  16F1  0857               	movf	___fladd@a+1,w
  8361  16F2  00DF               	movwf	??___fladd+5
  8362  16F3  0858               	movf	___fladd@a+2,w
  8363  16F4  00E0               	movwf	??___fladd+6
  8364  16F5  0859               	movf	___fladd@a+3,w
  8365  16F6  00E1               	movwf	??___fladd+7
  8366  16F7  0852               	movf	___fladd@b,w
  8367  16F8  02DE               	subwf	??___fladd+4,f
  8368  16F9  0853               	movf	___fladd@b+1,w
  8369  16FA  1C03               	skipc
  8370  16FB  0F53               	incfsz	___fladd@b+1,w
  8371  16FC  2EFE               	goto	u3751
  8372  16FD  2EFF               	goto	u3752
  8373  16FE                     u3751:
  8374  16FE  02DF               	subwf	??___fladd+5,f
  8375  16FF                     u3752:
  8376  16FF  0854               	movf	___fladd@b+2,w
  8377  1700  1C03               	skipc
  8378  1701  0F54               	incfsz	___fladd@b+2,w
  8379  1702  2F04               	goto	u3753
  8380  1703  2F05               	goto	u3754
  8381  1704                     u3753:
  8382  1704  02E0               	subwf	??___fladd+6,f
  8383  1705                     u3754:
  8384  1705  0855               	movf	___fladd@b+3,w
  8385  1706  1C03               	skipc
  8386  1707  0F55               	incfsz	___fladd@b+3,w
  8387  1708  2F0A               	goto	u3755
  8388  1709  2F0B               	goto	u3756
  8389  170A                     u3755:
  8390  170A  02E1               	subwf	??___fladd+7,f
  8391  170B                     u3756:
  8392  170B  085E               	movf	??___fladd+4,w
  8393  170C  07DA               	addwf	??___fladd,f
  8394  170D  085F               	movf	??___fladd+5,w
  8395  170E  1803               	skipnc
  8396  170F  0F5F               	incfsz	??___fladd+5,w
  8397  1710  2F12               	goto	u3760
  8398  1711  2F13               	goto	u3761
  8399  1712                     u3760:
  8400  1712  07DB               	addwf	??___fladd+1,f
  8401  1713                     u3761:
  8402  1713  0860               	movf	??___fladd+6,w
  8403  1714  1803               	skipnc
  8404  1715  0F60               	incfsz	??___fladd+6,w
  8405  1716  2F18               	goto	u3762
  8406  1717  2F19               	goto	u3763
  8407  1718                     u3762:
  8408  1718  07DC               	addwf	??___fladd+2,f
  8409  1719                     u3763:
  8410  1719  0861               	movf	??___fladd+7,w
  8411  171A  1803               	skipnc
  8412  171B  0A61               	incf	??___fladd+7,w
  8413  171C  07DD               	addwf	??___fladd+3,f
  8414  171D  085D               	movf	??___fladd+3,w
  8415  171E  00D5               	movwf	___fladd@b+3
  8416  171F  085C               	movf	??___fladd+2,w
  8417  1720  00D4               	movwf	___fladd@b+2
  8418  1721  085B               	movf	??___fladd+1,w
  8419  1722  00D3               	movwf	___fladd@b+1
  8420  1723  085A               	movf	??___fladd,w
  8421  1724  00D2               	movwf	___fladd@b
  8422  1725                     l2659:
  8423  1725  3080               	movlw	128
  8424  1726  00DA               	movwf	??___fladd
  8425  1727  085A               	movf	??___fladd,w
  8426  1728  06E2               	xorwf	___fladd@signs,f
  8427  1729  09E5               	comf	___fladd@grs,f
  8428  172A  0AE5               	incf	___fladd@grs,f
  8429  172B                     l2661:
  8430  172B  0865               	movf	___fladd@grs,w
  8431  172C  1D03               	btfss	3,2
  8432  172D  2F2F               	goto	u3771
  8433  172E  2F30               	goto	u3770
  8434  172F                     u3771:
  8435  172F  2F4D               	goto	l662
  8436  1730                     u3770:
  8437  1730                     l2663:
  8438  1730  3001               	movlw	1
  8439  1731  07D2               	addwf	___fladd@b,f
  8440  1732  3000               	movlw	0
  8441  1733  1803               	skipnc
  8442  1734  3001               	movlw	1
  8443  1735  07D3               	addwf	___fladd@b+1,f
  8444  1736  3000               	movlw	0
  8445  1737  1803               	skipnc
  8446  1738  3001               	movlw	1
  8447  1739  07D4               	addwf	___fladd@b+2,f
  8448  173A  3000               	movlw	0
  8449  173B  1803               	skipnc
  8450  173C  3001               	movlw	1
  8451  173D  07D5               	addwf	___fladd@b+3,f
  8452  173E  2F4D               	goto	l662
  8453  173F                     l2665:
  8454  173F  0856               	movf	___fladd@a,w
  8455  1740  02D2               	subwf	___fladd@b,f
  8456  1741  0857               	movf	___fladd@a+1,w
  8457  1742  1C03               	skipc
  8458  1743  0F57               	incfsz	___fladd@a+1,w
  8459  1744  02D3               	subwf	___fladd@b+1,f
  8460  1745  0858               	movf	___fladd@a+2,w
  8461  1746  1C03               	skipc
  8462  1747  0F58               	incfsz	___fladd@a+2,w
  8463  1748  02D4               	subwf	___fladd@b+2,f
  8464  1749  0859               	movf	___fladd@a+3,w
  8465  174A  1C03               	skipc
  8466  174B  0F59               	incfsz	___fladd@a+3,w
  8467  174C  02D5               	subwf	___fladd@b+3,f
  8468  174D                     l662:
  8469  174D  0855               	movf	___fladd@b+3,w
  8470  174E  0454               	iorwf	___fladd@b+2,w
  8471  174F  0453               	iorwf	___fladd@b+1,w
  8472  1750  0452               	iorwf	___fladd@b,w
  8473  1751  1D03               	skipz
  8474  1752  2F54               	goto	u3781
  8475  1753  2F55               	goto	u3780
  8476  1754                     u3781:
  8477  1754  2F81               	goto	l2687
  8478  1755                     u3780:
  8479  1755                     l2667:
  8480  1755  0865               	movf	___fladd@grs,w
  8481  1756  1D03               	btfss	3,2
  8482  1757  2F59               	goto	u3791
  8483  1758  2F5A               	goto	u3790
  8484  1759                     u3791:
  8485  1759  2F81               	goto	l2687
  8486  175A                     u3790:
  8487  175A                     l2669:
  8488  175A  3000               	movlw	0
  8489  175B  00D5               	movwf	?___fladd+3
  8490  175C  3000               	movlw	0
  8491  175D  00D4               	movwf	?___fladd+2
  8492  175E  3000               	movlw	0
  8493  175F  00D3               	movwf	?___fladd+1
  8494  1760  3000               	movlw	0
  8495  1761  00D2               	movwf	?___fladd
  8496  1762  2FFF               	goto	l654
  8497  1763                     l2673:
  8498  1763  3001               	movlw	1
  8499  1764  00DA               	movwf	??___fladd
  8500  1765                     u3805:
  8501  1765  1003               	clrc
  8502  1766  0DD2               	rlf	___fladd@b,f
  8503  1767  0DD3               	rlf	___fladd@b+1,f
  8504  1768  0DD4               	rlf	___fladd@b+2,f
  8505  1769  0DD5               	rlf	___fladd@b+3,f
  8506  176A  0BDA               	decfsz	??___fladd,f
  8507  176B  2F65               	goto	u3805
  8508  176C                     l2675:
  8509  176C  1FE5               	btfss	___fladd@grs,7
  8510  176D  2F6F               	goto	u3811
  8511  176E  2F70               	goto	u3810
  8512  176F                     u3811:
  8513  176F  2F71               	goto	l666
  8514  1770                     u3810:
  8515  1770                     l2677:
  8516  1770  1452               	bsf	___fladd@b,0
  8517  1771                     l666:
  8518  1771  1C65               	btfss	___fladd@grs,0
  8519  1772  2F74               	goto	u3821
  8520  1773  2F75               	goto	u3820
  8521  1774                     u3821:
  8522  1774  2F78               	goto	l2681
  8523  1775                     u3820:
  8524  1775                     l2679:
  8525  1775  1403               	setc
  8526  1776  0DE5               	rlf	___fladd@grs,f
  8527  1777  2F7A               	goto	l2683
  8528  1778                     l2681:
  8529  1778  1003               	clrc
  8530  1779  0DE5               	rlf	___fladd@grs,f
  8531  177A                     l2683:
  8532  177A  0864               	movf	___fladd@bexp,w
  8533  177B  1903               	btfsc	3,2
  8534  177C  2F7E               	goto	u3831
  8535  177D  2F7F               	goto	u3830
  8536  177E                     u3831:
  8537  177E  2F81               	goto	l2687
  8538  177F                     u3830:
  8539  177F                     l2685:
  8540  177F  3001               	movlw	1
  8541  1780  02E4               	subwf	___fladd@bexp,f
  8542  1781                     l2687:
  8543  1781  1FD4               	btfss	___fladd@b+2,7
  8544  1782  2F84               	goto	u3841
  8545  1783  2F85               	goto	u3840
  8546  1784                     u3841:
  8547  1784  2F63               	goto	l2673
  8548  1785                     u3840:
  8549  1785                     l2689:
  8550  1785  01E3               	clrf	___fladd@aexp
  8551  1786                     l2691:
  8552  1786  1FE5               	btfss	___fladd@grs,7
  8553  1787  2F89               	goto	u3851
  8554  1788  2F8A               	goto	u3850
  8555  1789                     u3851:
  8556  1789  2F98               	goto	l2699
  8557  178A                     u3850:
  8558  178A                     l2693:
  8559  178A  0865               	movf	___fladd@grs,w
  8560  178B  397F               	andlw	127
  8561  178C  1903               	btfsc	3,2
  8562  178D  2F8F               	goto	u3861
  8563  178E  2F90               	goto	u3860
  8564  178F                     u3861:
  8565  178F  2F93               	goto	l672
  8566  1790                     u3860:
  8567  1790                     l2695:
  8568  1790  01E3               	clrf	___fladd@aexp
  8569  1791  0AE3               	incf	___fladd@aexp,f
  8570  1792  2F98               	goto	l2699
  8571  1793                     l672:
  8572  1793  1C52               	btfss	___fladd@b,0
  8573  1794  2F96               	goto	u3871
  8574  1795  2F97               	goto	u3870
  8575  1796                     u3871:
  8576  1796  2F98               	goto	l2699
  8577  1797                     u3870:
  8578  1797  2F90               	goto	l2695
  8579  1798                     l2699:
  8580  1798  0863               	movf	___fladd@aexp,w
  8581  1799  1903               	btfsc	3,2
  8582  179A  2F9C               	goto	u3881
  8583  179B  2F9D               	goto	u3880
  8584  179C                     u3881:
  8585  179C  2FD1               	goto	l675
  8586  179D                     u3880:
  8587  179D                     l2701:
  8588  179D  3001               	movlw	1
  8589  179E  07D2               	addwf	___fladd@b,f
  8590  179F  3000               	movlw	0
  8591  17A0  1803               	skipnc
  8592  17A1  3001               	movlw	1
  8593  17A2  07D3               	addwf	___fladd@b+1,f
  8594  17A3  3000               	movlw	0
  8595  17A4  1803               	skipnc
  8596  17A5  3001               	movlw	1
  8597  17A6  07D4               	addwf	___fladd@b+2,f
  8598  17A7  3000               	movlw	0
  8599  17A8  1803               	skipnc
  8600  17A9  3001               	movlw	1
  8601  17AA  07D5               	addwf	___fladd@b+3,f
  8602  17AB                     l2703:
  8603  17AB  1C55               	btfss	___fladd@b+3,0
  8604  17AC  2FAE               	goto	u3891
  8605  17AD  2FAF               	goto	u3890
  8606  17AE                     u3891:
  8607  17AE  2FD1               	goto	l675
  8608  17AF                     u3890:
  8609  17AF                     l2705:
  8610  17AF  0852               	movf	___fladd@b,w
  8611  17B0  00DA               	movwf	??___fladd
  8612  17B1  0853               	movf	___fladd@b+1,w
  8613  17B2  00DB               	movwf	??___fladd+1
  8614  17B3  0854               	movf	___fladd@b+2,w
  8615  17B4  00DC               	movwf	??___fladd+2
  8616  17B5  0855               	movf	___fladd@b+3,w
  8617  17B6  00DD               	movwf	??___fladd+3
  8618  17B7  3001               	movlw	1
  8619  17B8  00DE               	movwf	??___fladd+4
  8620  17B9                     u3905:
  8621  17B9  0D5D               	rlf	??___fladd+3,w
  8622  17BA  0CDD               	rrf	??___fladd+3,f
  8623  17BB  0CDC               	rrf	??___fladd+2,f
  8624  17BC  0CDB               	rrf	??___fladd+1,f
  8625  17BD  0CDA               	rrf	??___fladd,f
  8626  17BE                     u3900:
  8627  17BE  0BDE               	decfsz	??___fladd+4,f
  8628  17BF  2FB9               	goto	u3905
  8629  17C0  085D               	movf	??___fladd+3,w
  8630  17C1  00D5               	movwf	___fladd@b+3
  8631  17C2  085C               	movf	??___fladd+2,w
  8632  17C3  00D4               	movwf	___fladd@b+2
  8633  17C4  085B               	movf	??___fladd+1,w
  8634  17C5  00D3               	movwf	___fladd@b+1
  8635  17C6  085A               	movf	??___fladd,w
  8636  17C7  00D2               	movwf	___fladd@b
  8637  17C8  0A64               	incf	___fladd@bexp,w
  8638  17C9  1903               	btfsc	3,2
  8639  17CA  2FCC               	goto	u3911
  8640  17CB  2FCD               	goto	u3910
  8641  17CC                     u3911:
  8642  17CC  2FD1               	goto	l675
  8643  17CD                     u3910:
  8644  17CD                     l2707:
  8645  17CD  3001               	movlw	1
  8646  17CE  00DA               	movwf	??___fladd
  8647  17CF  085A               	movf	??___fladd,w
  8648  17D0  07E4               	addwf	___fladd@bexp,f
  8649  17D1                     l675:
  8650  17D1  0A64               	incf	___fladd@bexp,w
  8651  17D2  1903               	btfsc	3,2
  8652  17D3  2FD5               	goto	u3921
  8653  17D4  2FD6               	goto	u3920
  8654  17D5                     u3921:
  8655  17D5  2FDB               	goto	l2711
  8656  17D6                     u3920:
  8657  17D6                     l2709:
  8658  17D6  0864               	movf	___fladd@bexp,w
  8659  17D7  1D03               	btfss	3,2
  8660  17D8  2FDA               	goto	u3931
  8661  17D9  2FDB               	goto	u3930
  8662  17DA                     u3931:
  8663  17DA  2FE9               	goto	l2717
  8664  17DB                     u3930:
  8665  17DB                     l2711:
  8666  17DB  3000               	movlw	0
  8667  17DC  00D5               	movwf	___fladd@b+3
  8668  17DD  3000               	movlw	0
  8669  17DE  00D4               	movwf	___fladd@b+2
  8670  17DF  3000               	movlw	0
  8671  17E0  00D3               	movwf	___fladd@b+1
  8672  17E1  3000               	movlw	0
  8673  17E2  00D2               	movwf	___fladd@b
  8674  17E3                     l2713:
  8675  17E3  0864               	movf	___fladd@bexp,w
  8676  17E4  1D03               	btfss	3,2
  8677  17E5  2FE7               	goto	u3941
  8678  17E6  2FE8               	goto	u3940
  8679  17E7                     u3941:
  8680  17E7  2FE9               	goto	l2717
  8681  17E8                     u3940:
  8682  17E8                     l2715:
  8683  17E8  01E2               	clrf	___fladd@signs
  8684  17E9                     l2717:
  8685  17E9  1C64               	btfss	___fladd@bexp,0
  8686  17EA  2FEC               	goto	u3951
  8687  17EB  2FED               	goto	u3950
  8688  17EC                     u3951:
  8689  17EC  2FEF               	goto	l2721
  8690  17ED                     u3950:
  8691  17ED                     l2719:
  8692  17ED  17D4               	bsf	___fladd@b+2,7
  8693  17EE  2FF3               	goto	l683
  8694  17EF                     l2721:
  8695  17EF  307F               	movlw	127
  8696  17F0  00DA               	movwf	??___fladd
  8697  17F1  085A               	movf	??___fladd,w
  8698  17F2  05D4               	andwf	___fladd@b+2,f
  8699  17F3                     l683:
  8700  17F3  0864               	movf	___fladd@bexp,w
  8701  17F4  00DA               	movwf	??___fladd
  8702  17F5  1003               	clrc
  8703  17F6  0C5A               	rrf	??___fladd,w
  8704  17F7  00DB               	movwf	??___fladd+1
  8705  17F8  085B               	movf	??___fladd+1,w
  8706  17F9  00D5               	movwf	___fladd@b+3
  8707  17FA                     l2723:
  8708  17FA  1FE2               	btfss	___fladd@signs,7
  8709  17FB  2FFD               	goto	u3961
  8710  17FC  2FFE               	goto	u3960
  8711  17FD                     u3961:
  8712  17FD  2FFF               	goto	l684
  8713  17FE                     u3960:
  8714  17FE                     l2725:
  8715  17FE  17D5               	bsf	___fladd@b+3,7
  8716  17FF                     l684:
  8717  17FF                     l654:
  8718  17FF  0008               	return
  8719  1800                     __end_of___fladd:
  8720                           
  8721                           	psect	text19
  8722  1AC7                     __ptext19:	
  8723 ;; *************** function ___flneg *****************
  8724 ;; Defined at:
  8725 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\flneg.c"
  8726 ;; Parameters:    Size  Location     Type
  8727 ;;  f1              4    0[COMMON] unsigned char 
  8728 ;; Auto vars:     Size  Location     Type
  8729 ;;		None
  8730 ;; Return value:  Size  Location     Type
  8731 ;;                  4    0[COMMON] unsigned char 
  8732 ;; Registers used:
  8733 ;;		wreg
  8734 ;; Tracked objects:
  8735 ;;		On entry : 0/0
  8736 ;;		On exit  : 0/0
  8737 ;;		Unchanged: 0/0
  8738 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8739 ;;      Params:         4       0       0       0       0
  8740 ;;      Locals:         0       0       0       0       0
  8741 ;;      Temps:          0       0       0       0       0
  8742 ;;      Totals:         4       0       0       0       0
  8743 ;;Total ram usage:        4 bytes
  8744 ;; Hardware stack levels used:    1
  8745 ;; This function calls:
  8746 ;;		Nothing
  8747 ;; This function is called by:
  8748 ;;		_sprintf
  8749 ;; This function uses a non-reentrant model
  8750 ;;
  8751                           
  8752                           
  8753                           ;psect for function ___flneg
  8754  1AC7                     ___flneg:
  8755  1AC7                     l3125:	
  8756                           ;incstack = 0
  8757                           ; Regs used in ___flneg: [wreg]
  8758                           
  8759  1AC7  0873               	movf	___flneg@f1+3,w
  8760  1AC8  0472               	iorwf	___flneg@f1+2,w
  8761  1AC9  0471               	iorwf	___flneg@f1+1,w
  8762  1ACA  0470               	iorwf	___flneg@f1,w
  8763  1ACB  1903               	skipnz
  8764  1ACC  2ACE               	goto	u5081
  8765  1ACD  2ACF               	goto	u5080
  8766  1ACE                     u5081:
  8767  1ACE  2AD1               	goto	l3129
  8768  1ACF                     u5080:
  8769  1ACF                     l3127:
  8770  1ACF  3080               	movlw	128
  8771  1AD0  06F3               	xorwf	___flneg@f1+3,f
  8772  1AD1                     l3129:
  8773  1AD1                     l513:
  8774  1AD1  0008               	return
  8775  1AD2                     __end_of___flneg:
  8776                           
  8777                           	psect	text20
  8778  1F5E                     __ptext20:	
  8779 ;; *************** function ___flge *****************
  8780 ;; Defined at:
  8781 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\flge.c"
  8782 ;; Parameters:    Size  Location     Type
  8783 ;;  ff1             4    0[COMMON] unsigned char 
  8784 ;;  ff2             4    4[COMMON] unsigned char 
  8785 ;; Auto vars:     Size  Location     Type
  8786 ;;		None
  8787 ;; Return value:  Size  Location     Type
  8788 ;;		None               void
  8789 ;; Registers used:
  8790 ;;		wreg, status,2, status,0
  8791 ;; Tracked objects:
  8792 ;;		On entry : 0/0
  8793 ;;		On exit  : 0/0
  8794 ;;		Unchanged: 0/0
  8795 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8796 ;;      Params:         8       0       0       0       0
  8797 ;;      Locals:         0       0       0       0       0
  8798 ;;      Temps:          4       0       0       0       0
  8799 ;;      Totals:        12       0       0       0       0
  8800 ;;Total ram usage:       12 bytes
  8801 ;; Hardware stack levels used:    1
  8802 ;; This function calls:
  8803 ;;		Nothing
  8804 ;; This function is called by:
  8805 ;;		_sprintf
  8806 ;; This function uses a non-reentrant model
  8807 ;;
  8808                           
  8809                           
  8810                           ;psect for function ___flge
  8811  1F5E                     ___flge:
  8812  1F5E                     l3105:	
  8813                           ;incstack = 0
  8814                           ; Regs used in ___flge: [wreg+status,2+status,0]
  8815                           
  8816  1F5E  3000               	movlw	0
  8817  1F5F  0570               	andwf	___flge@ff1,w
  8818  1F60  00F8               	movwf	??___flge
  8819  1F61  3000               	movlw	0
  8820  1F62  0571               	andwf	___flge@ff1+1,w
  8821  1F63  00F9               	movwf	??___flge+1
  8822  1F64  3080               	movlw	128
  8823  1F65  0572               	andwf	___flge@ff1+2,w
  8824  1F66  00FA               	movwf	??___flge+2
  8825  1F67  307F               	movlw	127
  8826  1F68  0573               	andwf	___flge@ff1+3,w
  8827  1F69  00FB               	movwf	??___flge+3
  8828  1F6A  087B               	movf	??___flge+3,w
  8829  1F6B  047A               	iorwf	??___flge+2,w
  8830  1F6C  0479               	iorwf	??___flge+1,w
  8831  1F6D  0478               	iorwf	??___flge,w
  8832  1F6E  1D03               	skipz
  8833  1F6F  2F71               	goto	u5011
  8834  1F70  2F72               	goto	u5010
  8835  1F71                     u5011:
  8836  1F71  2F7A               	goto	l505
  8837  1F72                     u5010:
  8838  1F72                     l3107:
  8839  1F72  3000               	movlw	0
  8840  1F73  00F3               	movwf	___flge@ff1+3
  8841  1F74  3000               	movlw	0
  8842  1F75  00F2               	movwf	___flge@ff1+2
  8843  1F76  3000               	movlw	0
  8844  1F77  00F1               	movwf	___flge@ff1+1
  8845  1F78  3000               	movlw	0
  8846  1F79  00F0               	movwf	___flge@ff1
  8847  1F7A                     l505:
  8848  1F7A  3000               	movlw	0
  8849  1F7B  0574               	andwf	___flge@ff2,w
  8850  1F7C  00F8               	movwf	??___flge
  8851  1F7D  3000               	movlw	0
  8852  1F7E  0575               	andwf	___flge@ff2+1,w
  8853  1F7F  00F9               	movwf	??___flge+1
  8854  1F80  3080               	movlw	128
  8855  1F81  0576               	andwf	___flge@ff2+2,w
  8856  1F82  00FA               	movwf	??___flge+2
  8857  1F83  307F               	movlw	127
  8858  1F84  0577               	andwf	___flge@ff2+3,w
  8859  1F85  00FB               	movwf	??___flge+3
  8860  1F86  087B               	movf	??___flge+3,w
  8861  1F87  047A               	iorwf	??___flge+2,w
  8862  1F88  0479               	iorwf	??___flge+1,w
  8863  1F89  0478               	iorwf	??___flge,w
  8864  1F8A  1D03               	skipz
  8865  1F8B  2F8D               	goto	u5021
  8866  1F8C  2F8E               	goto	u5020
  8867  1F8D                     u5021:
  8868  1F8D  2F96               	goto	l3111
  8869  1F8E                     u5020:
  8870  1F8E                     l3109:
  8871  1F8E  3000               	movlw	0
  8872  1F8F  00F7               	movwf	___flge@ff2+3
  8873  1F90  3000               	movlw	0
  8874  1F91  00F6               	movwf	___flge@ff2+2
  8875  1F92  3000               	movlw	0
  8876  1F93  00F5               	movwf	___flge@ff2+1
  8877  1F94  3000               	movlw	0
  8878  1F95  00F4               	movwf	___flge@ff2
  8879  1F96                     l3111:
  8880  1F96  1FF3               	btfss	___flge@ff1+3,7
  8881  1F97  2F99               	goto	u5031
  8882  1F98  2F9A               	goto	u5030
  8883  1F99                     u5031:
  8884  1F99  2FBE               	goto	l3115
  8885  1F9A                     u5030:
  8886  1F9A                     l3113:
  8887  1F9A  3000               	movlw	0
  8888  1F9B  00F8               	movwf	??___flge
  8889  1F9C  3000               	movlw	0
  8890  1F9D  00F9               	movwf	??___flge+1
  8891  1F9E  3000               	movlw	0
  8892  1F9F  00FA               	movwf	??___flge+2
  8893  1FA0  3080               	movlw	128
  8894  1FA1  00FB               	movwf	??___flge+3
  8895  1FA2  0870               	movf	___flge@ff1,w
  8896  1FA3  02F8               	subwf	??___flge,f
  8897  1FA4  0871               	movf	___flge@ff1+1,w
  8898  1FA5  1C03               	skipc
  8899  1FA6  0F71               	incfsz	___flge@ff1+1,w
  8900  1FA7  2FA9               	goto	u5041
  8901  1FA8  2FAA               	goto	u5042
  8902  1FA9                     u5041:
  8903  1FA9  02F9               	subwf	??___flge+1,f
  8904  1FAA                     u5042:
  8905  1FAA  0872               	movf	___flge@ff1+2,w
  8906  1FAB  1C03               	skipc
  8907  1FAC  0F72               	incfsz	___flge@ff1+2,w
  8908  1FAD  2FAF               	goto	u5043
  8909  1FAE  2FB0               	goto	u5044
  8910  1FAF                     u5043:
  8911  1FAF  02FA               	subwf	??___flge+2,f
  8912  1FB0                     u5044:
  8913  1FB0  0873               	movf	___flge@ff1+3,w
  8914  1FB1  1C03               	skipc
  8915  1FB2  0F73               	incfsz	___flge@ff1+3,w
  8916  1FB3  2FB5               	goto	u5045
  8917  1FB4  2FB6               	goto	u5046
  8918  1FB5                     u5045:
  8919  1FB5  02FB               	subwf	??___flge+3,f
  8920  1FB6                     u5046:
  8921  1FB6  087B               	movf	??___flge+3,w
  8922  1FB7  00F3               	movwf	___flge@ff1+3
  8923  1FB8  087A               	movf	??___flge+2,w
  8924  1FB9  00F2               	movwf	___flge@ff1+2
  8925  1FBA  0879               	movf	??___flge+1,w
  8926  1FBB  00F1               	movwf	___flge@ff1+1
  8927  1FBC  0878               	movf	??___flge,w
  8928  1FBD  00F0               	movwf	___flge@ff1
  8929  1FBE                     l3115:
  8930  1FBE  1FF7               	btfss	___flge@ff2+3,7
  8931  1FBF  2FC1               	goto	u5051
  8932  1FC0  2FC2               	goto	u5050
  8933  1FC1                     u5051:
  8934  1FC1  2FE6               	goto	l508
  8935  1FC2                     u5050:
  8936  1FC2                     l3117:
  8937  1FC2  3000               	movlw	0
  8938  1FC3  00F8               	movwf	??___flge
  8939  1FC4  3000               	movlw	0
  8940  1FC5  00F9               	movwf	??___flge+1
  8941  1FC6  3000               	movlw	0
  8942  1FC7  00FA               	movwf	??___flge+2
  8943  1FC8  3080               	movlw	128
  8944  1FC9  00FB               	movwf	??___flge+3
  8945  1FCA  0874               	movf	___flge@ff2,w
  8946  1FCB  02F8               	subwf	??___flge,f
  8947  1FCC  0875               	movf	___flge@ff2+1,w
  8948  1FCD  1C03               	skipc
  8949  1FCE  0F75               	incfsz	___flge@ff2+1,w
  8950  1FCF  2FD1               	goto	u5061
  8951  1FD0  2FD2               	goto	u5062
  8952  1FD1                     u5061:
  8953  1FD1  02F9               	subwf	??___flge+1,f
  8954  1FD2                     u5062:
  8955  1FD2  0876               	movf	___flge@ff2+2,w
  8956  1FD3  1C03               	skipc
  8957  1FD4  0F76               	incfsz	___flge@ff2+2,w
  8958  1FD5  2FD7               	goto	u5063
  8959  1FD6  2FD8               	goto	u5064
  8960  1FD7                     u5063:
  8961  1FD7  02FA               	subwf	??___flge+2,f
  8962  1FD8                     u5064:
  8963  1FD8  0877               	movf	___flge@ff2+3,w
  8964  1FD9  1C03               	skipc
  8965  1FDA  0F77               	incfsz	___flge@ff2+3,w
  8966  1FDB  2FDD               	goto	u5065
  8967  1FDC  2FDE               	goto	u5066
  8968  1FDD                     u5065:
  8969  1FDD  02FB               	subwf	??___flge+3,f
  8970  1FDE                     u5066:
  8971  1FDE  087B               	movf	??___flge+3,w
  8972  1FDF  00F7               	movwf	___flge@ff2+3
  8973  1FE0  087A               	movf	??___flge+2,w
  8974  1FE1  00F6               	movwf	___flge@ff2+2
  8975  1FE2  0879               	movf	??___flge+1,w
  8976  1FE3  00F5               	movwf	___flge@ff2+1
  8977  1FE4  0878               	movf	??___flge,w
  8978  1FE5  00F4               	movwf	___flge@ff2
  8979  1FE6                     l508:
  8980  1FE6  3080               	movlw	128
  8981  1FE7  06F3               	xorwf	___flge@ff1+3,f
  8982  1FE8  3080               	movlw	128
  8983  1FE9  06F7               	xorwf	___flge@ff2+3,f
  8984  1FEA  0877               	movf	___flge@ff2+3,w
  8985  1FEB  0273               	subwf	___flge@ff1+3,w
  8986  1FEC  1D03               	skipz
  8987  1FED  2FF8               	goto	u5075
  8988  1FEE  0876               	movf	___flge@ff2+2,w
  8989  1FEF  0272               	subwf	___flge@ff1+2,w
  8990  1FF0  1D03               	skipz
  8991  1FF1  2FF8               	goto	u5075
  8992  1FF2  0875               	movf	___flge@ff2+1,w
  8993  1FF3  0271               	subwf	___flge@ff1+1,w
  8994  1FF4  1D03               	skipz
  8995  1FF5  2FF8               	goto	u5075
  8996  1FF6  0874               	movf	___flge@ff2,w
  8997  1FF7  0270               	subwf	___flge@ff1,w
  8998  1FF8                     u5075:
  8999  1FF8  1803               	skipnc
  9000  1FF9  2FFB               	goto	u5071
  9001  1FFA  2FFC               	goto	u5070
  9002  1FFB                     u5071:
  9003  1FFB  2FFE               	goto	l3121
  9004  1FFC                     u5070:
  9005  1FFC                     l3119:
  9006  1FFC  1003               	clrc
  9007  1FFD  2FFF               	goto	l509
  9008  1FFE                     l3121:
  9009  1FFE  1403               	setc
  9010  1FFF                     l509:
  9011  1FFF  0008               	return
  9012  2000                     __end_of___flge:
  9013                           
  9014                           	psect	text21
  9015  1C3D                     __ptext21:	
  9016 ;; *************** function ___fleq *****************
  9017 ;; Defined at:
  9018 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fleq.c"
  9019 ;; Parameters:    Size  Location     Type
  9020 ;;  ff1             4    0[COMMON] unsigned char 
  9021 ;;  ff2             4    4[COMMON] unsigned char 
  9022 ;; Auto vars:     Size  Location     Type
  9023 ;;		None
  9024 ;; Return value:  Size  Location     Type
  9025 ;;		None               void
  9026 ;; Registers used:
  9027 ;;		wreg, status,2, status,0
  9028 ;; Tracked objects:
  9029 ;;		On entry : 0/0
  9030 ;;		On exit  : 0/0
  9031 ;;		Unchanged: 0/0
  9032 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9033 ;;      Params:         8       0       0       0       0
  9034 ;;      Locals:         0       0       0       0       0
  9035 ;;      Temps:          4       0       0       0       0
  9036 ;;      Totals:        12       0       0       0       0
  9037 ;;Total ram usage:       12 bytes
  9038 ;; Hardware stack levels used:    1
  9039 ;; This function calls:
  9040 ;;		Nothing
  9041 ;; This function is called by:
  9042 ;;		_sprintf
  9043 ;; This function uses a non-reentrant model
  9044 ;;
  9045                           
  9046                           
  9047                           ;psect for function ___fleq
  9048  1C3D                     ___fleq:
  9049  1C3D                     l3093:	
  9050                           ;incstack = 0
  9051                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  9052                           
  9053  1C3D  3000               	movlw	0
  9054  1C3E  0570               	andwf	___fleq@ff1,w
  9055  1C3F  00F8               	movwf	??___fleq
  9056  1C40  3000               	movlw	0
  9057  1C41  0571               	andwf	___fleq@ff1+1,w
  9058  1C42  00F9               	movwf	??___fleq+1
  9059  1C43  3080               	movlw	128
  9060  1C44  0572               	andwf	___fleq@ff1+2,w
  9061  1C45  00FA               	movwf	??___fleq+2
  9062  1C46  307F               	movlw	127
  9063  1C47  0573               	andwf	___fleq@ff1+3,w
  9064  1C48  00FB               	movwf	??___fleq+3
  9065  1C49  087B               	movf	??___fleq+3,w
  9066  1C4A  047A               	iorwf	??___fleq+2,w
  9067  1C4B  0479               	iorwf	??___fleq+1,w
  9068  1C4C  0478               	iorwf	??___fleq,w
  9069  1C4D  1D03               	skipz
  9070  1C4E  2C50               	goto	u4981
  9071  1C4F  2C51               	goto	u4980
  9072  1C50                     u4981:
  9073  1C50  2C59               	goto	l500
  9074  1C51                     u4980:
  9075  1C51                     l3095:
  9076  1C51  3000               	movlw	0
  9077  1C52  00F3               	movwf	___fleq@ff1+3
  9078  1C53  3000               	movlw	0
  9079  1C54  00F2               	movwf	___fleq@ff1+2
  9080  1C55  3000               	movlw	0
  9081  1C56  00F1               	movwf	___fleq@ff1+1
  9082  1C57  3000               	movlw	0
  9083  1C58  00F0               	movwf	___fleq@ff1
  9084  1C59                     l500:
  9085  1C59  3000               	movlw	0
  9086  1C5A  0574               	andwf	___fleq@ff2,w
  9087  1C5B  00F8               	movwf	??___fleq
  9088  1C5C  3000               	movlw	0
  9089  1C5D  0575               	andwf	___fleq@ff2+1,w
  9090  1C5E  00F9               	movwf	??___fleq+1
  9091  1C5F  3080               	movlw	128
  9092  1C60  0576               	andwf	___fleq@ff2+2,w
  9093  1C61  00FA               	movwf	??___fleq+2
  9094  1C62  307F               	movlw	127
  9095  1C63  0577               	andwf	___fleq@ff2+3,w
  9096  1C64  00FB               	movwf	??___fleq+3
  9097  1C65  087B               	movf	??___fleq+3,w
  9098  1C66  047A               	iorwf	??___fleq+2,w
  9099  1C67  0479               	iorwf	??___fleq+1,w
  9100  1C68  0478               	iorwf	??___fleq,w
  9101  1C69  1D03               	skipz
  9102  1C6A  2C6C               	goto	u4991
  9103  1C6B  2C6D               	goto	u4990
  9104  1C6C                     u4991:
  9105  1C6C  2C75               	goto	l501
  9106  1C6D                     u4990:
  9107  1C6D                     l3097:
  9108  1C6D  3000               	movlw	0
  9109  1C6E  00F7               	movwf	___fleq@ff2+3
  9110  1C6F  3000               	movlw	0
  9111  1C70  00F6               	movwf	___fleq@ff2+2
  9112  1C71  3000               	movlw	0
  9113  1C72  00F5               	movwf	___fleq@ff2+1
  9114  1C73  3000               	movlw	0
  9115  1C74  00F4               	movwf	___fleq@ff2
  9116  1C75                     l501:
  9117  1C75  0877               	movf	___fleq@ff2+3,w
  9118  1C76  0673               	xorwf	___fleq@ff1+3,w
  9119  1C77  1D03               	skipz
  9120  1C78  2C83               	goto	u5005
  9121  1C79  0876               	movf	___fleq@ff2+2,w
  9122  1C7A  0672               	xorwf	___fleq@ff1+2,w
  9123  1C7B  1D03               	skipz
  9124  1C7C  2C83               	goto	u5005
  9125  1C7D  0875               	movf	___fleq@ff2+1,w
  9126  1C7E  0671               	xorwf	___fleq@ff1+1,w
  9127  1C7F  1D03               	skipz
  9128  1C80  2C83               	goto	u5005
  9129  1C81  0874               	movf	___fleq@ff2,w
  9130  1C82  0670               	xorwf	___fleq@ff1,w
  9131  1C83                     u5005:
  9132  1C83  1903               	skipnz
  9133  1C84  2C86               	goto	u5001
  9134  1C85  2C87               	goto	u5000
  9135  1C86                     u5001:
  9136  1C86  2C89               	goto	l3101
  9137  1C87                     u5000:
  9138  1C87                     l3099:
  9139  1C87  1003               	clrc
  9140  1C88  2C8A               	goto	l502
  9141  1C89                     l3101:
  9142  1C89  1403               	setc
  9143  1C8A                     l502:
  9144  1C8A  0008               	return
  9145  1C8B                     __end_of___fleq:
  9146                           
  9147                           	psect	text22
  9148  1B0B                     __ptext22:	
  9149 ;; *************** function _lcd_puts *****************
  9150 ;; Defined at:
  9151 ;;		line 94 in file "lcd.c"
  9152 ;; Parameters:    Size  Location     Type
  9153 ;;  str             1    wreg     PTR unsigned char 
  9154 ;;		 -> buffer(16), 
  9155 ;; Auto vars:     Size  Location     Type
  9156 ;;  str             1   10[COMMON] PTR unsigned char 
  9157 ;;		 -> buffer(16), 
  9158 ;;  i               2   11[COMMON] int 
  9159 ;; Return value:  Size  Location     Type
  9160 ;;                  1    wreg      void 
  9161 ;; Registers used:
  9162 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9163 ;; Tracked objects:
  9164 ;;		On entry : 0/0
  9165 ;;		On exit  : 0/0
  9166 ;;		Unchanged: 0/0
  9167 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9168 ;;      Params:         0       0       0       0       0
  9169 ;;      Locals:         3       0       0       0       0
  9170 ;;      Temps:          1       0       0       0       0
  9171 ;;      Totals:         4       0       0       0       0
  9172 ;;Total ram usage:        4 bytes
  9173 ;; Hardware stack levels used:    1
  9174 ;; Hardware stack levels required when called:    3
  9175 ;; This function calls:
  9176 ;;		_lcd_data
  9177 ;; This function is called by:
  9178 ;;		_main
  9179 ;; This function uses a non-reentrant model
  9180 ;;
  9181                           
  9182                           
  9183                           ;psect for function _lcd_puts
  9184  1B0B                     _lcd_puts:
  9185                           
  9186                           ;incstack = 0
  9187                           ; Regs used in _lcd_puts: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9188                           ;lcd_puts@str stored from wreg
  9189  1B0B  00FA               	movwf	lcd_puts@str
  9190  1B0C                     l3863:
  9191                           
  9192                           ;lcd.c: 95:     for (int i = 0; str[i] != 0; i++)
  9193  1B0C  01FB               	clrf	lcd_puts@i
  9194  1B0D  01FC               	clrf	lcd_puts@i+1
  9195  1B0E  2B20               	goto	l3869
  9196  1B0F                     l3865:
  9197                           
  9198                           ;lcd.c: 96:         lcd_data(str[i]);
  9199  1B0F  087B               	movf	lcd_puts@i,w
  9200  1B10  077A               	addwf	lcd_puts@str,w
  9201  1B11  00F9               	movwf	??_lcd_puts
  9202  1B12  0879               	movf	??_lcd_puts,w
  9203  1B13  0084               	movwf	4
  9204  1B14  0800               	movf	0,w
  9205  1B15  160A  158A  22D2  160A  158A  	fcall	_lcd_data
  9206  1B1A                     l3867:
  9207  1B1A  3001               	movlw	1
  9208  1B1B  07FB               	addwf	lcd_puts@i,f
  9209  1B1C  1803               	skipnc
  9210  1B1D  0AFC               	incf	lcd_puts@i+1,f
  9211  1B1E  3000               	movlw	0
  9212  1B1F  07FC               	addwf	lcd_puts@i+1,f
  9213  1B20                     l3869:
  9214  1B20  087B               	movf	lcd_puts@i,w
  9215  1B21  077A               	addwf	lcd_puts@str,w
  9216  1B22  00F9               	movwf	??_lcd_puts
  9217  1B23  0879               	movf	??_lcd_puts,w
  9218  1B24  0084               	movwf	4
  9219  1B25  1783               	bsf	3,7	;select IRP bank2
  9220  1B26  0800               	movf	0,w
  9221  1B27  1D03               	btfss	3,2
  9222  1B28  2B2A               	goto	u6281
  9223  1B29  2B2B               	goto	u6280
  9224  1B2A                     u6281:
  9225  1B2A  2B0F               	goto	l3865
  9226  1B2B                     u6280:
  9227  1B2B                     l62:
  9228  1B2B  0008               	return
  9229  1B2C                     __end_of_lcd_puts:
  9230                           
  9231                           	psect	text23
  9232  1AD2                     __ptext23:	
  9233 ;; *************** function _lcd_data *****************
  9234 ;; Defined at:
  9235 ;;		line 64 in file "lcd.c"
  9236 ;; Parameters:    Size  Location     Type
  9237 ;;  a               1    wreg     unsigned char 
  9238 ;; Auto vars:     Size  Location     Type
  9239 ;;  a               1    8[COMMON] unsigned char 
  9240 ;; Return value:  Size  Location     Type
  9241 ;;                  1    wreg      void 
  9242 ;; Registers used:
  9243 ;;		wreg, status,2, status,0, pclath, cstack
  9244 ;; Tracked objects:
  9245 ;;		On entry : 0/0
  9246 ;;		On exit  : 0/0
  9247 ;;		Unchanged: 0/0
  9248 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9249 ;;      Params:         0       0       0       0       0
  9250 ;;      Locals:         1       0       0       0       0
  9251 ;;      Temps:          0       0       0       0       0
  9252 ;;      Totals:         1       0       0       0       0
  9253 ;;Total ram usage:        1 bytes
  9254 ;; Hardware stack levels used:    1
  9255 ;; Hardware stack levels required when called:    2
  9256 ;; This function calls:
  9257 ;;		_lcd_com
  9258 ;; This function is called by:
  9259 ;;		_lcd_puts
  9260 ;;		_hex2lcd
  9261 ;;		_LCD_ScrollMessage
  9262 ;;		_lcd_print_number
  9263 ;; This function uses a non-reentrant model
  9264 ;;
  9265                           
  9266                           
  9267                           ;psect for function _lcd_data
  9268  1AD2                     _lcd_data:
  9269                           
  9270                           ;incstack = 0
  9271                           ; Regs used in _lcd_data: [wreg+status,2+status,0+pclath+cstack]
  9272                           ;lcd_data@a stored from wreg
  9273  1AD2  00F8               	movwf	lcd_data@a
  9274  1AD3                     l3857:
  9275                           
  9276                           ;lcd.c: 65:     status = 1;
  9277  1AD3  1683               	bsf	3,5	;RP0=1, select bank1
  9278  1AD4  1303               	bcf	3,6	;RP1=0, select bank1
  9279  1AD5  1462               	bsf	(_status/(0+8))^(0+128),_status& (0+7)
  9280                           
  9281                           ;lcd.c: 66:     PORTDbits.RD0 = 1;
  9282  1AD6  1283               	bcf	3,5	;RP0=0, select bank0
  9283  1AD7  1303               	bcf	3,6	;RP1=0, select bank0
  9284  1AD8  1408               	bsf	8,0	;volatile
  9285  1AD9                     l3859:
  9286                           
  9287                           ;lcd.c: 67:     lcd_com(a);
  9288  1AD9  0878               	movf	lcd_data@a,w
  9289  1ADA  160A  158A  248B  160A  158A  	fcall	_lcd_com
  9290  1ADF                     l53:
  9291  1ADF  0008               	return
  9292  1AE0                     __end_of_lcd_data:
  9293                           
  9294                           	psect	text24
  9295  1EBE                     __ptext24:	
  9296 ;; *************** function _lcd_init *****************
  9297 ;; Defined at:
  9298 ;;		line 70 in file "lcd.c"
  9299 ;; Parameters:    Size  Location     Type
  9300 ;;		None
  9301 ;; Auto vars:     Size  Location     Type
  9302 ;;		None
  9303 ;; Return value:  Size  Location     Type
  9304 ;;                  1    wreg      void 
  9305 ;; Registers used:
  9306 ;;		wreg, status,2, status,0, pclath, cstack
  9307 ;; Tracked objects:
  9308 ;;		On entry : 0/0
  9309 ;;		On exit  : 0/0
  9310 ;;		Unchanged: 0/0
  9311 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9312 ;;      Params:         0       0       0       0       0
  9313 ;;      Locals:         0       0       0       0       0
  9314 ;;      Temps:          0       0       0       0       0
  9315 ;;      Totals:         0       0       0       0       0
  9316 ;;Total ram usage:        0 bytes
  9317 ;; Hardware stack levels used:    1
  9318 ;; Hardware stack levels required when called:    2
  9319 ;; This function calls:
  9320 ;;		_delay
  9321 ;;		_lcd_com
  9322 ;;		_lcd_init_write
  9323 ;; This function is called by:
  9324 ;;		_main
  9325 ;; This function uses a non-reentrant model
  9326 ;;
  9327                           
  9328                           
  9329                           ;psect for function _lcd_init
  9330  1EBE                     _lcd_init:
  9331  1EBE                     l3861:	
  9332                           ;incstack = 0
  9333                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  9334                           
  9335                           
  9336                           ;lcd.c: 71:     delay(300);
  9337  1EBE  302C               	movlw	44
  9338  1EBF  00F0               	movwf	delay@j
  9339  1EC0  3001               	movlw	1
  9340  1EC1  00F1               	movwf	delay@j+1
  9341  1EC2  160A  158A  22F5  160A  158A  	fcall	_delay
  9342                           
  9343                           ;lcd.c: 72:     lcd_init_write(0x30);
  9344  1EC7  3030               	movlw	48
  9345  1EC8  160A  158A  22E0  160A  158A  	fcall	_lcd_init_write
  9346                           
  9347                           ;lcd.c: 73:     delay(300);
  9348  1ECD  302C               	movlw	44
  9349  1ECE  00F0               	movwf	delay@j
  9350  1ECF  3001               	movlw	1
  9351  1ED0  00F1               	movwf	delay@j+1
  9352  1ED1  160A  158A  22F5  160A  158A  	fcall	_delay
  9353                           
  9354                           ;lcd.c: 74:     lcd_init_write(0x30);
  9355  1ED6  3030               	movlw	48
  9356  1ED7  160A  158A  22E0  160A  158A  	fcall	_lcd_init_write
  9357                           
  9358                           ;lcd.c: 75:     delay(300);
  9359  1EDC  302C               	movlw	44
  9360  1EDD  00F0               	movwf	delay@j
  9361  1EDE  3001               	movlw	1
  9362  1EDF  00F1               	movwf	delay@j+1
  9363  1EE0  160A  158A  22F5  160A  158A  	fcall	_delay
  9364                           
  9365                           ;lcd.c: 76:     lcd_init_write(0x30);
  9366  1EE5  3030               	movlw	48
  9367  1EE6  160A  158A  22E0  160A  158A  	fcall	_lcd_init_write
  9368                           
  9369                           ;lcd.c: 77:     delay(300);
  9370  1EEB  302C               	movlw	44
  9371  1EEC  00F0               	movwf	delay@j
  9372  1EED  3001               	movlw	1
  9373  1EEE  00F1               	movwf	delay@j+1
  9374  1EEF  160A  158A  22F5  160A  158A  	fcall	_delay
  9375                           
  9376                           ;lcd.c: 78:     lcd_init_write(0x20);
  9377  1EF4  3020               	movlw	32
  9378  1EF5  160A  158A  22E0  160A  158A  	fcall	_lcd_init_write
  9379                           
  9380                           ;lcd.c: 79:     delay(300);
  9381  1EFA  302C               	movlw	44
  9382  1EFB  00F0               	movwf	delay@j
  9383  1EFC  3001               	movlw	1
  9384  1EFD  00F1               	movwf	delay@j+1
  9385  1EFE  160A  158A  22F5  160A  158A  	fcall	_delay
  9386                           
  9387                           ;lcd.c: 80:     lcd_com(0xC);
  9388  1F03  300C               	movlw	12
  9389  1F04  160A  158A  248B  160A  158A  	fcall	_lcd_com
  9390                           
  9391                           ;lcd.c: 81:     delay(300);
  9392  1F09  302C               	movlw	44
  9393  1F0A  00F0               	movwf	delay@j
  9394  1F0B  3001               	movlw	1
  9395  1F0C  00F1               	movwf	delay@j+1
  9396  1F0D  160A  158A  22F5  160A  158A  	fcall	_delay
  9397                           
  9398                           ;lcd.c: 82:     lcd_com(0x28);
  9399  1F12  3028               	movlw	40
  9400  1F13  160A  158A  248B  160A  158A  	fcall	_lcd_com
  9401                           
  9402                           ;lcd.c: 83:     delay(300);
  9403  1F18  302C               	movlw	44
  9404  1F19  00F0               	movwf	delay@j
  9405  1F1A  3001               	movlw	1
  9406  1F1B  00F1               	movwf	delay@j+1
  9407  1F1C  160A  158A  22F5  160A  158A  	fcall	_delay
  9408                           
  9409                           ;lcd.c: 84:     lcd_com(4);
  9410  1F21  3004               	movlw	4
  9411  1F22  160A  158A  248B  160A  158A  	fcall	_lcd_com
  9412                           
  9413                           ;lcd.c: 85:     delay(300);
  9414  1F27  302C               	movlw	44
  9415  1F28  00F0               	movwf	delay@j
  9416  1F29  3001               	movlw	1
  9417  1F2A  00F1               	movwf	delay@j+1
  9418  1F2B  160A  158A  22F5  160A  158A  	fcall	_delay
  9419                           
  9420                           ;lcd.c: 86:     lcd_com(0x85);
  9421  1F30  3085               	movlw	133
  9422  1F31  160A  158A  248B  160A  158A  	fcall	_lcd_com
  9423                           
  9424                           ;lcd.c: 87:     delay(300);
  9425  1F36  302C               	movlw	44
  9426  1F37  00F0               	movwf	delay@j
  9427  1F38  3001               	movlw	1
  9428  1F39  00F1               	movwf	delay@j+1
  9429  1F3A  160A  158A  22F5  160A  158A  	fcall	_delay
  9430                           
  9431                           ;lcd.c: 88:     lcd_com(6);
  9432  1F3F  3006               	movlw	6
  9433  1F40  160A  158A  248B  160A  158A  	fcall	_lcd_com
  9434                           
  9435                           ;lcd.c: 89:     delay(300);
  9436  1F45  302C               	movlw	44
  9437  1F46  00F0               	movwf	delay@j
  9438  1F47  3001               	movlw	1
  9439  1F48  00F1               	movwf	delay@j+1
  9440  1F49  160A  158A  22F5  160A  158A  	fcall	_delay
  9441                           
  9442                           ;lcd.c: 90:     lcd_com(1);
  9443  1F4E  3001               	movlw	1
  9444  1F4F  160A  158A  248B  160A  158A  	fcall	_lcd_com
  9445                           
  9446                           ;lcd.c: 91:     delay(300);
  9447  1F54  302C               	movlw	44
  9448  1F55  00F0               	movwf	delay@j
  9449  1F56  3001               	movlw	1
  9450  1F57  00F1               	movwf	delay@j+1
  9451  1F58  160A  158A  22F5  160A  158A  	fcall	_delay
  9452  1F5D                     l56:
  9453  1F5D  0008               	return
  9454  1F5E                     __end_of_lcd_init:
  9455                           
  9456                           	psect	text25
  9457  1AE0                     __ptext25:	
  9458 ;; *************** function _lcd_init_write *****************
  9459 ;; Defined at:
  9460 ;;		line 30 in file "lcd.c"
  9461 ;; Parameters:    Size  Location     Type
  9462 ;;  a               1    wreg     unsigned char 
  9463 ;; Auto vars:     Size  Location     Type
  9464 ;;  a               1    4[COMMON] unsigned char 
  9465 ;; Return value:  Size  Location     Type
  9466 ;;                  1    wreg      void 
  9467 ;; Registers used:
  9468 ;;		wreg, status,2, status,0, pclath, cstack
  9469 ;; Tracked objects:
  9470 ;;		On entry : 0/0
  9471 ;;		On exit  : 0/0
  9472 ;;		Unchanged: 0/0
  9473 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9474 ;;      Params:         0       0       0       0       0
  9475 ;;      Locals:         1       0       0       0       0
  9476 ;;      Temps:          0       0       0       0       0
  9477 ;;      Totals:         1       0       0       0       0
  9478 ;;Total ram usage:        1 bytes
  9479 ;; Hardware stack levels used:    1
  9480 ;; Hardware stack levels required when called:    1
  9481 ;; This function calls:
  9482 ;;		_delay
  9483 ;; This function is called by:
  9484 ;;		_lcd_init
  9485 ;; This function uses a non-reentrant model
  9486 ;;
  9487                           
  9488                           
  9489                           ;psect for function _lcd_init_write
  9490  1AE0                     _lcd_init_write:
  9491                           
  9492                           ;incstack = 0
  9493                           ; Regs used in _lcd_init_write: [wreg+status,2+status,0+pclath+cstack]
  9494                           ;lcd_init_write@a stored from wreg
  9495  1AE0  00F4               	movwf	lcd_init_write@a
  9496  1AE1                     l3847:
  9497                           
  9498                           ;lcd.c: 31:     PORTDbits.RD0 = 0;
  9499  1AE1  1283               	bcf	3,5	;RP0=0, select bank0
  9500  1AE2  1303               	bcf	3,6	;RP1=0, select bank0
  9501  1AE3  1008               	bcf	8,0	;volatile
  9502                           
  9503                           ;lcd.c: 32:     PORTDbits.RD1 = 0;
  9504  1AE4  1088               	bcf	8,1	;volatile
  9505  1AE5                     l3849:
  9506                           
  9507                           ;lcd.c: 33:     PORTD = a;
  9508  1AE5  0874               	movf	lcd_init_write@a,w
  9509  1AE6  0088               	movwf	8	;volatile
  9510  1AE7                     l3851:
  9511                           
  9512                           ;lcd.c: 34:     PORTDbits.RD2 = 1;
  9513  1AE7  1508               	bsf	8,2	;volatile
  9514  1AE8                     l3853:
  9515                           
  9516                           ;lcd.c: 35:     delay(300);
  9517  1AE8  302C               	movlw	44
  9518  1AE9  00F0               	movwf	delay@j
  9519  1AEA  3001               	movlw	1
  9520  1AEB  00F1               	movwf	delay@j+1
  9521  1AEC  160A  158A  22F5  160A  158A  	fcall	_delay
  9522  1AF1                     l3855:
  9523                           
  9524                           ;lcd.c: 36:     PORTDbits.RD2 = 0;
  9525  1AF1  1283               	bcf	3,5	;RP0=0, select bank0
  9526  1AF2  1303               	bcf	3,6	;RP1=0, select bank0
  9527  1AF3  1108               	bcf	8,2	;volatile
  9528  1AF4                     l45:
  9529  1AF4  0008               	return
  9530  1AF5                     __end_of_lcd_init_write:
  9531                           
  9532                           	psect	text26
  9533  1C8B                     __ptext26:	
  9534 ;; *************** function _lcd_com *****************
  9535 ;; Defined at:
  9536 ;;		line 39 in file "lcd.c"
  9537 ;; Parameters:    Size  Location     Type
  9538 ;;  a               1    wreg     unsigned char 
  9539 ;; Auto vars:     Size  Location     Type
  9540 ;;  a               1    6[COMMON] unsigned char 
  9541 ;;  temp            1    7[COMMON] unsigned char 
  9542 ;; Return value:  Size  Location     Type
  9543 ;;                  1    wreg      void 
  9544 ;; Registers used:
  9545 ;;		wreg, status,2, status,0, pclath, cstack
  9546 ;; Tracked objects:
  9547 ;;		On entry : 0/0
  9548 ;;		On exit  : 0/0
  9549 ;;		Unchanged: 0/0
  9550 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9551 ;;      Params:         0       0       0       0       0
  9552 ;;      Locals:         2       0       0       0       0
  9553 ;;      Temps:          2       0       0       0       0
  9554 ;;      Totals:         4       0       0       0       0
  9555 ;;Total ram usage:        4 bytes
  9556 ;; Hardware stack levels used:    1
  9557 ;; Hardware stack levels required when called:    1
  9558 ;; This function calls:
  9559 ;;		_delay
  9560 ;; This function is called by:
  9561 ;;		_main
  9562 ;;		_lcd_data
  9563 ;;		_lcd_init
  9564 ;;		_LCD_ScrollMessage
  9565 ;; This function uses a non-reentrant model
  9566 ;;
  9567                           
  9568                           
  9569                           ;psect for function _lcd_com
  9570  1C8B                     _lcd_com:
  9571                           
  9572                           ;incstack = 0
  9573                           ; Regs used in _lcd_com: [wreg+status,2+status,0+pclath+cstack]
  9574                           ;lcd_com@a stored from wreg
  9575  1C8B  00F6               	movwf	lcd_com@a
  9576  1C8C                     l3815:
  9577                           
  9578                           ;lcd.c: 40:     unsigned char temp;;lcd.c: 41:     if (status) {
  9579  1C8C  1683               	bsf	3,5	;RP0=1, select bank1
  9580  1C8D  1303               	bcf	3,6	;RP1=0, select bank1
  9581  1C8E  1C62               	btfss	(_status/(0+8))^(0+128),_status& (0+7)
  9582  1C8F  2C91               	goto	u6261
  9583  1C90  2C92               	goto	u6260
  9584  1C91                     u6261:
  9585  1C91  2C94               	goto	l48
  9586  1C92                     u6260:
  9587  1C92                     l3817:
  9588                           
  9589                           ;lcd.c: 42:         status = 0;
  9590  1C92  1062               	bcf	(_status/(0+8))^(0+128),_status& (0+7)
  9591                           
  9592                           ;lcd.c: 43:         goto next;
  9593  1C93  2C97               	goto	l49
  9594  1C94                     l48:	
  9595                           ;lcd.c: 44:     }
  9596                           
  9597                           
  9598                           ;lcd.c: 45:     PORTDbits.RD0 = 0;
  9599  1C94  1283               	bcf	3,5	;RP0=0, select bank0
  9600  1C95  1303               	bcf	3,6	;RP1=0, select bank0
  9601  1C96  1008               	bcf	8,0	;volatile
  9602  1C97                     l49:	
  9603                           ;lcd.c: 46: next:
  9604                           
  9605                           
  9606                           ;lcd.c: 47:     PORTDbits.RD1 = 0;
  9607  1C97  1283               	bcf	3,5	;RP0=0, select bank0
  9608  1C98  1088               	bcf	8,1	;volatile
  9609  1C99                     l3819:
  9610                           
  9611                           ;lcd.c: 48:     temp = a;
  9612  1C99  0876               	movf	lcd_com@a,w
  9613  1C9A  00F4               	movwf	??_lcd_com
  9614  1C9B  0874               	movf	??_lcd_com,w
  9615  1C9C  00F7               	movwf	lcd_com@temp
  9616  1C9D                     l3821:
  9617                           
  9618                           ;lcd.c: 49:     temp &= 0xf0;
  9619  1C9D  30F0               	movlw	240
  9620  1C9E  00F4               	movwf	??_lcd_com
  9621  1C9F  0874               	movf	??_lcd_com,w
  9622  1CA0  05F7               	andwf	lcd_com@temp,f
  9623  1CA1                     l3823:
  9624                           
  9625                           ;lcd.c: 50:     PORTD &= 0x0f;
  9626  1CA1  300F               	movlw	15
  9627  1CA2  00F4               	movwf	??_lcd_com
  9628  1CA3  0874               	movf	??_lcd_com,w
  9629  1CA4  0588               	andwf	8,f	;volatile
  9630  1CA5                     l3825:
  9631                           
  9632                           ;lcd.c: 51:     PORTD |= temp;
  9633  1CA5  0877               	movf	lcd_com@temp,w	;volatile
  9634  1CA6  00F4               	movwf	??_lcd_com
  9635  1CA7  0874               	movf	??_lcd_com,w
  9636  1CA8  0488               	iorwf	8,f	;volatile
  9637  1CA9                     l3827:
  9638                           
  9639                           ;lcd.c: 52:     PORTDbits.RD2 = 1;
  9640  1CA9  1508               	bsf	8,2	;volatile
  9641  1CAA                     l3829:
  9642                           
  9643                           ;lcd.c: 53:     delay(300);
  9644  1CAA  302C               	movlw	44
  9645  1CAB  00F0               	movwf	delay@j
  9646  1CAC  3001               	movlw	1
  9647  1CAD  00F1               	movwf	delay@j+1
  9648  1CAE  160A  158A  22F5  160A  158A  	fcall	_delay
  9649  1CB3                     l3831:
  9650                           
  9651                           ;lcd.c: 54:     PORTDbits.RD2 = 0;
  9652  1CB3  1283               	bcf	3,5	;RP0=0, select bank0
  9653  1CB4  1303               	bcf	3,6	;RP1=0, select bank0
  9654  1CB5  1108               	bcf	8,2	;volatile
  9655  1CB6                     l3833:
  9656                           
  9657                           ;lcd.c: 55:     temp = a << 4;
  9658  1CB6  0876               	movf	lcd_com@a,w
  9659  1CB7  00F4               	movwf	??_lcd_com
  9660  1CB8  3003               	movlw	3
  9661  1CB9                     u6275:
  9662  1CB9  1003               	clrc
  9663  1CBA  0DF4               	rlf	??_lcd_com,f
  9664  1CBB  3EFF               	addlw	-1
  9665  1CBC  1D03               	skipz
  9666  1CBD  2CB9               	goto	u6275
  9667  1CBE  1003               	clrc
  9668  1CBF  0D74               	rlf	??_lcd_com,w
  9669  1CC0  00F5               	movwf	??_lcd_com+1
  9670  1CC1  0875               	movf	??_lcd_com+1,w
  9671  1CC2  00F7               	movwf	lcd_com@temp
  9672  1CC3                     l3835:
  9673                           
  9674                           ;lcd.c: 56:     temp &= 0xf0;
  9675  1CC3  30F0               	movlw	240
  9676  1CC4  00F4               	movwf	??_lcd_com
  9677  1CC5  0874               	movf	??_lcd_com,w
  9678  1CC6  05F7               	andwf	lcd_com@temp,f
  9679  1CC7                     l3837:
  9680                           
  9681                           ;lcd.c: 57:     PORTD &= 0x0f;
  9682  1CC7  300F               	movlw	15
  9683  1CC8  00F4               	movwf	??_lcd_com
  9684  1CC9  0874               	movf	??_lcd_com,w
  9685  1CCA  0588               	andwf	8,f	;volatile
  9686  1CCB                     l3839:
  9687                           
  9688                           ;lcd.c: 58:     PORTD |= temp;
  9689  1CCB  0877               	movf	lcd_com@temp,w	;volatile
  9690  1CCC  00F4               	movwf	??_lcd_com
  9691  1CCD  0874               	movf	??_lcd_com,w
  9692  1CCE  0488               	iorwf	8,f	;volatile
  9693  1CCF                     l3841:
  9694                           
  9695                           ;lcd.c: 59:     PORTDbits.RD2 = 1;
  9696  1CCF  1508               	bsf	8,2	;volatile
  9697  1CD0                     l3843:
  9698                           
  9699                           ;lcd.c: 60:     delay(300);
  9700  1CD0  302C               	movlw	44
  9701  1CD1  00F0               	movwf	delay@j
  9702  1CD2  3001               	movlw	1
  9703  1CD3  00F1               	movwf	delay@j+1
  9704  1CD4  160A  158A  22F5  160A  158A  	fcall	_delay
  9705  1CD9                     l3845:
  9706                           
  9707                           ;lcd.c: 61:     PORTDbits.RD2 = 0;
  9708  1CD9  1283               	bcf	3,5	;RP0=0, select bank0
  9709  1CDA  1303               	bcf	3,6	;RP1=0, select bank0
  9710  1CDB  1108               	bcf	8,2	;volatile
  9711  1CDC                     l50:
  9712  1CDC  0008               	return
  9713  1CDD                     __end_of_lcd_com:
  9714                           
  9715                           	psect	text27
  9716  1AF5                     __ptext27:	
  9717 ;; *************** function _delay *****************
  9718 ;; Defined at:
  9719 ;;		line 25 in file "lcd.c"
  9720 ;; Parameters:    Size  Location     Type
  9721 ;;  j               2    0[COMMON] unsigned int 
  9722 ;; Auto vars:     Size  Location     Type
  9723 ;;  i               2    2[COMMON] unsigned int 
  9724 ;; Return value:  Size  Location     Type
  9725 ;;                  1    wreg      void 
  9726 ;; Registers used:
  9727 ;;		wreg, status,2
  9728 ;; Tracked objects:
  9729 ;;		On entry : 0/0
  9730 ;;		On exit  : 0/0
  9731 ;;		Unchanged: 0/0
  9732 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9733 ;;      Params:         2       0       0       0       0
  9734 ;;      Locals:         2       0       0       0       0
  9735 ;;      Temps:          0       0       0       0       0
  9736 ;;      Totals:         4       0       0       0       0
  9737 ;;Total ram usage:        4 bytes
  9738 ;; Hardware stack levels used:    1
  9739 ;; This function calls:
  9740 ;;		Nothing
  9741 ;; This function is called by:
  9742 ;;		_lcd_init_write
  9743 ;;		_lcd_com
  9744 ;;		_lcd_init
  9745 ;;		_LCD_ScrollMessage
  9746 ;; This function uses a non-reentrant model
  9747 ;;
  9748                           
  9749                           
  9750                           ;psect for function _delay
  9751  1AF5                     _delay:
  9752  1AF5                     l3811:	
  9753                           ;incstack = 0
  9754                           ; Regs used in _delay: [wreg+status,2]
  9755                           
  9756                           
  9757                           ;lcd.c: 26:     unsigned int i = 0;
  9758  1AF5  01F2               	clrf	delay@i
  9759  1AF6  01F3               	clrf	delay@i+1
  9760                           
  9761                           ;lcd.c: 27:     for (i = 0; i < j; i++);
  9762  1AF7  01F2               	clrf	delay@i
  9763  1AF8  01F3               	clrf	delay@i+1
  9764  1AF9  2B00               	goto	l39
  9765  1AFA                     l3813:
  9766  1AFA  3001               	movlw	1
  9767  1AFB  07F2               	addwf	delay@i,f
  9768  1AFC  1803               	skipnc
  9769  1AFD  0AF3               	incf	delay@i+1,f
  9770  1AFE  3000               	movlw	0
  9771  1AFF  07F3               	addwf	delay@i+1,f
  9772  1B00                     l39:
  9773  1B00  0871               	movf	delay@j+1,w
  9774  1B01  0273               	subwf	delay@i+1,w
  9775  1B02  1D03               	skipz
  9776  1B03  2B06               	goto	u6255
  9777  1B04  0870               	movf	delay@j,w
  9778  1B05  0272               	subwf	delay@i,w
  9779  1B06                     u6255:
  9780  1B06  1C03               	skipc
  9781  1B07  2B09               	goto	u6251
  9782  1B08  2B0A               	goto	u6250
  9783  1B09                     u6251:
  9784  1B09  2AFA               	goto	l3813
  9785  1B0A                     u6250:
  9786  1B0A                     l42:
  9787  1B0A  0008               	return
  9788  1B0B                     __end_of_delay:
  9789                           
  9790                           	psect	text28
  9791  118A                     __ptext28:	
  9792 ;; *************** function ___fldiv *****************
  9793 ;; Defined at:
  9794 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcdiv.c"
  9795 ;; Parameters:    Size  Location     Type
  9796 ;;  a               4    0[COMMON] void 
  9797 ;;  b               4    4[COMMON] void 
  9798 ;; Auto vars:     Size  Location     Type
  9799 ;;  grs             4    7[BANK0 ] unsigned long 
  9800 ;;  rem             4    0[BANK0 ] unsigned long 
  9801 ;;  new_exp         2    5[BANK0 ] int 
  9802 ;;  aexp            1   12[BANK0 ] unsigned char 
  9803 ;;  bexp            1   11[BANK0 ] unsigned char 
  9804 ;;  sign            1    4[BANK0 ] unsigned char 
  9805 ;; Return value:  Size  Location     Type
  9806 ;;                  4    0[COMMON] unsigned char 
  9807 ;; Registers used:
  9808 ;;		wreg, status,2, status,0, btemp+1
  9809 ;; Tracked objects:
  9810 ;;		On entry : 0/0
  9811 ;;		On exit  : 0/0
  9812 ;;		Unchanged: 0/0
  9813 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9814 ;;      Params:         8       0       0       0       0
  9815 ;;      Locals:         0      13       0       0       0
  9816 ;;      Temps:          5       0       0       0       0
  9817 ;;      Totals:        13      13       0       0       0
  9818 ;;Total ram usage:       26 bytes
  9819 ;; Hardware stack levels used:    1
  9820 ;; This function calls:
  9821 ;;		Nothing
  9822 ;; This function is called by:
  9823 ;;		_main
  9824 ;; This function uses a non-reentrant model
  9825 ;;
  9826                           
  9827                           
  9828                           ;psect for function ___fldiv
  9829  118A                     ___fldiv:
  9830  118A                     l3539:	
  9831                           ;incstack = 0
  9832                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
  9833                           
  9834  118A  0877               	movf	___fldiv@b+3,w
  9835  118B  3980               	andlw	128
  9836  118C  00F8               	movwf	??___fldiv
  9837  118D  0878               	movf	??___fldiv,w
  9838  118E  1283               	bcf	3,5	;RP0=0, select bank0
  9839  118F  1303               	bcf	3,6	;RP1=0, select bank0
  9840  1190  00A4               	movwf	___fldiv@sign
  9841  1191                     l3541:
  9842  1191  0877               	movf	___fldiv@b+3,w
  9843  1192  00F8               	movwf	??___fldiv
  9844  1193  0778               	addwf	??___fldiv,w
  9845  1194  00F9               	movwf	??___fldiv+1
  9846  1195  0879               	movf	??___fldiv+1,w
  9847  1196  00AB               	movwf	___fldiv@bexp
  9848  1197                     l3543:
  9849  1197  1FF6               	btfss	___fldiv@b+2,7
  9850  1198  299A               	goto	u5891
  9851  1199  299B               	goto	u5890
  9852  119A                     u5891:
  9853  119A  299C               	goto	l3547
  9854  119B                     u5890:
  9855  119B                     l3545:
  9856  119B  142B               	bsf	___fldiv@bexp,0
  9857  119C                     l3547:
  9858  119C  082B               	movf	___fldiv@bexp,w
  9859  119D  1903               	btfsc	3,2
  9860  119E  29A0               	goto	u5901
  9861  119F  29A1               	goto	u5900
  9862  11A0                     u5901:
  9863  11A0  29B1               	goto	l3557
  9864  11A1                     u5900:
  9865  11A1                     l3549:
  9866  11A1  0A2B               	incf	___fldiv@bexp,w
  9867  11A2  1D03               	btfss	3,2
  9868  11A3  29A5               	goto	u5911
  9869  11A4  29A6               	goto	u5910
  9870  11A5                     u5911:
  9871  11A5  29AE               	goto	l3553
  9872  11A6                     u5910:
  9873  11A6                     l3551:
  9874  11A6  3000               	movlw	0
  9875  11A7  00F7               	movwf	___fldiv@b+3
  9876  11A8  3000               	movlw	0
  9877  11A9  00F6               	movwf	___fldiv@b+2
  9878  11AA  3000               	movlw	0
  9879  11AB  00F5               	movwf	___fldiv@b+1
  9880  11AC  3000               	movlw	0
  9881  11AD  00F4               	movwf	___fldiv@b
  9882  11AE                     l3553:
  9883  11AE  17F6               	bsf	___fldiv@b+2,7
  9884  11AF                     l3555:
  9885  11AF  01F7               	clrf	___fldiv@b+3
  9886  11B0  29B9               	goto	l3559
  9887  11B1                     l3557:
  9888  11B1  3000               	movlw	0
  9889  11B2  00F7               	movwf	___fldiv@b+3
  9890  11B3  3000               	movlw	0
  9891  11B4  00F6               	movwf	___fldiv@b+2
  9892  11B5  3000               	movlw	0
  9893  11B6  00F5               	movwf	___fldiv@b+1
  9894  11B7  3000               	movlw	0
  9895  11B8  00F4               	movwf	___fldiv@b
  9896  11B9                     l3559:
  9897  11B9  0873               	movf	___fldiv@a+3,w
  9898  11BA  3980               	andlw	128
  9899  11BB  00F8               	movwf	??___fldiv
  9900  11BC  0878               	movf	??___fldiv,w
  9901  11BD  06A4               	xorwf	___fldiv@sign,f
  9902  11BE                     l3561:
  9903  11BE  0873               	movf	___fldiv@a+3,w
  9904  11BF  00F8               	movwf	??___fldiv
  9905  11C0  0778               	addwf	??___fldiv,w
  9906  11C1  00F9               	movwf	??___fldiv+1
  9907  11C2  0879               	movf	??___fldiv+1,w
  9908  11C3  00AC               	movwf	___fldiv@aexp
  9909  11C4                     l3563:
  9910  11C4  1FF2               	btfss	___fldiv@a+2,7
  9911  11C5  29C7               	goto	u5921
  9912  11C6  29C8               	goto	u5920
  9913  11C7                     u5921:
  9914  11C7  29C9               	goto	l3567
  9915  11C8                     u5920:
  9916  11C8                     l3565:
  9917  11C8  142C               	bsf	___fldiv@aexp,0
  9918  11C9                     l3567:
  9919  11C9  082C               	movf	___fldiv@aexp,w
  9920  11CA  1903               	btfsc	3,2
  9921  11CB  29CD               	goto	u5931
  9922  11CC  29CE               	goto	u5930
  9923  11CD                     u5931:
  9924  11CD  29DE               	goto	l3577
  9925  11CE                     u5930:
  9926  11CE                     l3569:
  9927  11CE  0A2C               	incf	___fldiv@aexp,w
  9928  11CF  1D03               	btfss	3,2
  9929  11D0  29D2               	goto	u5941
  9930  11D1  29D3               	goto	u5940
  9931  11D2                     u5941:
  9932  11D2  29DB               	goto	l3573
  9933  11D3                     u5940:
  9934  11D3                     l3571:
  9935  11D3  3000               	movlw	0
  9936  11D4  00F3               	movwf	___fldiv@a+3
  9937  11D5  3000               	movlw	0
  9938  11D6  00F2               	movwf	___fldiv@a+2
  9939  11D7  3000               	movlw	0
  9940  11D8  00F1               	movwf	___fldiv@a+1
  9941  11D9  3000               	movlw	0
  9942  11DA  00F0               	movwf	___fldiv@a
  9943  11DB                     l3573:
  9944  11DB  17F2               	bsf	___fldiv@a+2,7
  9945  11DC                     l3575:
  9946  11DC  01F3               	clrf	___fldiv@a+3
  9947  11DD  29E6               	goto	l697
  9948  11DE                     l3577:
  9949  11DE  3000               	movlw	0
  9950  11DF  00F3               	movwf	___fldiv@a+3
  9951  11E0  3000               	movlw	0
  9952  11E1  00F2               	movwf	___fldiv@a+2
  9953  11E2  3000               	movlw	0
  9954  11E3  00F1               	movwf	___fldiv@a+1
  9955  11E4  3000               	movlw	0
  9956  11E5  00F0               	movwf	___fldiv@a
  9957  11E6                     l697:
  9958  11E6  0873               	movf	___fldiv@a+3,w
  9959  11E7  0472               	iorwf	___fldiv@a+2,w
  9960  11E8  0471               	iorwf	___fldiv@a+1,w
  9961  11E9  0470               	iorwf	___fldiv@a,w
  9962  11EA  1D03               	skipz
  9963  11EB  29ED               	goto	u5951
  9964  11EC  29EE               	goto	u5950
  9965  11ED                     u5951:
  9966  11ED  2A07               	goto	l3587
  9967  11EE                     u5950:
  9968  11EE                     l3579:
  9969  11EE  3000               	movlw	0
  9970  11EF  00F7               	movwf	___fldiv@b+3
  9971  11F0  3000               	movlw	0
  9972  11F1  00F6               	movwf	___fldiv@b+2
  9973  11F2  3000               	movlw	0
  9974  11F3  00F5               	movwf	___fldiv@b+1
  9975  11F4  3000               	movlw	0
  9976  11F5  00F4               	movwf	___fldiv@b
  9977  11F6  3080               	movlw	128
  9978  11F7  04F6               	iorwf	___fldiv@b+2,f
  9979  11F8  307F               	movlw	127
  9980  11F9  04F7               	iorwf	___fldiv@b+3,f
  9981  11FA                     l3581:
  9982  11FA  0824               	movf	___fldiv@sign,w
  9983  11FB  00F8               	movwf	??___fldiv
  9984  11FC  0878               	movf	??___fldiv,w
  9985  11FD  04F7               	iorwf	___fldiv@b+3,f
  9986  11FE                     l3583:
  9987  11FE  0877               	movf	___fldiv@b+3,w
  9988  11FF  00F3               	movwf	?___fldiv+3
  9989  1200  0876               	movf	___fldiv@b+2,w
  9990  1201  00F2               	movwf	?___fldiv+2
  9991  1202  0875               	movf	___fldiv@b+1,w
  9992  1203  00F1               	movwf	?___fldiv+1
  9993  1204  0874               	movf	___fldiv@b,w
  9994  1205  00F0               	movwf	?___fldiv
  9995  1206  2B6C               	goto	l699
  9996  1207                     l3587:
  9997  1207  082B               	movf	___fldiv@bexp,w
  9998  1208  1D03               	btfss	3,2
  9999  1209  2A0B               	goto	u5961
 10000  120A  2A0C               	goto	u5960
 10001  120B                     u5961:
 10002  120B  2A15               	goto	l3593
 10003  120C                     u5960:
 10004  120C                     l3589:
 10005  120C  3000               	movlw	0
 10006  120D  00F3               	movwf	?___fldiv+3
 10007  120E  3000               	movlw	0
 10008  120F  00F2               	movwf	?___fldiv+2
 10009  1210  3000               	movlw	0
 10010  1211  00F1               	movwf	?___fldiv+1
 10011  1212  3000               	movlw	0
 10012  1213  00F0               	movwf	?___fldiv
 10013  1214  2B6C               	goto	l699
 10014  1215                     l3593:
 10015  1215  082B               	movf	___fldiv@bexp,w
 10016  1216  00F8               	movwf	??___fldiv
 10017  1217  01F9               	clrf	??___fldiv+1
 10018  1218  0879               	movf	??___fldiv+1,w
 10019  1219  00FB               	movwf	??___fldiv+3
 10020  121A  082C               	movf	___fldiv@aexp,w
 10021  121B  0278               	subwf	??___fldiv,w
 10022  121C  00FA               	movwf	??___fldiv+2
 10023  121D  1C03               	skipc
 10024  121E  03FB               	decf	??___fldiv+3,f
 10025  121F  087A               	movf	??___fldiv+2,w
 10026  1220  3E7F               	addlw	127
 10027  1221  00A5               	movwf	___fldiv@new_exp
 10028  1222  087B               	movf	??___fldiv+3,w
 10029  1223  1803               	skipnc
 10030  1224  3E01               	addlw	1
 10031  1225  3E00               	addlw	0
 10032  1226  00A6               	movwf	___fldiv@new_exp+1
 10033  1227                     l3595:
 10034  1227  0877               	movf	___fldiv@b+3,w
 10035  1228  00A3               	movwf	___fldiv@rem+3
 10036  1229  0876               	movf	___fldiv@b+2,w
 10037  122A  00A2               	movwf	___fldiv@rem+2
 10038  122B  0875               	movf	___fldiv@b+1,w
 10039  122C  00A1               	movwf	___fldiv@rem+1
 10040  122D  0874               	movf	___fldiv@b,w
 10041  122E  00A0               	movwf	___fldiv@rem
 10042  122F                     l3597:
 10043  122F  3000               	movlw	0
 10044  1230  00F7               	movwf	___fldiv@b+3
 10045  1231  3000               	movlw	0
 10046  1232  00F6               	movwf	___fldiv@b+2
 10047  1233  3000               	movlw	0
 10048  1234  00F5               	movwf	___fldiv@b+1
 10049  1235  3000               	movlw	0
 10050  1236  00F4               	movwf	___fldiv@b
 10051  1237                     l3599:
 10052  1237  3000               	movlw	0
 10053  1238  00AA               	movwf	___fldiv@grs+3
 10054  1239  3000               	movlw	0
 10055  123A  00A9               	movwf	___fldiv@grs+2
 10056  123B  3000               	movlw	0
 10057  123C  00A8               	movwf	___fldiv@grs+1
 10058  123D  3000               	movlw	0
 10059  123E  00A7               	movwf	___fldiv@grs
 10060  123F                     l3601:
 10061  123F  01AC               	clrf	___fldiv@aexp
 10062  1240  2A91               	goto	l3621
 10063  1241                     l3603:
 10064  1241  082C               	movf	___fldiv@aexp,w
 10065  1242  1903               	btfsc	3,2
 10066  1243  2A45               	goto	u5971
 10067  1244  2A46               	goto	u5970
 10068  1245                     u5971:
 10069  1245  2A66               	goto	l3613
 10070  1246                     u5970:
 10071  1246                     l3605:
 10072  1246  3001               	movlw	1
 10073  1247  00F8               	movwf	??___fldiv
 10074  1248                     u5985:
 10075  1248  1003               	clrc
 10076  1249  0DA0               	rlf	___fldiv@rem,f
 10077  124A  0DA1               	rlf	___fldiv@rem+1,f
 10078  124B  0DA2               	rlf	___fldiv@rem+2,f
 10079  124C  0DA3               	rlf	___fldiv@rem+3,f
 10080  124D  0BF8               	decfsz	??___fldiv,f
 10081  124E  2A48               	goto	u5985
 10082  124F  3001               	movlw	1
 10083  1250  00F8               	movwf	??___fldiv
 10084  1251                     u5995:
 10085  1251  1003               	clrc
 10086  1252  0DF4               	rlf	___fldiv@b,f
 10087  1253  0DF5               	rlf	___fldiv@b+1,f
 10088  1254  0DF6               	rlf	___fldiv@b+2,f
 10089  1255  0DF7               	rlf	___fldiv@b+3,f
 10090  1256  0BF8               	decfsz	??___fldiv,f
 10091  1257  2A51               	goto	u5995
 10092  1258                     l3607:
 10093  1258  1FAA               	btfss	___fldiv@grs+3,7
 10094  1259  2A5B               	goto	u6001
 10095  125A  2A5C               	goto	u6000
 10096  125B                     u6001:
 10097  125B  2A5D               	goto	l3611
 10098  125C                     u6000:
 10099  125C                     l3609:
 10100  125C  1474               	bsf	___fldiv@b,0
 10101  125D                     l3611:
 10102  125D  3001               	movlw	1
 10103  125E  00F8               	movwf	??___fldiv
 10104  125F                     u6015:
 10105  125F  1003               	clrc
 10106  1260  0DA7               	rlf	___fldiv@grs,f
 10107  1261  0DA8               	rlf	___fldiv@grs+1,f
 10108  1262  0DA9               	rlf	___fldiv@grs+2,f
 10109  1263  0DAA               	rlf	___fldiv@grs+3,f
 10110  1264  0BF8               	decfsz	??___fldiv,f
 10111  1265  2A5F               	goto	u6015
 10112  1266                     l3613:
 10113  1266  0873               	movf	___fldiv@a+3,w
 10114  1267  0223               	subwf	___fldiv@rem+3,w
 10115  1268  1D03               	skipz
 10116  1269  2A74               	goto	u6025
 10117  126A  0872               	movf	___fldiv@a+2,w
 10118  126B  0222               	subwf	___fldiv@rem+2,w
 10119  126C  1D03               	skipz
 10120  126D  2A74               	goto	u6025
 10121  126E  0871               	movf	___fldiv@a+1,w
 10122  126F  0221               	subwf	___fldiv@rem+1,w
 10123  1270  1D03               	skipz
 10124  1271  2A74               	goto	u6025
 10125  1272  0870               	movf	___fldiv@a,w
 10126  1273  0220               	subwf	___fldiv@rem,w
 10127  1274                     u6025:
 10128  1274  1C03               	skipc
 10129  1275  2A77               	goto	u6021
 10130  1276  2A78               	goto	u6020
 10131  1277                     u6021:
 10132  1277  2A8D               	goto	l3619
 10133  1278                     u6020:
 10134  1278                     l3615:
 10135  1278  172A               	bsf	___fldiv@grs+3,6
 10136  1279                     l3617:
 10137  1279  0870               	movf	___fldiv@a,w
 10138  127A  02A0               	subwf	___fldiv@rem,f
 10139  127B  0871               	movf	___fldiv@a+1,w
 10140  127C  1C03               	skipc
 10141  127D  0F71               	incfsz	___fldiv@a+1,w
 10142  127E  2A80               	goto	u6035
 10143  127F  2A81               	goto	u6036
 10144  1280                     u6035:
 10145  1280  02A1               	subwf	___fldiv@rem+1,f
 10146  1281                     u6036:
 10147  1281  0872               	movf	___fldiv@a+2,w
 10148  1282  1C03               	skipc
 10149  1283  0F72               	incfsz	___fldiv@a+2,w
 10150  1284  2A86               	goto	u6037
 10151  1285  2A87               	goto	u6038
 10152  1286                     u6037:
 10153  1286  02A2               	subwf	___fldiv@rem+2,f
 10154  1287                     u6038:
 10155  1287  0873               	movf	___fldiv@a+3,w
 10156  1288  1C03               	skipc
 10157  1289  0F73               	incfsz	___fldiv@a+3,w
 10158  128A  2A8C               	goto	u6039
 10159  128B  2A8D               	goto	u6030
 10160  128C                     u6039:
 10161  128C  02A3               	subwf	___fldiv@rem+3,f
 10162  128D                     u6030:
 10163  128D                     l3619:
 10164  128D  3001               	movlw	1
 10165  128E  00F8               	movwf	??___fldiv
 10166  128F  0878               	movf	??___fldiv,w
 10167  1290  07AC               	addwf	___fldiv@aexp,f
 10168  1291                     l3621:
 10169  1291  301A               	movlw	26
 10170  1292  022C               	subwf	___fldiv@aexp,w
 10171  1293  1C03               	skipc
 10172  1294  2A96               	goto	u6041
 10173  1295  2A97               	goto	u6040
 10174  1296                     u6041:
 10175  1296  2A41               	goto	l3603
 10176  1297                     u6040:
 10177  1297                     l3623:
 10178  1297  0823               	movf	___fldiv@rem+3,w
 10179  1298  0422               	iorwf	___fldiv@rem+2,w
 10180  1299  0421               	iorwf	___fldiv@rem+1,w
 10181  129A  0420               	iorwf	___fldiv@rem,w
 10182  129B  1903               	skipnz
 10183  129C  2A9E               	goto	u6051
 10184  129D  2A9F               	goto	u6050
 10185  129E                     u6051:
 10186  129E  2ABE               	goto	l3637
 10187  129F                     u6050:
 10188  129F                     l3625:
 10189  129F  1427               	bsf	___fldiv@grs,0
 10190  12A0  2ABE               	goto	l3637
 10191  12A1                     l3627:
 10192  12A1  3001               	movlw	1
 10193  12A2  00F8               	movwf	??___fldiv
 10194  12A3                     u6065:
 10195  12A3  1003               	clrc
 10196  12A4  0DF4               	rlf	___fldiv@b,f
 10197  12A5  0DF5               	rlf	___fldiv@b+1,f
 10198  12A6  0DF6               	rlf	___fldiv@b+2,f
 10199  12A7  0DF7               	rlf	___fldiv@b+3,f
 10200  12A8  0BF8               	decfsz	??___fldiv,f
 10201  12A9  2AA3               	goto	u6065
 10202  12AA                     l3629:
 10203  12AA  1FAA               	btfss	___fldiv@grs+3,7
 10204  12AB  2AAD               	goto	u6071
 10205  12AC  2AAE               	goto	u6070
 10206  12AD                     u6071:
 10207  12AD  2AAF               	goto	l3633
 10208  12AE                     u6070:
 10209  12AE                     l3631:
 10210  12AE  1474               	bsf	___fldiv@b,0
 10211  12AF                     l3633:
 10212  12AF  3001               	movlw	1
 10213  12B0  00F8               	movwf	??___fldiv
 10214  12B1                     u6085:
 10215  12B1  1003               	clrc
 10216  12B2  0DA7               	rlf	___fldiv@grs,f
 10217  12B3  0DA8               	rlf	___fldiv@grs+1,f
 10218  12B4  0DA9               	rlf	___fldiv@grs+2,f
 10219  12B5  0DAA               	rlf	___fldiv@grs+3,f
 10220  12B6  0BF8               	decfsz	??___fldiv,f
 10221  12B7  2AB1               	goto	u6085
 10222  12B8                     l3635:
 10223  12B8  30FF               	movlw	255
 10224  12B9  07A5               	addwf	___fldiv@new_exp,f
 10225  12BA  1803               	skipnc
 10226  12BB  0AA6               	incf	___fldiv@new_exp+1,f
 10227  12BC  30FF               	movlw	255
 10228  12BD  07A6               	addwf	___fldiv@new_exp+1,f
 10229  12BE                     l3637:
 10230  12BE  1FF6               	btfss	___fldiv@b+2,7
 10231  12BF  2AC1               	goto	u6091
 10232  12C0  2AC2               	goto	u6090
 10233  12C1                     u6091:
 10234  12C1  2AA1               	goto	l3627
 10235  12C2                     u6090:
 10236  12C2                     l3639:
 10237  12C2  01AC               	clrf	___fldiv@aexp
 10238  12C3                     l3641:
 10239  12C3  1FAA               	btfss	___fldiv@grs+3,7
 10240  12C4  2AC6               	goto	u6101
 10241  12C5  2AC7               	goto	u6100
 10242  12C6                     u6101:
 10243  12C6  2AE3               	goto	l3649
 10244  12C7                     u6100:
 10245  12C7                     l3643:
 10246  12C7  30FF               	movlw	255
 10247  12C8  0527               	andwf	___fldiv@grs,w
 10248  12C9  00F8               	movwf	??___fldiv
 10249  12CA  30FF               	movlw	255
 10250  12CB  0528               	andwf	___fldiv@grs+1,w
 10251  12CC  00F9               	movwf	??___fldiv+1
 10252  12CD  30FF               	movlw	255
 10253  12CE  0529               	andwf	___fldiv@grs+2,w
 10254  12CF  00FA               	movwf	??___fldiv+2
 10255  12D0  307F               	movlw	127
 10256  12D1  052A               	andwf	___fldiv@grs+3,w
 10257  12D2  00FB               	movwf	??___fldiv+3
 10258  12D3  087B               	movf	??___fldiv+3,w
 10259  12D4  047A               	iorwf	??___fldiv+2,w
 10260  12D5  0479               	iorwf	??___fldiv+1,w
 10261  12D6  0478               	iorwf	??___fldiv,w
 10262  12D7  1903               	skipnz
 10263  12D8  2ADA               	goto	u6111
 10264  12D9  2ADB               	goto	u6110
 10265  12DA                     u6111:
 10266  12DA  2ADE               	goto	l713
 10267  12DB                     u6110:
 10268  12DB                     l3645:
 10269  12DB  01AC               	clrf	___fldiv@aexp
 10270  12DC  0AAC               	incf	___fldiv@aexp,f
 10271  12DD  2AE3               	goto	l3649
 10272  12DE                     l713:
 10273  12DE  1C74               	btfss	___fldiv@b,0
 10274  12DF  2AE1               	goto	u6121
 10275  12E0  2AE2               	goto	u6120
 10276  12E1                     u6121:
 10277  12E1  2AE3               	goto	l3649
 10278  12E2                     u6120:
 10279  12E2  2ADB               	goto	l3645
 10280  12E3                     l3649:
 10281  12E3  082C               	movf	___fldiv@aexp,w
 10282  12E4  1903               	btfsc	3,2
 10283  12E5  2AE7               	goto	u6131
 10284  12E6  2AE8               	goto	u6130
 10285  12E7                     u6131:
 10286  12E7  2B19               	goto	l3659
 10287  12E8                     u6130:
 10288  12E8                     l3651:
 10289  12E8  3001               	movlw	1
 10290  12E9  07F4               	addwf	___fldiv@b,f
 10291  12EA  3000               	movlw	0
 10292  12EB  1803               	skipnc
 10293  12EC  3001               	movlw	1
 10294  12ED  07F5               	addwf	___fldiv@b+1,f
 10295  12EE  3000               	movlw	0
 10296  12EF  1803               	skipnc
 10297  12F0  3001               	movlw	1
 10298  12F1  07F6               	addwf	___fldiv@b+2,f
 10299  12F2  3000               	movlw	0
 10300  12F3  1803               	skipnc
 10301  12F4  3001               	movlw	1
 10302  12F5  07F7               	addwf	___fldiv@b+3,f
 10303  12F6                     l3653:
 10304  12F6  1C77               	btfss	___fldiv@b+3,0
 10305  12F7  2AF9               	goto	u6141
 10306  12F8  2AFA               	goto	u6140
 10307  12F9                     u6141:
 10308  12F9  2B19               	goto	l3659
 10309  12FA                     u6140:
 10310  12FA                     l3655:
 10311  12FA  0874               	movf	___fldiv@b,w
 10312  12FB  00F8               	movwf	??___fldiv
 10313  12FC  0875               	movf	___fldiv@b+1,w
 10314  12FD  00F9               	movwf	??___fldiv+1
 10315  12FE  0876               	movf	___fldiv@b+2,w
 10316  12FF  00FA               	movwf	??___fldiv+2
 10317  1300  0877               	movf	___fldiv@b+3,w
 10318  1301  00FB               	movwf	??___fldiv+3
 10319  1302  3001               	movlw	1
 10320  1303  00FC               	movwf	??___fldiv+4
 10321  1304                     u6155:
 10322  1304  0D7B               	rlf	??___fldiv+3,w
 10323  1305  0CFB               	rrf	??___fldiv+3,f
 10324  1306  0CFA               	rrf	??___fldiv+2,f
 10325  1307  0CF9               	rrf	??___fldiv+1,f
 10326  1308  0CF8               	rrf	??___fldiv,f
 10327  1309                     u6150:
 10328  1309  0BFC               	decfsz	??___fldiv+4,f
 10329  130A  2B04               	goto	u6155
 10330  130B  087B               	movf	??___fldiv+3,w
 10331  130C  00F7               	movwf	___fldiv@b+3
 10332  130D  087A               	movf	??___fldiv+2,w
 10333  130E  00F6               	movwf	___fldiv@b+2
 10334  130F  0879               	movf	??___fldiv+1,w
 10335  1310  00F5               	movwf	___fldiv@b+1
 10336  1311  0878               	movf	??___fldiv,w
 10337  1312  00F4               	movwf	___fldiv@b
 10338  1313                     l3657:
 10339  1313  3001               	movlw	1
 10340  1314  07A5               	addwf	___fldiv@new_exp,f
 10341  1315  1803               	skipnc
 10342  1316  0AA6               	incf	___fldiv@new_exp+1,f
 10343  1317  3000               	movlw	0
 10344  1318  07A6               	addwf	___fldiv@new_exp+1,f
 10345  1319                     l3659:
 10346  1319  0826               	movf	___fldiv@new_exp+1,w
 10347  131A  3A80               	xorlw	128
 10348  131B  00FF               	movwf	btemp+1
 10349  131C  3080               	movlw	128
 10350  131D  027F               	subwf	btemp+1,w
 10351  131E  1D03               	skipz
 10352  131F  2B22               	goto	u6165
 10353  1320  30FF               	movlw	255
 10354  1321  0225               	subwf	___fldiv@new_exp,w
 10355  1322                     u6165:
 10356  1322  1C03               	skipc
 10357  1323  2B25               	goto	u6161
 10358  1324  2B26               	goto	u6160
 10359  1325                     u6161:
 10360  1325  2B34               	goto	l3663
 10361  1326                     u6160:
 10362  1326                     l3661:
 10363  1326  30FF               	movlw	255
 10364  1327  1283               	bcf	3,5	;RP0=0, select bank0
 10365  1328  1303               	bcf	3,6	;RP1=0, select bank0
 10366  1329  00A5               	movwf	___fldiv@new_exp
 10367  132A  3000               	movlw	0
 10368  132B  00A6               	movwf	___fldiv@new_exp+1
 10369  132C  3000               	movlw	0
 10370  132D  00F7               	movwf	___fldiv@b+3
 10371  132E  3000               	movlw	0
 10372  132F  00F6               	movwf	___fldiv@b+2
 10373  1330  3000               	movlw	0
 10374  1331  00F5               	movwf	___fldiv@b+1
 10375  1332  3000               	movlw	0
 10376  1333  00F4               	movwf	___fldiv@b
 10377  1334                     l3663:
 10378  1334  1283               	bcf	3,5	;RP0=0, select bank0
 10379  1335  1303               	bcf	3,6	;RP1=0, select bank0
 10380  1336  0826               	movf	___fldiv@new_exp+1,w
 10381  1337  3A80               	xorlw	128
 10382  1338  00FF               	movwf	btemp+1
 10383  1339  3080               	movlw	128
 10384  133A  027F               	subwf	btemp+1,w
 10385  133B  1D03               	skipz
 10386  133C  2B3F               	goto	u6175
 10387  133D  3001               	movlw	1
 10388  133E  0225               	subwf	___fldiv@new_exp,w
 10389  133F                     u6175:
 10390  133F  1803               	skipnc
 10391  1340  2B42               	goto	u6171
 10392  1341  2B43               	goto	u6170
 10393  1342                     u6171:
 10394  1342  2B50               	goto	l719
 10395  1343                     u6170:
 10396  1343                     l3665:
 10397  1343  1283               	bcf	3,5	;RP0=0, select bank0
 10398  1344  1303               	bcf	3,6	;RP1=0, select bank0
 10399  1345  01A5               	clrf	___fldiv@new_exp
 10400  1346  01A6               	clrf	___fldiv@new_exp+1
 10401  1347                     l3667:
 10402  1347  3000               	movlw	0
 10403  1348  00F7               	movwf	___fldiv@b+3
 10404  1349  3000               	movlw	0
 10405  134A  00F6               	movwf	___fldiv@b+2
 10406  134B  3000               	movlw	0
 10407  134C  00F5               	movwf	___fldiv@b+1
 10408  134D  3000               	movlw	0
 10409  134E  00F4               	movwf	___fldiv@b
 10410  134F                     l3669:
 10411  134F  01A4               	clrf	___fldiv@sign
 10412  1350                     l719:
 10413  1350  1283               	bcf	3,5	;RP0=0, select bank0
 10414  1351  1303               	bcf	3,6	;RP1=0, select bank0
 10415  1352  0825               	movf	___fldiv@new_exp,w
 10416  1353  00F8               	movwf	??___fldiv
 10417  1354  0878               	movf	??___fldiv,w
 10418  1355  00AB               	movwf	___fldiv@bexp
 10419  1356                     l3671:
 10420  1356  1C2B               	btfss	___fldiv@bexp,0
 10421  1357  2B59               	goto	u6181
 10422  1358  2B5A               	goto	u6180
 10423  1359                     u6181:
 10424  1359  2B5C               	goto	l3675
 10425  135A                     u6180:
 10426  135A                     l3673:
 10427  135A  17F6               	bsf	___fldiv@b+2,7
 10428  135B  2B60               	goto	l721
 10429  135C                     l3675:
 10430  135C  307F               	movlw	127
 10431  135D  00F8               	movwf	??___fldiv
 10432  135E  0878               	movf	??___fldiv,w
 10433  135F  05F6               	andwf	___fldiv@b+2,f
 10434  1360                     l721:
 10435  1360  082B               	movf	___fldiv@bexp,w
 10436  1361  00F8               	movwf	??___fldiv
 10437  1362  1003               	clrc
 10438  1363  0C78               	rrf	??___fldiv,w
 10439  1364  00F9               	movwf	??___fldiv+1
 10440  1365  0879               	movf	??___fldiv+1,w
 10441  1366  00F7               	movwf	___fldiv@b+3
 10442  1367  0824               	movf	___fldiv@sign,w
 10443  1368  00F8               	movwf	??___fldiv
 10444  1369  0878               	movf	??___fldiv,w
 10445  136A  04F7               	iorwf	___fldiv@b+3,f
 10446  136B  29FE               	goto	l3583
 10447  136C                     l699:
 10448  136C  0008               	return
 10449  136D                     __end_of___fldiv:
 10450                           
 10451                           	psect	text29
 10452  1D31                     __ptext29:	
 10453 ;; *************** function _ADC_read *****************
 10454 ;; Defined at:
 10455 ;;		line 19 in file "ADC.c"
 10456 ;; Parameters:    Size  Location     Type
 10457 ;;  channel         1    wreg     unsigned char 
 10458 ;; Auto vars:     Size  Location     Type
 10459 ;;  channel         1    6[BANK0 ] unsigned char 
 10460 ;; Return value:  Size  Location     Type
 10461 ;;                  4    0[BANK0 ] unsigned char 
 10462 ;; Registers used:
 10463 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
 10464 ;; Tracked objects:
 10465 ;;		On entry : 0/0
 10466 ;;		On exit  : 0/0
 10467 ;;		Unchanged: 0/0
 10468 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10469 ;;      Params:         0       4       0       0       0
 10470 ;;      Locals:         0       1       0       0       0
 10471 ;;      Temps:          0       2       0       0       0
 10472 ;;      Totals:         0       7       0       0       0
 10473 ;;Total ram usage:        7 bytes
 10474 ;; Hardware stack levels used:    1
 10475 ;; Hardware stack levels required when called:    1
 10476 ;; This function calls:
 10477 ;;		___xxtofl
 10478 ;; This function is called by:
 10479 ;;		_main
 10480 ;; This function uses a non-reentrant model
 10481 ;;
 10482                           
 10483                           
 10484                           ;psect for function _ADC_read
 10485  1D31                     _ADC_read:
 10486                           
 10487                           ;incstack = 0
 10488                           ; Regs used in _ADC_read: [wreg+status,2+status,0+btemp+1+pclath+cstack]
 10489                           ;ADC_read@channel stored from wreg
 10490  1D31  1283               	bcf	3,5	;RP0=0, select bank0
 10491  1D32  1303               	bcf	3,6	;RP1=0, select bank0
 10492  1D33  00A6               	movwf	ADC_read@channel
 10493  1D34                     l3249:
 10494                           
 10495                           ;ADC.c: 19: double ADC_read(char channel);ADC.c: 20: {;ADC.c: 21:     if(channel > 13 ||
      +                           channel <0)
 10496  1D34  300E               	movlw	14
 10497  1D35  0226               	subwf	ADC_read@channel,w
 10498  1D36  1803               	skipnc
 10499  1D37  2D39               	goto	u5391
 10500  1D38  2D3A               	goto	u5390
 10501  1D39                     u5391:
 10502  1D39  2D3B               	goto	l3253
 10503  1D3A                     u5390:
 10504  1D3A  2D44               	goto	l3259
 10505  1D3B                     l3253:
 10506                           
 10507                           ;ADC.c: 22:     {;ADC.c: 23:         return 0;
 10508  1D3B  3000               	movlw	0
 10509  1D3C  00A3               	movwf	?_ADC_read+3
 10510  1D3D  3000               	movlw	0
 10511  1D3E  00A2               	movwf	?_ADC_read+2
 10512  1D3F  3000               	movlw	0
 10513  1D40  00A1               	movwf	?_ADC_read+1
 10514  1D41  3000               	movlw	0
 10515  1D42  00A0               	movwf	?_ADC_read
 10516  1D43  2D86               	goto	l114
 10517  1D44                     l3259:
 10518                           
 10519                           ;ADC.c: 26:     {;ADC.c: 27:         ADCON0bits.CHS = channel;
 10520  1D44  0826               	movf	ADC_read@channel,w
 10521  1D45  00A4               	movwf	??_ADC_read
 10522  1D46  0DA4               	rlf	??_ADC_read,f
 10523  1D47  0DA4               	rlf	??_ADC_read,f
 10524  1D48  081F               	movf	31,w	;volatile
 10525  1D49  0624               	xorwf	??_ADC_read,w
 10526  1D4A  39C3               	andlw	-61
 10527  1D4B  0624               	xorwf	??_ADC_read,w
 10528  1D4C  009F               	movwf	31	;volatile
 10529  1D4D                     l3261:
 10530                           
 10531                           ;ADC.c: 28:         _delay((unsigned long)((2)*(8000000/4000.0)));
 10532  1D4D  3006               	movlw	6
 10533  1D4E  1283               	bcf	3,5	;RP0=0, select bank0
 10534  1D4F  1303               	bcf	3,6	;RP1=0, select bank0
 10535  1D50  00A5               	movwf	??_ADC_read+1
 10536  1D51  302F               	movlw	47
 10537  1D52  00A4               	movwf	??_ADC_read
 10538  1D53                     u6357:
 10539  1D53  0BA4               	decfsz	??_ADC_read,f
 10540  1D54  2D53               	goto	u6357
 10541  1D55  0BA5               	decfsz	??_ADC_read+1,f
 10542  1D56  2D53               	goto	u6357
 10543  1D57  2D58               	nop2
 10544  1D58                     l3263:
 10545                           
 10546                           ;ADC.c: 29:         ADCON0bits.GO_nDONE = 1;
 10547  1D58  1283               	bcf	3,5	;RP0=0, select bank0
 10548  1D59  1303               	bcf	3,6	;RP1=0, select bank0
 10549  1D5A  149F               	bsf	31,1	;volatile
 10550  1D5B                     l116:	
 10551                           ;ADC.c: 30:         while (GO_nDONE);
 10552                           
 10553  1D5B  189F               	btfsc	31,1	;volatile
 10554  1D5C  2D5E               	goto	u5401
 10555  1D5D  2D5F               	goto	u5400
 10556  1D5E                     u5401:
 10557  1D5E  2D5B               	goto	l116
 10558  1D5F                     u5400:
 10559  1D5F                     l3265:
 10560                           
 10561                           ;ADC.c: 31:         return ((ADRESH << 8)+ ADRESL);
 10562  1D5F  081E               	movf	30,w	;volatile
 10563  1D60  00A4               	movwf	??_ADC_read
 10564  1D61  01A5               	clrf	??_ADC_read+1
 10565  1D62  0824               	movf	??_ADC_read,w
 10566  1D63  00A5               	movwf	??_ADC_read+1
 10567  1D64  01A4               	clrf	??_ADC_read
 10568  1D65  1683               	bsf	3,5	;RP0=1, select bank1
 10569  1D66  1303               	bcf	3,6	;RP1=0, select bank1
 10570  1D67  081E               	movf	30,w	;volatile
 10571  1D68  1283               	bcf	3,5	;RP0=0, select bank0
 10572  1D69  1303               	bcf	3,6	;RP1=0, select bank0
 10573  1D6A  0724               	addwf	??_ADC_read,w
 10574  1D6B  00F0               	movwf	___xxtofl@val
 10575  1D6C  3000               	movlw	0
 10576  1D6D  1803               	skipnc
 10577  1D6E  3001               	movlw	1
 10578  1D6F  0725               	addwf	??_ADC_read+1,w
 10579  1D70  00F1               	movwf	___xxtofl@val+1
 10580  1D71  01F2               	clrf	___xxtofl@val+2
 10581  1D72  1BF1               	btfsc	___xxtofl@val+1,7
 10582  1D73  03F2               	decf	___xxtofl@val+2,f
 10583  1D74  0872               	movf	___xxtofl@val+2,w
 10584  1D75  00F3               	movwf	___xxtofl@val+3
 10585  1D76  3001               	movlw	1
 10586  1D77  160A  118A  2013  160A  158A  	fcall	___xxtofl
 10587  1D7C  0873               	movf	?___xxtofl+3,w
 10588  1D7D  1283               	bcf	3,5	;RP0=0, select bank0
 10589  1D7E  1303               	bcf	3,6	;RP1=0, select bank0
 10590  1D7F  00A3               	movwf	?_ADC_read+3
 10591  1D80  0872               	movf	?___xxtofl+2,w
 10592  1D81  00A2               	movwf	?_ADC_read+2
 10593  1D82  0871               	movf	?___xxtofl+1,w
 10594  1D83  00A1               	movwf	?_ADC_read+1
 10595  1D84  0870               	movf	?___xxtofl,w
 10596  1D85  00A0               	movwf	?_ADC_read
 10597  1D86                     l114:
 10598  1D86  0008               	return
 10599  1D87                     __end_of_ADC_read:
 10600                           
 10601                           	psect	text30
 10602  1013                     __ptext30:	
 10603 ;; *************** function ___xxtofl *****************
 10604 ;; Defined at:
 10605 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\xxtofl.c"
 10606 ;; Parameters:    Size  Location     Type
 10607 ;;  sign            1    wreg     unsigned char 
 10608 ;;  val             4    0[COMMON] long 
 10609 ;; Auto vars:     Size  Location     Type
 10610 ;;  sign            1    8[COMMON] unsigned char 
 10611 ;;  arg             4   10[COMMON] unsigned long 
 10612 ;;  exp             1    9[COMMON] unsigned char 
 10613 ;; Return value:  Size  Location     Type
 10614 ;;                  4    0[COMMON] unsigned char 
 10615 ;; Registers used:
 10616 ;;		wreg, status,2, status,0
 10617 ;; Tracked objects:
 10618 ;;		On entry : 0/0
 10619 ;;		On exit  : 0/0
 10620 ;;		Unchanged: 0/0
 10621 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10622 ;;      Params:         4       0       0       0       0
 10623 ;;      Locals:         6       0       0       0       0
 10624 ;;      Temps:          4       0       0       0       0
 10625 ;;      Totals:        14       0       0       0       0
 10626 ;;Total ram usage:       14 bytes
 10627 ;; Hardware stack levels used:    1
 10628 ;; This function calls:
 10629 ;;		Nothing
 10630 ;; This function is called by:
 10631 ;;		_ADC_read
 10632 ;;		_sprintf
 10633 ;; This function uses a non-reentrant model
 10634 ;;
 10635                           
 10636                           
 10637                           ;psect for function ___xxtofl
 10638  1013                     ___xxtofl:
 10639                           
 10640                           ;incstack = 0
 10641                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
 10642                           ;___xxtofl@sign stored from wreg
 10643  1013  00F8               	movwf	___xxtofl@sign
 10644  1014                     l3195:
 10645  1014  0878               	movf	___xxtofl@sign,w
 10646  1015  1903               	btfsc	3,2
 10647  1016  2818               	goto	u5251
 10648  1017  2819               	goto	u5250
 10649  1018                     u5251:
 10650  1018  282D               	goto	l3201
 10651  1019                     u5250:
 10652  1019                     l3197:
 10653  1019  1FF3               	btfss	___xxtofl@val+3,7
 10654  101A  281C               	goto	u5261
 10655  101B  281D               	goto	u5260
 10656  101C                     u5261:
 10657  101C  282D               	goto	l3201
 10658  101D                     u5260:
 10659  101D                     l3199:
 10660  101D  0970               	comf	___xxtofl@val,w
 10661  101E  00FA               	movwf	___xxtofl@arg
 10662  101F  0971               	comf	___xxtofl@val+1,w
 10663  1020  00FB               	movwf	___xxtofl@arg+1
 10664  1021  0972               	comf	___xxtofl@val+2,w
 10665  1022  00FC               	movwf	___xxtofl@arg+2
 10666  1023  0973               	comf	___xxtofl@val+3,w
 10667  1024  00FD               	movwf	___xxtofl@arg+3
 10668  1025  0AFA               	incf	___xxtofl@arg,f
 10669  1026  1903               	skipnz
 10670  1027  0AFB               	incf	___xxtofl@arg+1,f
 10671  1028  1903               	skipnz
 10672  1029  0AFC               	incf	___xxtofl@arg+2,f
 10673  102A  1903               	skipnz
 10674  102B  0AFD               	incf	___xxtofl@arg+3,f
 10675  102C  2835               	goto	l781
 10676  102D                     l3201:
 10677  102D  0873               	movf	___xxtofl@val+3,w
 10678  102E  00FD               	movwf	___xxtofl@arg+3
 10679  102F  0872               	movf	___xxtofl@val+2,w
 10680  1030  00FC               	movwf	___xxtofl@arg+2
 10681  1031  0871               	movf	___xxtofl@val+1,w
 10682  1032  00FB               	movwf	___xxtofl@arg+1
 10683  1033  0870               	movf	___xxtofl@val,w
 10684  1034  00FA               	movwf	___xxtofl@arg
 10685  1035                     l781:
 10686  1035  0873               	movf	___xxtofl@val+3,w
 10687  1036  0472               	iorwf	___xxtofl@val+2,w
 10688  1037  0471               	iorwf	___xxtofl@val+1,w
 10689  1038  0470               	iorwf	___xxtofl@val,w
 10690  1039  1D03               	skipz
 10691  103A  283C               	goto	u5271
 10692  103B  283D               	goto	u5270
 10693  103C                     u5271:
 10694  103C  2846               	goto	l3207
 10695  103D                     u5270:
 10696  103D                     l3203:
 10697  103D  3000               	movlw	0
 10698  103E  00F3               	movwf	?___xxtofl+3
 10699  103F  3000               	movlw	0
 10700  1040  00F2               	movwf	?___xxtofl+2
 10701  1041  3000               	movlw	0
 10702  1042  00F1               	movwf	?___xxtofl+1
 10703  1043  3000               	movlw	0
 10704  1044  00F0               	movwf	?___xxtofl
 10705  1045  28CC               	goto	l783
 10706  1046                     l3207:
 10707  1046  3096               	movlw	150
 10708  1047  00F4               	movwf	??___xxtofl
 10709  1048  0874               	movf	??___xxtofl,w
 10710  1049  00F9               	movwf	___xxtofl@exp
 10711  104A  2858               	goto	l3211
 10712  104B                     l3209:
 10713  104B  3001               	movlw	1
 10714  104C  00F4               	movwf	??___xxtofl
 10715  104D  0874               	movf	??___xxtofl,w
 10716  104E  07F9               	addwf	___xxtofl@exp,f
 10717  104F  3001               	movlw	1
 10718  1050                     u5285:
 10719  1050  1003               	clrc
 10720  1051  0CFD               	rrf	___xxtofl@arg+3,f
 10721  1052  0CFC               	rrf	___xxtofl@arg+2,f
 10722  1053  0CFB               	rrf	___xxtofl@arg+1,f
 10723  1054  0CFA               	rrf	___xxtofl@arg,f
 10724  1055  3EFF               	addlw	-1
 10725  1056  1D03               	skipz
 10726  1057  2850               	goto	u5285
 10727  1058                     l3211:
 10728  1058  30FE               	movlw	254
 10729  1059  057D               	andwf	___xxtofl@arg+3,w
 10730  105A  1D03               	btfss	3,2
 10731  105B  285D               	goto	u5291
 10732  105C  285E               	goto	u5290
 10733  105D                     u5291:
 10734  105D  284B               	goto	l3209
 10735  105E                     u5290:
 10736  105E  287A               	goto	l787
 10737  105F                     l3213:
 10738  105F  3001               	movlw	1
 10739  1060  00F4               	movwf	??___xxtofl
 10740  1061  0874               	movf	??___xxtofl,w
 10741  1062  07F9               	addwf	___xxtofl@exp,f
 10742  1063                     l3215:
 10743  1063  3001               	movlw	1
 10744  1064  07FA               	addwf	___xxtofl@arg,f
 10745  1065  3000               	movlw	0
 10746  1066  1803               	skipnc
 10747  1067  3001               	movlw	1
 10748  1068  07FB               	addwf	___xxtofl@arg+1,f
 10749  1069  3000               	movlw	0
 10750  106A  1803               	skipnc
 10751  106B  3001               	movlw	1
 10752  106C  07FC               	addwf	___xxtofl@arg+2,f
 10753  106D  3000               	movlw	0
 10754  106E  1803               	skipnc
 10755  106F  3001               	movlw	1
 10756  1070  07FD               	addwf	___xxtofl@arg+3,f
 10757  1071                     l3217:
 10758  1071  3001               	movlw	1
 10759  1072                     u5305:
 10760  1072  1003               	clrc
 10761  1073  0CFD               	rrf	___xxtofl@arg+3,f
 10762  1074  0CFC               	rrf	___xxtofl@arg+2,f
 10763  1075  0CFB               	rrf	___xxtofl@arg+1,f
 10764  1076  0CFA               	rrf	___xxtofl@arg,f
 10765  1077  3EFF               	addlw	-1
 10766  1078  1D03               	skipz
 10767  1079  2872               	goto	u5305
 10768  107A                     l787:
 10769  107A  30FF               	movlw	255
 10770  107B  057D               	andwf	___xxtofl@arg+3,w
 10771  107C  1D03               	btfss	3,2
 10772  107D  287F               	goto	u5311
 10773  107E  2880               	goto	u5310
 10774  107F                     u5311:
 10775  107F  285F               	goto	l3213
 10776  1080                     u5310:
 10777  1080  288C               	goto	l3221
 10778  1081                     l3219:
 10779  1081  3001               	movlw	1
 10780  1082  02F9               	subwf	___xxtofl@exp,f
 10781  1083  3001               	movlw	1
 10782  1084  00F4               	movwf	??___xxtofl
 10783  1085                     u5325:
 10784  1085  1003               	clrc
 10785  1086  0DFA               	rlf	___xxtofl@arg,f
 10786  1087  0DFB               	rlf	___xxtofl@arg+1,f
 10787  1088  0DFC               	rlf	___xxtofl@arg+2,f
 10788  1089  0DFD               	rlf	___xxtofl@arg+3,f
 10789  108A  0BF4               	decfsz	??___xxtofl,f
 10790  108B  2885               	goto	u5325
 10791  108C                     l3221:
 10792  108C  1BFC               	btfsc	___xxtofl@arg+2,7
 10793  108D  288F               	goto	u5331
 10794  108E  2890               	goto	u5330
 10795  108F                     u5331:
 10796  108F  2896               	goto	l794
 10797  1090                     u5330:
 10798  1090                     l3223:
 10799  1090  3002               	movlw	2
 10800  1091  0279               	subwf	___xxtofl@exp,w
 10801  1092  1803               	skipnc
 10802  1093  2895               	goto	u5341
 10803  1094  2896               	goto	u5340
 10804  1095                     u5341:
 10805  1095  2881               	goto	l3219
 10806  1096                     u5340:
 10807  1096                     l794:
 10808  1096  1879               	btfsc	___xxtofl@exp,0
 10809  1097  2899               	goto	u5351
 10810  1098  289A               	goto	u5350
 10811  1099                     u5351:
 10812  1099  28A2               	goto	l795
 10813  109A                     u5350:
 10814  109A                     l3225:
 10815  109A  30FF               	movlw	255
 10816  109B  05FA               	andwf	___xxtofl@arg,f
 10817  109C  30FF               	movlw	255
 10818  109D  05FB               	andwf	___xxtofl@arg+1,f
 10819  109E  307F               	movlw	127
 10820  109F  05FC               	andwf	___xxtofl@arg+2,f
 10821  10A0  30FF               	movlw	255
 10822  10A1  05FD               	andwf	___xxtofl@arg+3,f
 10823  10A2                     l795:
 10824  10A2  1003               	clrc
 10825  10A3  0CF9               	rrf	___xxtofl@exp,f
 10826  10A4                     l3227:
 10827  10A4  0879               	movf	___xxtofl@exp,w
 10828  10A5  00F4               	movwf	??___xxtofl
 10829  10A6  01F5               	clrf	??___xxtofl+1
 10830  10A7  01F6               	clrf	??___xxtofl+2
 10831  10A8  01F7               	clrf	??___xxtofl+3
 10832  10A9  3018               	movlw	24
 10833  10AA                     u5365:
 10834  10AA  1003               	clrc
 10835  10AB  0DF4               	rlf	??___xxtofl,f
 10836  10AC  0DF5               	rlf	??___xxtofl+1,f
 10837  10AD  0DF6               	rlf	??___xxtofl+2,f
 10838  10AE  0DF7               	rlf	??___xxtofl+3,f
 10839  10AF                     u5360:
 10840  10AF  3EFF               	addlw	-1
 10841  10B0  1D03               	skipz
 10842  10B1  28AA               	goto	u5365
 10843  10B2  0874               	movf	??___xxtofl,w
 10844  10B3  04FA               	iorwf	___xxtofl@arg,f
 10845  10B4  0875               	movf	??___xxtofl+1,w
 10846  10B5  04FB               	iorwf	___xxtofl@arg+1,f
 10847  10B6  0876               	movf	??___xxtofl+2,w
 10848  10B7  04FC               	iorwf	___xxtofl@arg+2,f
 10849  10B8  0877               	movf	??___xxtofl+3,w
 10850  10B9  04FD               	iorwf	___xxtofl@arg+3,f
 10851  10BA                     l3229:
 10852  10BA  0878               	movf	___xxtofl@sign,w
 10853  10BB  1903               	btfsc	3,2
 10854  10BC  28BE               	goto	u5371
 10855  10BD  28BF               	goto	u5370
 10856  10BE                     u5371:
 10857  10BE  28C4               	goto	l3235
 10858  10BF                     u5370:
 10859  10BF                     l3231:
 10860  10BF  1FF3               	btfss	___xxtofl@val+3,7
 10861  10C0  28C2               	goto	u5381
 10862  10C1  28C3               	goto	u5380
 10863  10C2                     u5381:
 10864  10C2  28C4               	goto	l3235
 10865  10C3                     u5380:
 10866  10C3                     l3233:
 10867  10C3  17FD               	bsf	___xxtofl@arg+3,7
 10868  10C4                     l3235:
 10869  10C4  087D               	movf	___xxtofl@arg+3,w
 10870  10C5  00F3               	movwf	?___xxtofl+3
 10871  10C6  087C               	movf	___xxtofl@arg+2,w
 10872  10C7  00F2               	movwf	?___xxtofl+2
 10873  10C8  087B               	movf	___xxtofl@arg+1,w
 10874  10C9  00F1               	movwf	?___xxtofl+1
 10875  10CA  087A               	movf	___xxtofl@arg,w
 10876  10CB  00F0               	movwf	?___xxtofl
 10877  10CC                     l783:
 10878  10CC  0008               	return
 10879  10CD                     __end_of___xxtofl:
 10880                           
 10881                           	psect	text31
 10882  1B2C                     __ptext31:	
 10883 ;; *************** function _ADC_init *****************
 10884 ;; Defined at:
 10885 ;;		line 11 in file "ADC.c"
 10886 ;; Parameters:    Size  Location     Type
 10887 ;;  s               1    wreg     enum E1264
 10888 ;;  r               1    0[COMMON] enum E1270
 10889 ;; Auto vars:     Size  Location     Type
 10890 ;;  s               1    3[COMMON] enum E1264
 10891 ;; Return value:  Size  Location     Type
 10892 ;;                  1    wreg      void 
 10893 ;; Registers used:
 10894 ;;		wreg, status,2, status,0
 10895 ;; Tracked objects:
 10896 ;;		On entry : 0/0
 10897 ;;		On exit  : 0/0
 10898 ;;		Unchanged: 0/0
 10899 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10900 ;;      Params:         1       0       0       0       0
 10901 ;;      Locals:         1       0       0       0       0
 10902 ;;      Temps:          2       0       0       0       0
 10903 ;;      Totals:         4       0       0       0       0
 10904 ;;Total ram usage:        4 bytes
 10905 ;; Hardware stack levels used:    1
 10906 ;; This function calls:
 10907 ;;		Nothing
 10908 ;; This function is called by:
 10909 ;;		_main
 10910 ;; This function uses a non-reentrant model
 10911 ;;
 10912                           
 10913                           
 10914                           ;psect for function _ADC_init
 10915  1B2C                     _ADC_init:
 10916                           
 10917                           ;incstack = 0
 10918                           ; Regs used in _ADC_init: [wreg+status,2+status,0]
 10919                           ;ADC_init@s stored from wreg
 10920  1B2C  00F3               	movwf	ADC_init@s
 10921  1B2D                     l3239:
 10922                           
 10923                           ;ADC.c: 11: void ADC_init(ADC_source s,ADC_ref r);ADC.c: 12: {;ADC.c: 13:     ADCON0bits
      +                          .ADON = 1;
 10924  1B2D  1283               	bcf	3,5	;RP0=0, select bank0
 10925  1B2E  1303               	bcf	3,6	;RP1=0, select bank0
 10926  1B2F  141F               	bsf	31,0	;volatile
 10927  1B30                     l3241:
 10928                           
 10929                           ;ADC.c: 14:     ADCON0bits.ADCS = s;
 10930  1B30  0873               	movf	ADC_init@s,w
 10931  1B31  00F1               	movwf	??_ADC_init
 10932  1B32  0EF1               	swapf	??_ADC_init,f
 10933  1B33  0DF1               	rlf	??_ADC_init,f
 10934  1B34  0DF1               	rlf	??_ADC_init,f
 10935  1B35  081F               	movf	31,w	;volatile
 10936  1B36  0671               	xorwf	??_ADC_init,w
 10937  1B37  393F               	andlw	-193
 10938  1B38  0671               	xorwf	??_ADC_init,w
 10939  1B39  009F               	movwf	31	;volatile
 10940                           
 10941                           ;ADC.c: 15:     ADCON1bits.VCFG1 = r >> 1;
 10942  1B3A  0870               	movf	ADC_init@r,w
 10943  1B3B  00F1               	movwf	??_ADC_init
 10944  1B3C  1003               	clrc
 10945  1B3D  0C71               	rrf	??_ADC_init,w
 10946  1B3E  00F2               	movwf	??_ADC_init+1
 10947  1B3F  0EF2               	swapf	??_ADC_init+1,f
 10948  1B40  0DF2               	rlf	??_ADC_init+1,f
 10949  1B41  1683               	bsf	3,5	;RP0=1, select bank1
 10950  1B42  1303               	bcf	3,6	;RP1=0, select bank1
 10951  1B43  081F               	movf	31,w	;volatile
 10952  1B44  0672               	xorwf	??_ADC_init+1,w
 10953  1B45  39DF               	andlw	-33
 10954  1B46  0672               	xorwf	??_ADC_init+1,w
 10955  1B47  009F               	movwf	31	;volatile
 10956  1B48                     l3243:
 10957                           
 10958                           ;ADC.c: 16:     ADCON1bits.VCFG0 = r;
 10959  1B48  0C70               	rrf	ADC_init@r,w
 10960  1B49  1C03               	skipc
 10961  1B4A  121F               	bcf	31,4	;volatile
 10962  1B4B  1803               	skipnc
 10963  1B4C  161F               	bsf	31,4	;volatile
 10964  1B4D                     l3245:
 10965                           
 10966                           ;ADC.c: 17:     ADCON1bits.ADFM = 1;
 10967  1B4D  179F               	bsf	31,7	;volatile
 10968  1B4E                     l108:
 10969  1B4E  0008               	return
 10970  1B4F                     __end_of_ADC_init:
 10971  007E                     btemp	set	126	;btemp
 10972  007E                     wtemp0	set	126
 10973                           
 10974                           	psect	config
 10975                           
 10976                           ;Config register CONFIG1 @ 0x2007
 10977                           ;	Oscillator Selection bits
 10978                           ;	FOSC = EXTRC_CLKOUT, RC oscillator: CLKOUT function on RA6/OSC2/CLKOUT pin, RC on RA7/
      +                          OSC1/CLKIN
 10979                           ;	Watchdog Timer Enable bit
 10980                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
 10981                           ;	Power-up Timer Enable bit
 10982                           ;	PWRTE = OFF, PWRT disabled
 10983                           ;	RE3/MCLR pin function select bit
 10984                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
 10985                           ;	Code Protection bit
 10986                           ;	CP = OFF, Program memory code protection is disabled
 10987                           ;	Data Code Protection bit
 10988                           ;	CPD = OFF, Data memory code protection is disabled
 10989                           ;	Brown Out Reset Selection bits
 10990                           ;	BOREN = OFF, BOR disabled
 10991                           ;	Internal External Switchover bit
 10992                           ;	IESO = OFF, Internal/External Switchover mode is disabled
 10993                           ;	Fail-Safe Clock Monitor Enabled bit
 10994                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
 10995                           ;	Low Voltage Programming Enable bit
 10996                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
 10997                           ;	In-Circuit Debugger Mode bit
 10998                           ;	DEBUG = 0x1, unprogrammed default
 10999  2007                     	org	8199
 11000  2007  20F7               	dw	8439
 11001                           
 11002                           ;Config register CONFIG2 @ 0x2008
 11003                           ;	Brown-out Reset Selection bit
 11004                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
 11005                           ;	Flash Program Memory Self Write Enable bits
 11006                           ;	WRT = OFF, Write protection off
 11007  2008                     	org	8200
 11008  2008  3FFF               	dw	16383

Data Sizes:
    Strings     16
    Constant    144
    Data        0
    BSS         37
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     79      79
    BANK1            80     45      67
    BANK3            96      0      16
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 16
		 -> STR_1(CODE[16]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 16
		 -> buffer(BANK3[16]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    lcd_puts@str	PTR unsigned char  size(1) Largest target is 16
		 -> buffer(BANK3[16]), 


Critical Paths under _main in COMMON

    _sprintf->___lldiv
    _sprintf->___xxtofl
    ___awdiv->___awmod
    _fround->___lwdiv
    ___lwdiv->___lwmod
    ___flmul->___lwdiv
    ___flsub->___xxtofl
    _lcd_puts->_lcd_data
    _lcd_data->_lcd_com
    _lcd_init->_lcd_com
    _lcd_init_write->_delay
    _lcd_com->_delay
    _ADC_read->___xxtofl

Critical Paths under _main in BANK0

    _sprintf->___flsub
    _scale->___flmul
    _fround->___flmul
    ___flmul->___awdiv
    ___fltol->___flmul
    ___flsub->___fladd
    ___fladd->_fround

Critical Paths under _main in BANK1

    _main->_sprintf

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 9     9      0   41668
                                             78 BANK0      1     1      0
                                             37 BANK1      8     8      0
                           _ADC_init
                           _ADC_read
                            ___fldiv
                            _lcd_com
                           _lcd_init
                           _lcd_puts
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             42    37      5   31476
                                              0 BANK1     37    32      5
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               19    15      4    7408
                                             30 BANK0     19    15      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    1208
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1364
                                              7 COMMON     5     1      4
                                              0 BANK0      4     4      0
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              20    16      4    6175
                                             30 BANK0     20    16      4
                            ___flmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     767
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     770
                                              6 COMMON     8     4      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             26    18      8    4393
                                              4 BANK0     26    18      8
                          __Umul8_16
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (4) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         18    10      8     455
                                              0 COMMON    12     4      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          15     7      8     455
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     548
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     615
                                              0 COMMON    10     2      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     466
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     457
                                             30 BANK0     11     7      4
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    2485
                                             70 BANK0      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    2288
                                             50 BANK0     20    12      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flneg                                              4     0      4     121
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8     790
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fleq                                              12     4      8     394
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (1) _lcd_puts                                             4     4      0    1844
                                              9 COMMON     4     4      0
                           _lcd_data
 ---------------------------------------------------------------------------------
 (2) _lcd_data                                             1     1      0    1678
                                              8 COMMON     1     1      0
                            _lcd_com
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0    4700
                              _delay
                            _lcd_com
                     _lcd_init_write
 ---------------------------------------------------------------------------------
 (2) _lcd_init_write                                       1     1      0    1542
                                              4 COMMON     1     1      0
                              _delay
 ---------------------------------------------------------------------------------
 (3) _lcd_com                                              4     4      0    1647
                                              4 COMMON     4     4      0
                              _delay
 ---------------------------------------------------------------------------------
 (4) _delay                                                4     2      2    1511
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) ___fldiv                                             26    18      8    1273
                                              0 COMMON    13     5      8
                                              0 BANK0     13    13      0
 ---------------------------------------------------------------------------------
 (1) _ADC_read                                             7     3      4     518
                                              0 BANK0      7     3      4
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     474
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (1) _ADC_init                                             4     3      1     142
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_init
   _ADC_read
     ___xxtofl
   ___fldiv
   _lcd_com
     _delay
   _lcd_init
     _delay
     _lcd_com
       _delay
     _lcd_init_write
       _delay
   _lcd_puts
     _lcd_data
       _lcd_com
         _delay
   _sprintf
     ___awdiv
       ___awmod (ARG)
     ___fladd
       _fround (ARG)
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
     ___fleq
     ___flge
     ___flmul
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
     ___flneg
     ___flsub
       ___fladd
         _fround (ARG)
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
     ___lldiv
     ___llmod
     ___wmul
     ___xxtofl
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       ___lwdiv
         ___lwmod (ARG)
       ___lwmod
     _isdigit
     _scale
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      B0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4F      4F       5       98.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       1       6        1.2%
BANK1               50     2D      43       7       83.8%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0      10       9       16.7%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      B0      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Mon Apr 19 15:44:09 2021

           ___fldiv@aexp 002C             ___fldiv@bexp 002B                        _c 00E1  
                      pc 0002             ___fldiv@sign 0024              lcd_com@temp 0077  
                     l42 1B0A                       l50 1CDC                       l45 1AF4  
                     l53 1ADF                       l62 1B2B                       l39 1B00  
                     l48 1C94                       l56 1F5D                       l49 1C97  
           ___awdiv@sign 0021                       fsr 0004      ___wmul@multiplicand 0072  
    __Umul8_16@word_mpld 0076                      l114 1D86                      l108 1B4E  
                    l116 1D5B                      l220 1577                      l310 07E6  
                    l314 1B7F                      l227 0C9E                      l500 1C59  
                    l316 1B97                      l501 1C75                      l502 1C8A  
                    l350 1E45                      l280 0576                      l505 1F7A  
                    l513 1AD1                      l249 0131                      l531 1189  
                    l508 1FE6                      l524 086C                      l532 10FB  
                    l620 1C3C                      l509 1FFF                      l517 0881  
                    l542 117C                      l630 1BF8                      l527 0881  
                    l535 114C                      l295 0721                      l287 05BA  
                    l480 1DDF                      l721 1360                      l713 12DE  
                    l641 15DB                      l801 1012                      l570 1D30  
                    l467 006B                      l484 093F                      l645 1682  
                    l485 08A4                      l662 174D                      l654 17FF  
                    l719 1350                      l647 1659                      l495 0932  
                    l743 0F6B                      l672 1793                      l488 0902  
                    l737 0FFF                      l666 1771                      l683 17F3  
                    l675 17D1                      l684 17FF                      l756 1BAC  
                    l781 1035                      l749 0FF3                      l758 1BBE  
                    l783 10CC                      l687 1B72                      l697 11E6  
                    l794 1096                      l795 10A2                      l787 107A  
                    l699 136C                      _num 00CD                      fsr0 0004  
                    indf 0000             ___awmod@sign 0076             ___flmul@aexp 0036  
           ___flmul@bexp 0037              _sprintf$924 00AA             ___flmul@sign 0031  
           ___flmul@temp 003C             ___flmul@prod 0038             ___fltol@exp1 0048  
                   l3003 0882                     l3101 1C89                     l3021 08C0  
                   l3005 088F                     l3111 1F96                     l3031 08F3  
                   l3023 08C9                     l3015 08A5                     l3201 102D  
                   l3121 1FFE                     l3113 1F9A                     l3105 1F5E  
                   l3041 090E                     l3033 08FC                     l3025 08D2  
                   l3017 08AD                     l3009 0898                     l4001 0147  
                   l3211 1058                     l3203 103D                     l3115 1FBE  
                   l3107 1F72                     l3051 0937                     l3035 0906  
                   l3043 0920                     l3027 08E4                     l3019 08BE  
                   l2411 0011                     l2403 0003                     l3221 108C  
                   l3213 105F                     l3117 1FC2                     l3109 1F8E  
                   l3125 1AC7                     l3141 0831                     l3133 0806  
                   l3061 1B86                     l3029 08F2                     l2501 1C2A  
                   l2421 0026                     l2413 0015                     l2405 0006  
                   l3301 0105                     l3231 10BF                     l3223 1090  
                   l3215 1063                     l3207 1046                     l3119 1FFC  
                   l3127 1ACF                     l3143 0832                     l3135 0813  
                   l3071 1DF0                     l3063 1B8D                     l3055 1B73  
                   l2503 1C2B                     l2511 1BBF                     l2431 0049  
                   l2423 0029                     l2415 001A                     l2407 000A  
                   l3303 0118                     l3241 1B30                     l3233 10C3  
                   l3225 109A                     l3217 1071                     l3209 104B  
                   l3129 1AD1                     l2601 1611                     l3145 083A  
                   l3081 1E1F                     l3073 1DF3                     l3065 1B93  
                   l3057 1B75                     l3049 0927                     l2361 1BA2  
                   l2505 1C32                     l2521 1BD7                     l2513 1BC5  
                   l2441 0062                     l2433 004F                     l2425 0030  
                   l2417 001E                     l2409 000F                     l3401 049D  
                   l3321 0163                     l3313 0133                     l3305 011C  
                   l3243 1B48                     l3235 10C4                     l3227 10A4  
                   l3219 1081                     l2603 1615                     l2611 1625  
                   l3163 0861                     l3155 0848                     l3147 083C  
                   l3139 081C                     l3083 1E2D                     l3075 1E00  
                   l3171 1CE5                     l3059 1B79                     l2363 1BA6  
                   l2507 1C38                     l2523 1BE1                     l2515 1BC8  
                   l2443 0067                     l2435 0050                     l2427 0034  
                   l2419 0020                     l2451 1D8C                     l3411 04DB  
                   l3403 04A7                     l3331 01AB                     l3323 0171  
                   l3315 014F                     l3307 012D                     l3245 1B4D  
                   l3229 10BA                     l3261 1D4D                     l3253 1D3B  
                   l3093 1C3D                     l2701 179D                     l2621 1668  
                   l2613 1626                     l2605 1619                     l2541 158A  
                   l2533 1578                     l3165 0871                     l3149 0840  
                   l3157 085A                     l3085 1E2E                     l3077 1E04  
                   l3069 1DE0                     l3181 1D19                     l3173 1CE8  
                   l2365 1BB5                     l2357 1B99                     l2525 1BE7  
                   l2517 1BCF                     l2437 0057                     l2429 0038  
                   l2461 1DA2                     l2453 1D91                     l3501 078F  
                   l3421 0504                     l3413 04E4                     l3405 04C2  
                   l3341 01EC                     l3333 01AF                     l3325 0175  
                   l3317 015B                     l3309 012F                     l3239 1B2D  
                   l3263 1D58                     l3095 1C51                     l2711 17DB  
                   l2703 17AB                     l2631 1686                     l2623 166C  
                   l2615 163D                     l2607 161D                     l2543 158F  
                   l2551 159F                     l2535 157F                     l3191 1B53  
                   l3167 0876                     l3087 1E37                     l3079 1E0D  
                   l3183 1D22                     l3175 1CF5                     l2367 1BBA  
                   l2359 1B9B                     l2527 1BEE                     l2519 1BD3  
                   l2439 005D                     l2471 1DBE                     l2463 1DA5  
                   l2455 1D93                     l2447 1D87                     l3511 07B0  
                   l3503 079B                     l3431 057E                     l3423 050B  
                   l3407 04C8                     l3351 0273                     l3343 01FF  
                   l3335 01C8                     l3327 018E                     l3319 015F  
                   l3271 0074                     l3265 1D5F                     l3249 1D34  
                   l3601 123F                     l3097 1C6D                     l2721 17EF  
                   l2713 17E3                     l2705 17AF                     l2641 16AF  
                   l2633 168B                     l2625 166D                     l2617 165D  
                   l2609 1621                     l2561 15B9                     l2553 15A7  
                   l2545 1594                     l2537 1585                     l3089 1E3D  
                   l3177 1CF9                     l3185 1D28                     l3169 1CDD  
                   l2801 0E8C                     l2529 1BF4                     l2481 1DDB  
                   l2473 1DC4                     l2465 1DAC                     l2457 1D97  
                   l2449 1D88                     l3513 07BC                     l3505 079F  
                   l3441 05AD                     l3433 0587                     l3425 0510  
                   l3409 04D4                     l3417 04E9                     l3361 02C7  
                   l3353 028C                     l3345 0203                     l3337 01D3  
                   l3329 01A7                     l3521 07E2                     l3281 009A  
                   l3273 007A                     l3195 1014                     l3259 1D44  
                   l3611 125D                     l3603 1241                     l3099 1C87  
                   l2723 17FA                     l2715 17E8                     l2707 17CD  
                   l2651 16C3                     l2643 16B3                     l2627 1676  
                   l2619 1666                     l2571 15D0                     l2563 15BD  
                   l2555 15AC                     l2547 159C                     l2539 1589  
                   l3179 1D0B                     l2811 0F20                     l2803 0E9C  
                   l2731 0CAC                     l2491 1C04                     l2475 1DCB  
                   l2467 1DB0                     l2459 1D9C                     l3515 07C8  
                   l3507 07A5                     l3451 05D3                     l3443 05B4  
                   l3435 058B                     l3427 054B                     l3419 04F6  
                   l3371 036E                     l3363 030E                     l3355 0295  
                   l3347 0209                     l3339 01D9                     l3283 009E  
                   l3291 00DA                     l3275 0081                     l3197 1019  
                   l3605 1246                     l3613 1266                     l3621 1291  
                   l3541 1191                     l2725 17FE                     l2717 17E9  
                   l2709 17D6                     l2661 172B                     l2653 16CC  
                   l2645 16BC                     l2637 1694                     l2629 167A  
                   l2581 15E9                     l2573 15D1                     l2565 15BE  
                   l2557 15B2                     l2549 159D                     l3189 1B4F  
                   l2821 0F45                     l2813 0F2E                     l2805 0EC9  
                   l2741 0CC3                     l2733 0CB0                     l2493 1C0B  
                   l2485 1BF9                     l2469 1DB4                     l2477 1DD1  
                   l2901 0947                     l3509 07AC                     l3461 06B2  
                   l3453 05F1                     l3445 05C3                     l3437 0591  
                   l3429 056A                     l3373 0389                     l3365 031D  
                   l3357 02B0                     l3349 0228                     l3293 00E8  
                   l3285 00B3                     l3277 0086                     l3269 006F  
                   l3199 101D                     l3631 12AE                     l3623 1297  
                   l3615 1278                     l3607 1258                     l3551 11A6  
                   l3543 1197                     l2719 17ED                     l2663 1730  
                   l2647 16BE                     l2639 16AB                     l2655 16D1  
                   l2591 15FD                     l2583 15ED                     l2567 15C3  
                   l2575 15D3                     l2559 15B3                     l2831 0F68  
                   l2815 0F37                     l2823 0F4B                     l2807 0EEF  
                   l2751 0CDC                     l2743 0CC5                     l2735 0CB1  
                   l2727 0C9F                     l2495 1C0F                     l2487 1BFB  
                   l2479 1DD6                     l2911 0A38                     l2903 0949  
                   l3471 0706                     l3455 064C                     l3463 06ED  
                   l3447 05C8                     l3439 059E                     l3391 0464  
                   l3383 03D7                     l3375 0392                     l3367 0338  
                   l3359 02B8                     l3295 00E9                     l3287 00C6  
                   l3279 008A                     l3519 07D0                     l3641 12C3  
                   l3633 12AF                     l3625 129F                     l3617 1279  
                   l3609 125C                     l3561 11BE                     l3553 11AE  
                   l3545 119B                     l2681 1778                     l2673 1763  
                   l2657 16E7                     l2665 173F                     l2649 16C2  
                   l2593 1601                     l2585 15F1                     l2577 15E1  
                   l2569 15C8                     l2841 0F87                     l2825 0F4F  
                   l2817 0F3B                     l2809 0F17                     l2761 0CF1  
                   l2753 0CDD                     l2745 0CCD                     l2737 0CB6  
                   l2729 0CA6                     l2497 1C13                     l2489 1C01  
                   l2913 0A3F                     l2905 0950                     l2921 0AF4  
                   l3481 0733                     l3465 06F5                     l3457 0687  
                   l3449 05CF                     l3377 039A                     l3369 035F  
                   l3385 03E0                     l3473 070D                     l3297 00ED  
                   l3289 00CA                     l3651 12E8                     l3643 12C7  
                   l3635 12B8                     l3627 12A1                     l3619 128D  
                   l3571 11D3                     l3563 11C4                     l3555 11AF  
                   l3547 119C                     l3539 118A                     l3811 1AF5  
                   l2691 1786                     l2683 177A                     l2675 176C  
                   l2667 1755                     l2659 1725                     l2595 1605  
                   l2587 15F5                     l2579 15E5                     l2851 0FCD  
                   l2843 0FA0                     l2835 0F70                     l2827 0F50  
                   l2819 0F3C                     l2771 0D0C                     l2763 0CF9  
                   l2755 0CE2                     l2747 0CD2                     l2739 0CBB  
                   l2499 1C24                     l2931 0BEA                     l2923 0AFB  
                   l3491 0765                     l3483 0742                     l3475 0713  
                   l3467 06FC                     l3459 06A6                     l3387 0415  
                   l3379 03B8                     l3299 00F0                     l3661 1326  
                   l3653 12F6                     l3645 12DB                     l3629 12AA  
                   l3637 12BE                     l3581 11FA                     l3573 11DB  
                   l3565 11C8                     l3549 11A1                     l3557 11B1  
                   l3813 1AFA                     l3821 1C9D                     l2693 178A  
                   l2685 177F                     l2677 1770                     l2669 175A  
                   l2597 1609                     l2589 15F9                     l2861 0FEC  
                   l2853 0FD7                     l2837 0F75                     l2845 0FA6  
                   l2829 0F54                     l2781 0D8E                     l2773 0D1C  
                   l2765 0CFE                     l2757 0CE7                     l2749 0CD8  
                   l2941 1003                     l2917 0AC7                     l3493 0769  
                   l3485 074B                     l3477 071B                     l3469 0700  
                   l3397 0466                     l3389 0462                     l3671 1356  
                   l3663 1334                     l3655 12FA                     l3639 12C2  
                   l3583 11FE                     l3575 11DC                     l3567 11C9  
                   l3559 11B9                     l3831 1CB3                     l3823 1CA1  
                   l3815 1C8C                     l2695 1790                     l2679 1775  
                   l2687 1781                     l2599 160D                     l2951 10CD  
                   l2863 0FF7                     l2855 0FD9                     l2847 0FB3  
                   l2839 0F83                     l2791 0DFC                     l2783 0DAA  
                   l2775 0D29                     l2767 0D03                     l2759 0CEF  
                   l2943 1009                     l2935 0C72                     l3495 0777  
                   l3487 0753                     l3479 072C                     l3673 135A  
                   l3665 1343                     l3657 1313                     l3649 12E3  
                   l3593 1215                     l3569 11CE                     l3577 11DE  
                   l3841 1CCF                     l3833 1CB6                     l3825 1CA5  
                   l3817 1C92                     l2689 1785                     l2953 10E0  
                   l2857 0FE7                     l2849 0FBE                     l2793 0E0C  
                   l2785 0DC6                     l2777 0D46                     l2881 1370  
                   l2945 100F                     l2929 0BE3                     l3497 0780  
                   l3489 075F                     l3675 135C                     l3667 1347  
                   l3659 1319                     l3595 1227                     l3579 11EE  
                   l3587 1207                     l3843 1CD0                     l3835 1CC3  
                   l3827 1CA9                     l3819 1C99                     l3851 1AE7  
                   l2699 1798                     l2971 111C                     l2963 10FC  
                   l2859 0FEB                     l2795 0E29                     l2787 0DCF  
                   l2779 0D62                     l2891 1489                     l2883 1376  
                   l2947 1011                     l2939 1002                     l3499 0784  
                   l3669 134F                     l3597 122F                     l3589 120C  
                   l3845 1CD9                     l3837 1CC7                     l3829 1CAA  
                   l3853 1AE8                     l3861 1EBE                     l2981 1146  
                   l2973 1125                     l2965 1102                     l2957 10E9  
                   l2797 0E42                     l2789 0DDF                     l3599 1237  
                   l3839 1CCB                     l3855 1AF1                     l3847 1AE1  
                   l3863 1B0C                     l2983 1150                     l2991 116A  
                   l2975 1133                     l2967 1111                     l2799 0E5F  
                   l2895 1534                     l3871 1E46                     l3849 1AE5  
                   l3857 1AD3                     l3865 1B0F                     l2977 113D  
                   l2969 1113                     l2889 1483                     l3881 1E79  
                   l3873 1E49                     l3859 1AD9                     l3867 1B1A  
                   l2979 113E                     l2899 0943                     l3883 1E98  
                   l3875 1E4A                     l3869 1B20                     l2997 1171  
                   l2989 1158                     l3885 1EAE                     l3877 1E56  
                   l2999 1181                     l3887 1EB4                     l3879 1E5B  
                   STR_1 1896                     u4000 0CDC                     u3200 0015  
                   u4001 0CDB                     u3201 0014                     u4010 0CE2  
                   u3210 0026                     u4011 0CE1                     u3211 0025  
                   u3140 1BA6                     u4020 0CE7                     u3300 1D97  
                   u3141 1BA5                     u4101 0DEE                     u4021 0CE6  
                   u3301 1D96                     u4102 0DF5                     u4030 0CFE  
                   u3230 0038                     u3310 1DA2                     u4111 0E1B  
                   u4103 0DFC                     u4031 0CFD                     u3231 0037  
                   u3311 1DA1                     u5000 1C87                     u3160 1BBA  
                   u4112 0E22                     u4040 0D03                     u3400 1C13  
                   u5001 1C86                     u3161 1BB9                     u4113 0E29  
                   u4041 0D02                     u3401 1C12                     u3225 002A  
                   u5010 1F72                     u3250 0049                     u3330 1DB4  
                   u5011 1F71                     u3155 1BAD                     u4131 0E51  
                   u4051 0D54                     u3251 0048                     u3331 1DB3  
                   u5020 1F8E                     u5100 082A                     u4300 0F96  
                   u4220 0F3B                     u4132 0E58                     u4052 0D5B  
                   u3420 1C24                     u3500 1BF4                     u3340 1DBE  
                   u5005 1C83                     u5021 1F8D                     u4221 0F3A  
                   u4205 0F19                     u4141 0E7E                     u4133 0E5F  
                   u4125 0E2B                     u4061 0D70                     u4053 0D62  
                   u3421 1C23                     u3501 1BF3                     u3245 0039  
                   u3341 1DBD                     u3325 1DA6                     u5030 1F9A  
                   u3510 1589                     u5110 0840                     u4310 0FB3  
                   u4142 0E85                     u4062 0D77                     u3270 005D  
                   u3190 000A                     u5031 1F99                     u3511 1588  
                   u5111 083F                     u4311 0FB2                     u4215 0F30  
                   u4151 0EAB                     u4143 0E8C                     u4071 0D9C  
                   u4063 0D7E                     u3415 1C14                     u3271 005C  
                   u3255 0045                     u3191 0009                     u6000 125C  
                   u3600 163D                     u3520 158F                     u5120 0847  
                   u4320 0FCD                     u4240 0F4F                     u4160 0ED5  
                   u4152 0EB2                     u4072 0DA3                     u3440 1C38  
                   u3280 0062                     u3360 1DD1                     u6001 125B  
                   u5041 1FA9                     u3601 163C                     u3521 158E  
                   u5121 0846                     u5105 0825                     u4321 0FCC  
                   u4305 0F91                     u4241 0F4E                     u4153 0EB9  
                   u4081 0DB8                     u4073 0DAA                     u3441 1C37  
                   u3425 1C20                     u3281 0061                     u3265 0051  
                   u3361 1DD0                     u3345 1DBA                     u5050 1FC2  
                   u5042 1FAA                     u3610 1648                     u3530 1594  
                   u5210 1CF9                     u4330 0FEB                     u4250 0F54  
                   u4082 0DBF                     u3450 1BC5                     u3370 1DD6  
                   u3290 1D8C                     u5051 1FC1                     u5043 1FAF  
                   u3611 1646                     u3531 1593                     u5211 1CF8  
                   u4331 0FEA                     u4315 0FAF                     u4251 0F53  
                   u4235 0F3E                     u4171 0EE1                     u4083 0DC6  
                   u3435 1C2C                     u3451 1BC4                     u3371 1DD5  
                   u3355 1DC5                     u3291 1D8B                     u6100 12C7  
                   u6020 1278                     u5044 1FB0                     u3700 16AF  
                   u3620 1649                     u3540 15B2                     u5140 0859  
                   u5220 1D0B                     u4260 0F68                     u4180 0EFD  
                   u4172 0EE8                     u3380 1C01                     u4340 1376  
                   u4420 0947                     u6101 12C6                     u6021 1277  
                   u5061 1FD1                     u5045 1FB5                     u3701 16AE  
                   u3605 1639                     u3541 15B1                     u5141 0858  
                   u5221 1D0A                     u5205 1CEA                     u4325 0FC9  
                   u4261 0F67                     u4173 0EEF                     u4165 0ED0  
                   u3381 1C00                     u4405 14F3                     u4341 1375  
                   u4421 0946                     u5310 1080                     u6110 12DB  
                   u6030 128D                     u5070 1FFC                     u5062 1FD2  
                   u5046 1FB6                     u3710 16B3                     u3630 165D  
                   u3550 15BD                     u5150 0860                     u4270 0F6F  
                   u3470 1BD7                     u4510 0AFB                     u4430 0950  
                   u5311 107F                     u6111 12DA                     u6015 125F  
                   u5071 1FFB                     u5063 1FD7                     u3711 16B2  
                   u3631 165C                     u3551 15BC                     u5151 085F  
                   u5135 0849                     u4271 0F6E                     u4191 0F09  
                   u4095 0DC8                     u3471 1BD6                     u4415 153F  
                   u4511 0AFA                     u4431 094F                     u5400 1D5F  
                   u6120 12E2                     u6040 1297                     u5064 1FD8  
                   u5080 1ACF                     u3720 16C2                     u3640 166C  
                   u3560 15C3                     u5240 1D28                     u4280 0F75  
                   u4192 0F10                     u3480 1BE1                     u4600 100F  
                   u5305 1072                     u5401 1D5E                     u6121 12E1  
                   u6041 1296                     u6025 1274                     u5065 1FDD  
                   u5081 1ACE                     u3721 16C1                     u3641 166B  
                   u3561 15C2                     u5241 1D27                     u5225 1D07  
                   u4281 0F74                     u4193 0F17                     u4185 0EF8  
                   u3481 1BE0                     u3465 1BC9                     u4601 100E  
                   u4505 0ACA                     u5330 1090                     u5250 1019  
                   u6130 12E8                     u6050 129F                     u5066 1FDE  
                   u3810 1770                     u3570 15C8                     u5170 0871  
                   u5090 0813                     u4610 10E0                     u4290 0F87  
                   u5410 007A                     u5331 108F                     u5251 1018  
                   u6131 12E7                     u6051 129E                     u6035 1280  
                   u5075 1FF8                     u3811 176F                     u3571 15C7  
                   u5171 0870                     u5091 0812                     u5235 1D1A  
                   u4611 10DF                     u4291 0F86                     u3395 1C05  
                   u4355 1393                     u5411 0079                     u5340 1096  
                   u5260 101D                     u6140 12FA                     u6036 1281  
                   u3900 17BE                     u3820 1775                     u3740 16E7  
                   u3660 1682                     u3580 15E1                     u5180 0876  
                   u4700 1169                     u4620 10FA                     u4380 1489  
                   u5500 0203                     u5420 009A                     u5341 1095  
                   u5325 1085                     u5261 101C                     u6141 12F9  
                   u6037 1286                     u3821 1774                     u3805 1765  
                   u3741 16E6                     u3661 1681                     u3581 15E0  
                   u5181 0875                     u5165 0863                     u4701 1168  
                   u4621 10F9                     u3485 1BDD                     u4381 1488  
                   u4365 13ED                     u4525 0B1B                     u4445 0970  
                   u5501 0202                     u5421 0099                     u5350 109A  
                   u5270 103D                     u6150 1309                     u6070 12AE  
                   u6038 1287                     u3910 17CD                     u3830 177F  
                   u3670 1686                     u3590 15E5                     u5190 1CE5  
                   u4710 1170                     u4550 0BEA                     u4470 0A3F  
                   u5510 028C                     u5430 00DA                     u5351 1099  
                   u5271 103C                     u6071 12AD                     u6039 128C  
                   u3911 17CC                     u3831 177E                     u3751 16FE  
                   u3743 16E3                     u3735 16C5                     u3671 1685  
                   u3655 166F                     u3591 15E4                     u5191 1CE4  
                   u4711 116F                     u3495 1BE8                     u4375 1442  
                   u4551 0BE9                     u4535 0B57                     u4471 0A3E  
                   u4455 09AC                     u5511 028B                     u5431 00D9  
                   u5360 10AF                     u6160 1326                     u3920 17D6  
                   u3840 1785                     u3760 1712                     u3752 16FF  
                   u3680 168B                     u4800 0906                     u4640 1133  
                   u5600 049C                     u5520 02B0                     u5440 00E8  
                   u6161 1325                     u6065 12A3                     u3921 17D5  
                   u3905 17B9                     u3841 1784                     u3761 1713  
                   u3753 1704                     u3681 168A                     u4801 0905  
                   u4641 1132                     u4545 0BA2                     u4465 09F7  
                   u5601 049B                     u5521 02AF                     u5441 00E7  
                   u5370 10BF                     u5290 105E                     u6170 1343  
                   u6090 12C2                     u6250 1B0A                     u3930 17DB  
                   u3850 178A                     u3770 1730                     u3762 1718  
                   u3754 1705                     u4810 090D                     u4730 1181  
                   u5610 04A7                     u5530 02C7                     u5450 012C  
                   u5371 10BE                     u5291 105D                     u6171 1342  
                   u6155 1304                     u6091 12C1                     u6251 1B09  
                   u3931 17DA                     u3851 1789                     u3771 172F  
                   u3763 1719                     u3755 170A                     u3691 169D  
                   u4811 090C                     u4731 1180                     u4635 111E  
                   u4395 14A6                     u5611 04A6                     u5531 02C6  
                   u5451 012B                     u5380 10C3                     u6180 135A  
                   u6260 1C92                     u3940 17E8                     u3860 1790  
                   u3780 1755                     u3756 170B                     u3692 16A4  
                   u4900 1B93                     u4740 088F                     u4660 114C  
                   u5700 05C8                     u5620 04C2                     u5540 031D  
                   u5460 015B                     u5381 10C2                     u5365 10AA  
                   u5285 1050                     u6181 1359                     u6165 1322  
                   u6085 12B1                     u6261 1C91                     u3941 17E7  
                   u3861 178F                     u3781 1754                     u3693 16AB  
                   u4901 1B92                     u4741 088E                     u4725 1173  
                   u4661 114B                     u4645 112F                     u4565 0BFD  
                   u4485 0A52                     u5701 05C7                     u5621 04C1  
                   u5605 0498                     u5541 031C                     u5461 015A  
                   u5390 1D3A                     u3950 17ED                     u3870 1797  
                   u3790 175A                     u4910 1DF0                     u4830 091F  
                   u4750 08A3                     u4670 1150                     u4590 1009  
                   u5630 04D4                     u5550 0338                     u5470 015F  
                   u5391 1D39                     u6175 133F                     u6255 1B06  
                   u3951 17EC                     u3871 1796                     u3791 1759  
                   u4911 1DEF                     u4831 091E                     u4751 08A2  
                   u4671 114F                     u4655 113F                     u4591 1008  
                   u4575 0C39                     u4495 0A8E                     u5631 04D3  
                   u5551 0337                     u5535 02C3                     u5471 015E  
                   u6280 1B2B                     u3960 17FE                     u3880 179D  
                   u4840 0926                     u4680 1157                     u5800 075F  
                   u5640 04F6                     u5560 035F                     u5480 018E  
                   u6281 1B2A                     u3961 17FD                     u3881 179C  
                   u4841 0925                     u4825 090F                     u4681 1156  
                   u4585 0C75                     u5801 075E                     u5641 04F5  
                   u5561 035E                     u5545 0319                     u5481 018D  
                   u3890 17AF                     u4930 1E04                     u4770 08E4  
                   u3970 0CB0                     u5810 0769                     u5730 06F4  
                   u5650 0504                     u5570 036E                     u5490 01C8  
                   u6275 1CB9                     u3891 17AE                     u4931 1E03  
                   u4771 08E3                     u3971 0CAF                     u5811 0768  
                   u5731 06F3                     u5715 064F                     u5651 0503  
                   u5571 036D                     u5491 01C7                     u5900 11A1  
                   u4860 0937                     u3980 0CB6                     u5820 0777  
                   u5740 070C                     u5580 0389                     u6357 1D53  
                   u5901 11A0                     u4925 1DF5                     u4861 0936  
                   u4765 08CB                     u3981 0CB5                     u5821 0776  
                   u5741 070B                     u5725 06B5                     u5645 04F2  
                   u5581 0388                     u5910 11A6                     u4950 1E1F  
                   u4870 1B79                     u4790 0902                     u3990 0CBB  
                   u5830 078F                     u5750 0713                     u5670 057D  
                   u5911 11A5                     u4951 1E1E                     u4871 1B78  
                   u4855 0929                     u4791 0901                     u4775 08E0  
                   u4695 1159                     u3991 0CBA                     u5831 078E  
                   u5751 0712                     u5671 057C                     u5575 036A  
                   u5920 11C8                     u5840 07A5                     u5760 071B  
                   u5680 059E                     u5921 11C7                     u4945 1E06  
                   u4785 08F5                     u5841 07A4                     u5825 0773  
                   u5761 071A                     u5681 059D                     u5665 0513  
                   u5930 11CE                     u4970 1E3D                     u5850 07BC  
                   u5770 072C                     u5690 05AD                     u5931 11CD  
                   u4971 1E3C                     u4955 1E1B                     u5851 07BB  
                   u5835 078B                     u5771 072B                     u5691 05AC  
                   u5595 0469                     u5940 11D3                     u4980 1C51  
                   u5860 07C8                     u5780 0742                     u5941 11D2  
                   u4981 1C50                     u4965 1E2F                     u4885 1B80  
                   u5861 07C7                     u5781 0741                     u5685 059A  
                   u5950 11EE                     u4990 1C6D                     u5870 07E2  
                   u5790 0753                     u5951 11ED                     u4991 1C6C  
                   u4895 1B87                     u5871 07E1                     u5791 0752  
                   u5775 0728                     u5695 05A9                     u5960 120C  
                   u5961 120B                     u5785 073E                     u5970 1246  
                   u5890 119B                     u5971 1245                     u5891 119A  
                   u5985 1248                     u5995 1251                     _main 1E46  
                   btemp 007E              lcd_puts@str 007A                     start 0000  
       __end_of_ADC_init 1B4F         __end_of_ADC_read 1D87          ___fldiv@new_exp 0025  
          ___fltol@sign1 0047          __end_of___fladd 1800                    ?_main 0070  
        __end_of___fldiv 136D          __end_of___awdiv 006C          __end_of___flneg 1AD2  
        __end_of___awmod 1DE0          __end_of___flmul 1000          __end_of___flsub 1B73  
        __end_of___fltol 0882          __end_of___lldiv 1E46          ___awdiv@divisor 0077  
        __end_of___llmod 1D31          __end_of___lwdiv 1C3D          __end_of___lwmod 1BF9  
        ___awdiv@counter 0020                    _PORTD 0008                    _TRISD 0088  
        __end_of_lcd_com 1CDD                    _delay 1AF5          __end_of_dpowers 1896  
                  _scale 0940          __end_of_isdigit 1013                    pclath 000A  
                  status 0003                    wtemp0 007E          __end_of_sprintf 07E7  
          main@adc_input 00C5          __initialization 07E7             __end_of_main 1EBE  
                 ??_main 006E     __size_of__tdiv_to_l_ 00BD                   ?_delay 0070  
       ___llmod@dividend 0074                   ?_scale 003E                   _ADRESH 001E  
                 _ADRESL 009E         ___awdiv@dividend 0079                   _TRISA0 0428  
       __end_of___xxtofl 10CD                ADC_init@r 0070                ADC_init@s 0073  
       __end_of__powers_ 183A         __end_of_lcd_data 1AE0         __end_of_lcd_init 1F5E  
                 ___flge 1F5E                   ___fleq 1C3D         __end_of_lcd_puts 1B2C  
              ??___fladd 005A                   ___wmul 1B73                ??___fldiv 0078  
              ??___awdiv 007B                ??___flneg 0074                ??___awmod 0074  
              ??___flmul 002C                ??___flsub 007E                ??___fltol 0042  
              ??___lldiv 0078                ??___llmod 0078                ??___lwdiv 007A  
              ??___lwmod 0074                   _buffer 0190                   _fround 136D  
                 delay@i 0072                   delay@j 0070         ___awdiv@quotient 0022  
        ___awmod@divisor 0070          ___awmod@counter 0075                   _status 0710  
              ??_lcd_com 0074                ??_isdigit 0070       __size_of__Umul8_16 0027  
              ?_ADC_init 0070                ?_ADC_read 0020                ??_sprintf 00A5  
       ??_lcd_init_write 0074               ___flge@ff1 0070               ___flge@ff2 0074  
           ___xxtofl@arg 007A             ___xxtofl@exp 0079             ___xxtofl@val 0070  
             ___fleq@ff1 0070               ___fleq@ff2 0074  __end_of__initialization 07FC  
             ___flneg@f1 0070               ___fltol@f1 003E           __pcstackCOMMON 0070  
          __end_of_delay 1B0B            __end_of_scale 0C9F               __div_to_l_ 0882  
        ADC_read@channel 0026               ??_ADC_init 0071               ??_ADC_read 0024  
                ??_delay 0072          __div_to_l_@exp1 0025          __div_to_l_@cntr 0024  
                ??_scale 0042          __div_to_l_@quot 0020             sprintf@width 00B5  
             __pbssBANK1 00CD               __pbssBANK3 0190            __div_to_l_@f1 0070  
          __div_to_l_@f2 0074        __end_of__Umul8_16 1BBF               __pmaintext 1E46  
                ?___flge 0070                  ?___fleq 0070                  ?___wmul 0070  
                ?_fround 003E                ?___xxtofl 0070                ?_lcd_data 0070  
              ?_lcd_init 0070                ?_lcd_puts 0070               __stringtab 1800  
      __end_of__npowers_ 186E          __size_of___flge 00A2          __size_of___fleq 004E  
                ___fladd 1578                  ___fldiv 118A                  ___awdiv 0003  
                ___flneg 1AC7                  ___awmod 1D87                  ___flmul 0C9F  
                ___flsub 1B4F                  ___fltol 0806                  ___lldiv 1DE0  
        __size_of___wmul 0025                  ___llmod 1CDD                  ___lwdiv 1BF9  
             _fround$921 004D               _fround$922 0049                  ___lwmod 1BBF  
        __size_of_fround 020B                  __ptext1 006C                  __ptext2 0940  
                __ptext3 1D87                  __ptext4 0003                  __ptext5 1001  
                __ptext6 136D                  __ptext7 1BBF                  __ptext8 1BF9  
                __ptext9 0C9F                  _lcd_com 1C8B              ?__div_to_l_ 0070  
                _dpowers 186E                  _isdigit 1001               ??___xxtofl 0074  
       ___awmod@dividend 0072               ??_lcd_data 0078                  _sprintf 006C  
                clrloop0 1AC0               ??_lcd_init 0078               ??_lcd_puts 0079  
   end_of_initialization 07FC          ___lldiv@divisor 0070          ___lldiv@counter 007D  
         __tdiv_to_l_@f1 0070           __tdiv_to_l_@f2 0074            ??__tdiv_to_l_ 0078  
              _PORTDbits 0008              ___fladd@grs 0065            ___xxtofl@sign 0078  
            ___fldiv@grs 0027              ___fldiv@rem 0020        __size_of_ADC_init 0023  
      __size_of_ADC_read 0056              ___flmul@grs 0032          lcd_init_write@a 0074  
    __size_of__div_to_l_ 00BE           __end_of___flge 2000           __end_of___fleq 1C8B  
         __end_of___wmul 1B98            __pbitbssBANK1 0710           __end_of_fround 1578  
    start_initialization 07E7      __end_of__tdiv_to_l_ 118A          ___llmod@divisor 0070  
        ___llmod@counter 0079                 ??___flge 0078                 ??___fleq 0078  
               ??___wmul 0074                __Umul8_16 1B98                 ??_fround 0042  
          sprintf@tmpval 00B7                ___fladd@a 0056                ___fladd@b 0052  
             fround@prec 0051                ___fldiv@a 0070                ___fldiv@b 0074  
              ___flmul@a 0028                ___flmul@b 0024                ___flsub@a 0066  
              ___flsub@b 006A                ___latbits 0002            __pcstackBANK0 0020  
          __pcstackBANK1 00A0        __size_of___xxtofl 00BA        __size_of_lcd_data 000E  
      __size_of_lcd_init 00A0              sprintf@flag 00B3              sprintf@eexp 00BB  
      __size_of_lcd_puts 0021              sprintf@fval 00BD              sprintf@prec 00C2  
       ___lwdiv@dividend 0078  __size_of_lcd_init_write 0015                 ?___fladd 0052  
               ?___fldiv 0070                 ?___awdiv 0077                 ?___flneg 0070  
               ?___awmod 0070                 ?___flmul 0024                 ?___flsub 0066  
               ?___fltol 003E                 ?___lldiv 0070                 ?___llmod 0070  
              __npowers_ 183A               ?__Umul8_16 0070                 ?___lwdiv 0076  
               ?___lwmod 0070                __pstrings 1800              __tdiv_to_l_ 10CD  
               ?_lcd_com 0070             ??__div_to_l_ 0078                 ?_isdigit 0070  
              _scale$923 004C                 _ADC_init 1B2C                 _ADC_read 1D31  
       ___lwdiv@quotient 007B           __size_of_delay 0016                 ?_sprintf 00A0  
         __size_of_scale 035F           ___wmul@product 0074                clear_ram0 1ABF  
     __end_of__div_to_l_ 0940                 _GO_nDONE 00F9                lcd_data@a 0078  
             _ADCON0bits 001F              __stringbase 1805               _ADCON1bits 009F  
      ___wmul@multiplier 0070                lcd_puts@i 007B              ??__Umul8_16 0072  
       __size_of___fladd 0288         __size_of___fldiv 01E3         __size_of___awdiv 0069  
       __size_of___flneg 000B         __size_of___awmod 0059         __size_of___flmul 0361  
       __size_of___flsub 0024         __size_of___fltol 007C         __size_of___lldiv 0066  
       __size_of___llmod 0054         __size_of___lwdiv 0044         __size_of___lwmod 003A  
     __end_of__stringtab 1806              _isdigit$740 0070         __size_of_lcd_com 0052  
             sprintf@val 00AF                 ___xxtofl 1013         __size_of_isdigit 0012  
        ___lwdiv@divisor 0076          ___lwdiv@counter 007D                 __ptext10 1B98  
               __ptext11 10CD                 __ptext20 1F5E                 __ptext12 0882  
               __ptext21 1C3D                 __ptext13 1B73                 __ptext30 1013  
               __ptext22 1B0B                 __ptext14 1CDD                 __ptext31 1B2C  
               __ptext23 1AD2                 __ptext15 1DE0                 __ptext24 1EBE  
               __ptext16 0806                 __ptext25 1AE0                 __ptext17 1B4F  
               __ptext26 1C8B                 __ptext18 1578                 __ptext27 1AF5  
               __ptext19 1AC7                 __ptext28 118A                 __ptext29 1D31  
               __powers_ 1806                 _lcd_data 1AD2                 _lcd_init 1EBE  
               _lcd_puts 1B0B         __size_of_sprintf 077B            __size_of_main 0078  
         _lcd_init_write 1AE0                 lcd_com@a 0076                 main@temp 00C9  
               isdigit@c 0071                 scale@scl 0050                sprintf@ap 00AE  
       __tdiv_to_l_@exp1 0025         __tdiv_to_l_@cntr 0024                sprintf@sp 00C1  
       __tdiv_to_l_@quot 0020         ___lwmod@dividend 0072         ___lldiv@dividend 0074  
 __end_of_lcd_init_write 1AF5                stringcode 1800             ?__tdiv_to_l_ 0070  
 __Umul8_16@multiplicand 0070                 sprintf@c 00C4                 sprintf@f 00A0  
       ___lldiv@quotient 0079          ___lwmod@divisor 0070          ___lwmod@counter 0075  
               stringdir 1800                 stringtab 1800            ___fladd@signs 0062  
           ___fladd@aexp 0063             ___fladd@bexp 0064          ?_lcd_init_write 0070  
   __Umul8_16@multiplier 0078        __Umul8_16@product 0074  
