

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sun May 16 01:16:20 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	intentry,global,class=CODE,delta=2
    10                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    11                           	dabs	1,0x7E,2
    12  0000                     
    13                           ; Version 2.20
    14                           ; Generated 12/02/2020 GMT
    15                           ; 
    16                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution.
    30                           ; 
    31                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    32                           ;        software without specific prior written permission.
    33                           ; 
    34                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    35                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    36                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    37                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    38                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    39                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    40                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    41                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    42                           ; 
    43                           ; 
    44                           ; Code-generator required, PIC16F887 Definitions
    45                           ; 
    46                           ; SFR Addresses
    47  0000                     	;# 
    48  0001                     	;# 
    49  0002                     	;# 
    50  0003                     	;# 
    51  0004                     	;# 
    52  0005                     	;# 
    53  0006                     	;# 
    54  0007                     	;# 
    55  0008                     	;# 
    56  0009                     	;# 
    57  000A                     	;# 
    58  000B                     	;# 
    59  000C                     	;# 
    60  000D                     	;# 
    61  000E                     	;# 
    62  000E                     	;# 
    63  000F                     	;# 
    64  0010                     	;# 
    65  0011                     	;# 
    66  0012                     	;# 
    67  0013                     	;# 
    68  0014                     	;# 
    69  0015                     	;# 
    70  0015                     	;# 
    71  0016                     	;# 
    72  0017                     	;# 
    73  0018                     	;# 
    74  0019                     	;# 
    75  001A                     	;# 
    76  001B                     	;# 
    77  001B                     	;# 
    78  001C                     	;# 
    79  001D                     	;# 
    80  001E                     	;# 
    81  001F                     	;# 
    82  0081                     	;# 
    83  0085                     	;# 
    84  0086                     	;# 
    85  0087                     	;# 
    86  0088                     	;# 
    87  0089                     	;# 
    88  008C                     	;# 
    89  008D                     	;# 
    90  008E                     	;# 
    91  008F                     	;# 
    92  0090                     	;# 
    93  0091                     	;# 
    94  0092                     	;# 
    95  0093                     	;# 
    96  0093                     	;# 
    97  0093                     	;# 
    98  0094                     	;# 
    99  0095                     	;# 
   100  0096                     	;# 
   101  0097                     	;# 
   102  0098                     	;# 
   103  0099                     	;# 
   104  009A                     	;# 
   105  009B                     	;# 
   106  009C                     	;# 
   107  009D                     	;# 
   108  009E                     	;# 
   109  009F                     	;# 
   110  0105                     	;# 
   111  0107                     	;# 
   112  0108                     	;# 
   113  0109                     	;# 
   114  010C                     	;# 
   115  010C                     	;# 
   116  010D                     	;# 
   117  010E                     	;# 
   118  010F                     	;# 
   119  0185                     	;# 
   120  0187                     	;# 
   121  0188                     	;# 
   122  0189                     	;# 
   123  018C                     	;# 
   124  018D                     	;# 
   125  0000                     	;# 
   126  0001                     	;# 
   127  0002                     	;# 
   128  0003                     	;# 
   129  0004                     	;# 
   130  0005                     	;# 
   131  0006                     	;# 
   132  0007                     	;# 
   133  0008                     	;# 
   134  0009                     	;# 
   135  000A                     	;# 
   136  000B                     	;# 
   137  000C                     	;# 
   138  000D                     	;# 
   139  000E                     	;# 
   140  000E                     	;# 
   141  000F                     	;# 
   142  0010                     	;# 
   143  0011                     	;# 
   144  0012                     	;# 
   145  0013                     	;# 
   146  0014                     	;# 
   147  0015                     	;# 
   148  0015                     	;# 
   149  0016                     	;# 
   150  0017                     	;# 
   151  0018                     	;# 
   152  0019                     	;# 
   153  001A                     	;# 
   154  001B                     	;# 
   155  001B                     	;# 
   156  001C                     	;# 
   157  001D                     	;# 
   158  001E                     	;# 
   159  001F                     	;# 
   160  0081                     	;# 
   161  0085                     	;# 
   162  0086                     	;# 
   163  0087                     	;# 
   164  0088                     	;# 
   165  0089                     	;# 
   166  008C                     	;# 
   167  008D                     	;# 
   168  008E                     	;# 
   169  008F                     	;# 
   170  0090                     	;# 
   171  0091                     	;# 
   172  0092                     	;# 
   173  0093                     	;# 
   174  0093                     	;# 
   175  0093                     	;# 
   176  0094                     	;# 
   177  0095                     	;# 
   178  0096                     	;# 
   179  0097                     	;# 
   180  0098                     	;# 
   181  0099                     	;# 
   182  009A                     	;# 
   183  009B                     	;# 
   184  009C                     	;# 
   185  009D                     	;# 
   186  009E                     	;# 
   187  009F                     	;# 
   188  0105                     	;# 
   189  0107                     	;# 
   190  0108                     	;# 
   191  0109                     	;# 
   192  010C                     	;# 
   193  010C                     	;# 
   194  010D                     	;# 
   195  010E                     	;# 
   196  010F                     	;# 
   197  0185                     	;# 
   198  0187                     	;# 
   199  0188                     	;# 
   200  0189                     	;# 
   201  018C                     	;# 
   202  018D                     	;# 
   203  0008                     _PORTD	set	8
   204  000B                     _INTCONbits	set	11
   205  0059                     _INTF	set	89
   206  0081                     _OPTION_REGbits	set	129
   207  0088                     _TRISD	set	136
   208  0430                     _TRISB0	set	1072
   209  0189                     _ANSELH	set	393
   210  0188                     _ANSEL	set	392
   211                           
   212                           	psect	cinit
   213  000F                     start_initialization:	
   214                           ; #config settings
   215                           
   216  000F                     __initialization:
   217                           
   218                           ; Clear objects allocated to COMMON
   219  000F  01F5               	clrf	__pbssCOMMON& (0+127)
   220  0010                     end_of_initialization:	
   221                           ;End of C runtime variable initialization code
   222                           
   223  0010                     __end_of__initialization:
   224  0010  0183               	clrf	3
   225  0011  120A  118A  2814   	ljmp	_main	;jump to C main() function
   226                           
   227                           	psect	bssCOMMON
   228  0075                     __pbssCOMMON:
   229  0075                     _flag:
   230  0075                     	ds	1
   231                           
   232                           	psect	cstackCOMMON
   233  0070                     __pcstackCOMMON:
   234  0070                     ?_isr:
   235  0070                     ??_isr:	
   236                           ; 1 bytes @ 0x0
   237                           
   238  0070                     ?_main:	
   239                           ; 1 bytes @ 0x0
   240                           
   241                           
   242                           ; 1 bytes @ 0x0
   243  0070                     	ds	2
   244  0072                     ??_main:
   245                           
   246                           ; 1 bytes @ 0x2
   247  0072                     	ds	3
   248                           
   249                           	psect	maintext
   250  0014                     __pmaintext:	
   251 ;;
   252 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   253 ;;
   254 ;; *************** function _main *****************
   255 ;; Defined at:
   256 ;;		line 38 in file "main.c"
   257 ;; Parameters:    Size  Location     Type
   258 ;;		None
   259 ;; Auto vars:     Size  Location     Type
   260 ;;		None
   261 ;; Return value:  Size  Location     Type
   262 ;;                  1    wreg      void 
   263 ;; Registers used:
   264 ;;		wreg, status,2, status,0
   265 ;; Tracked objects:
   266 ;;		On entry : B00/0
   267 ;;		On exit  : 0/0
   268 ;;		Unchanged: 0/0
   269 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   270 ;;      Params:         0       0       0       0       0
   271 ;;      Locals:         0       0       0       0       0
   272 ;;      Temps:          3       0       0       0       0
   273 ;;      Totals:         3       0       0       0       0
   274 ;;Total ram usage:        3 bytes
   275 ;; Hardware stack levels required when called:    1
   276 ;; This function calls:
   277 ;;		Nothing
   278 ;; This function is called by:
   279 ;;		Startup code after reset
   280 ;; This function uses a non-reentrant model
   281 ;;
   282                           
   283                           
   284                           ;psect for function _main
   285  0014                     _main:
   286  0014                     l627:	
   287                           ;incstack = 0
   288                           ; Regs used in _main: [wreg+status,2+status,0]
   289                           
   290                           
   291                           ;main.c: 39:     TRISD = 0;
   292  0014  1683               	bsf	3,5	;RP0=1, select bank1
   293  0015  1303               	bcf	3,6	;RP1=0, select bank1
   294  0016  0188               	clrf	8	;volatile
   295                           
   296                           ;main.c: 40:     ANSEL = ANSELH = 0;
   297  0017  1683               	bsf	3,5	;RP0=1, select bank3
   298  0018  1703               	bsf	3,6	;RP1=1, select bank3
   299  0019  0189               	clrf	9	;volatile
   300  001A  0188               	clrf	8	;volatile
   301  001B                     l629:
   302                           
   303                           ;main.c: 41:     TRISB0 =1;
   304  001B  1683               	bsf	3,5	;RP0=1, select bank1
   305  001C  1303               	bcf	3,6	;RP1=0, select bank1
   306  001D  1406               	bsf	6,0	;volatile
   307  001E                     l631:
   308                           
   309                           ;main.c: 42:     INTCONbits.GIE = 1;
   310  001E  178B               	bsf	11,7	;volatile
   311  001F                     l633:
   312                           
   313                           ;main.c: 43:     INTCONbits.INTE = 1;
   314  001F  160B               	bsf	11,4	;volatile
   315  0020                     l635:
   316                           
   317                           ;main.c: 44:     INTCONbits.INTF = 0;
   318  0020  108B               	bcf	11,1	;volatile
   319  0021                     l637:
   320                           
   321                           ;main.c: 45:     OPTION_REGbits.INTEDG = 0;
   322  0021  1301               	bcf	1,6	;volatile
   323                           
   324                           ;main.c: 46:     PORTD = 0;
   325  0022  1283               	bcf	3,5	;RP0=0, select bank0
   326  0023  1303               	bcf	3,6	;RP1=0, select bank0
   327  0024  0188               	clrf	8	;volatile
   328                           
   329                           ;main.c: 47:     while(!flag)
   330  0025  2836               	goto	l641
   331  0026                     l31:
   332                           
   333                           ;main.c: 48:     {;main.c: 49:         PORTD = ~PORTD;
   334  0026  1283               	bcf	3,5	;RP0=0, select bank0
   335  0027  1303               	bcf	3,6	;RP1=0, select bank0
   336  0028  0988               	comf	8,f	;volatile
   337  0029                     l639:
   338                           
   339                           ;main.c: 50:         _delay((unsigned long)((500)*(8000000/4000.0)));
   340  0029  3006               	movlw	6
   341  002A  00F4               	movwf	??_main+2
   342  002B  3013               	movlw	19
   343  002C  00F3               	movwf	??_main+1
   344  002D  30AD               	movlw	173
   345  002E  00F2               	movwf	??_main
   346  002F                     u27:
   347  002F  0BF2               	decfsz	??_main,f
   348  0030  282F               	goto	u27
   349  0031  0BF3               	decfsz	??_main+1,f
   350  0032  282F               	goto	u27
   351  0033  0BF4               	decfsz	??_main+2,f
   352  0034  282F               	goto	u27
   353  0035  2836               	nop2
   354  0036                     l641:
   355                           
   356                           ;main.c: 47:     while(!flag)
   357  0036  0875               	movf	_flag,w
   358  0037  1903               	btfsc	3,2
   359  0038  283A               	goto	u11
   360  0039  283B               	goto	u10
   361  003A                     u11:
   362  003A  2826               	goto	l31
   363  003B                     u10:
   364  003B                     l32:
   365  003B  0063               	sleep	;# 
   366  003C                     l33:	
   367                           ;main.c: 53:     return;
   368                           
   369  003C  120A  118A  280C   	ljmp	start
   370  003F                     __end_of_main:
   371                           
   372                           	psect	text1
   373  003F                     __ptext1:	
   374 ;; *************** function _isr *****************
   375 ;; Defined at:
   376 ;;		line 32 in file "main.c"
   377 ;; Parameters:    Size  Location     Type
   378 ;;		None
   379 ;; Auto vars:     Size  Location     Type
   380 ;;		None
   381 ;; Return value:  Size  Location     Type
   382 ;;                  1    wreg      void 
   383 ;; Registers used:
   384 ;;		None
   385 ;; Tracked objects:
   386 ;;		On entry : 0/0
   387 ;;		On exit  : 0/0
   388 ;;		Unchanged: 0/0
   389 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   390 ;;      Params:         0       0       0       0       0
   391 ;;      Locals:         0       0       0       0       0
   392 ;;      Temps:          2       0       0       0       0
   393 ;;      Totals:         2       0       0       0       0
   394 ;;Total ram usage:        2 bytes
   395 ;; Hardware stack levels used:    1
   396 ;; This function calls:
   397 ;;		Nothing
   398 ;; This function is called by:
   399 ;;		Interrupt level 1
   400 ;; This function uses a non-reentrant model
   401 ;;
   402                           
   403                           
   404                           ;psect for function _isr
   405  003F                     _isr:
   406  003F                     i1l625:
   407                           
   408                           ;main.c: 34:     flag = ~flag;
   409  003F  09F5               	comf	_flag,f
   410                           
   411                           ;main.c: 35:     INTF = 0;
   412  0040  108B               	bcf	11,1	;volatile
   413  0041                     i1l25:
   414  0041  0871               	movf	??_isr+1,w
   415  0042  008A               	movwf	10
   416  0043  0E70               	swapf	??_isr,w
   417  0044  0083               	movwf	3
   418  0045  0EFE               	swapf	btemp,f
   419  0046  0E7E               	swapf	btemp,w
   420  0047  0009               	retfie
   421  0048                     __end_of_isr:
   422  007E                     btemp	set	126	;btemp
   423  007E                     wtemp0	set	126
   424                           
   425                           	psect	intentry
   426  0004                     __pintentry:	
   427                           ;incstack = 0
   428                           ; Regs used in _isr: []
   429                           
   430  0004                     interrupt_function:
   431  007E                     saved_w	set	btemp
   432  0004  00FE               	movwf	btemp
   433  0005  0E03               	swapf	3,w
   434  0006  00F0               	movwf	??_isr
   435  0007  080A               	movf	10,w
   436  0008  00F1               	movwf	??_isr+1
   437  0009  120A  118A  283F   	ljmp	_isr
   438                           
   439                           	psect	config
   440                           
   441                           ;Config register CONFIG1 @ 0x2007
   442                           ;	Oscillator Selection bits
   443                           ;	FOSC = LP, LP oscillator: Low-power crystal on RA6/OSC2/CLKOUT and RA7/OSC1/CLKIN
   444                           ;	Watchdog Timer Enable bit
   445                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   446                           ;	Power-up Timer Enable bit
   447                           ;	PWRTE = ON, PWRT enabled
   448                           ;	RE3/MCLR pin function select bit
   449                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
   450                           ;	Code Protection bit
   451                           ;	CP = ON, Program memory code protection is enabled
   452                           ;	Data Code Protection bit
   453                           ;	CPD = ON, Data memory code protection is enabled
   454                           ;	Brown Out Reset Selection bits
   455                           ;	BOREN = OFF, BOR disabled
   456                           ;	Internal External Switchover bit
   457                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   458                           ;	Fail-Safe Clock Monitor Enabled bit
   459                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   460                           ;	Low Voltage Programming Enable bit
   461                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   462                           ;	In-Circuit Debugger Mode bit
   463                           ;	DEBUG = 0x1, unprogrammed default
   464  2007                     	org	8199
   465  2007  2000               	dw	8192
   466                           
   467                           ;Config register CONFIG2 @ 0x2008
   468                           ;	Brown-out Reset Selection bit
   469                           ;	BOR4V = BOR21V, Brown-out Reset set to 2.1V
   470                           ;	Flash Program Memory Self Write Enable bits
   471                           ;	WRT = HALF, 0000h to 0FFFh write protected, 1000h to 1FFFh may be modified by EECON co
      +                          ntrol
   472  2008                     	org	8200
   473  2008  38FF               	dw	14591

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5       6
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0       0
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _isr                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      5       6       1       42.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       6       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       6      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sun May 16 01:16:20 2021

                     l31 0026                       l32 003B                       l33 003C  
                     u10 003B                       u11 003A                       u27 002F  
                    l631 001E                      l641 0036                      l633 001F  
                    l635 0020                      l627 0014                      l637 0021  
                    l629 001B                      l639 0029                      _isr 003F  
                   ?_isr 0070                     _INTF 0059                     i1l25 0041  
                   _flag 0075                     _main 0014                     btemp 007E  
                   start 000C                    ??_isr 0070                    ?_main 0070  
                  _ANSEL 0188                    i1l625 003F                    _PORTD 0008  
                  _TRISD 0088                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 000F             __end_of_main 003F  
                 ??_main 0072                   _ANSELH 0189                   _TRISB0 0430  
                 saved_w 007E  __end_of__initialization 0010           __pcstackCOMMON 0070  
         _OPTION_REGbits 0081               __pmaintext 0014               __pintentry 0004  
                __ptext1 003F             __size_of_isr 0009     end_of_initialization 0010  
    start_initialization 000F              __end_of_isr 0048              __pbssCOMMON 0075  
              ___latbits 0002        interrupt_function 0004            __size_of_main 002B  
             _INTCONbits 000B                 intlevel1 0000  
