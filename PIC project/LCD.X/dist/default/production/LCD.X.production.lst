

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sun May 30 01:20:35 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bitbssCOMMON,global,bit,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    18                           	dabs	1,0x7E,2
    19  0000                     
    20                           ; Version 2.20
    21                           ; Generated 12/02/2020 GMT
    22                           ; 
    23                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC16F887 Definitions
    52                           ; 
    53                           ; SFR Addresses
    54  0000                     	;# 
    55  0001                     	;# 
    56  0002                     	;# 
    57  0003                     	;# 
    58  0004                     	;# 
    59  0005                     	;# 
    60  0006                     	;# 
    61  0007                     	;# 
    62  0008                     	;# 
    63  0009                     	;# 
    64  000A                     	;# 
    65  000B                     	;# 
    66  000C                     	;# 
    67  000D                     	;# 
    68  000E                     	;# 
    69  000E                     	;# 
    70  000F                     	;# 
    71  0010                     	;# 
    72  0011                     	;# 
    73  0012                     	;# 
    74  0013                     	;# 
    75  0014                     	;# 
    76  0015                     	;# 
    77  0015                     	;# 
    78  0016                     	;# 
    79  0017                     	;# 
    80  0018                     	;# 
    81  0019                     	;# 
    82  001A                     	;# 
    83  001B                     	;# 
    84  001B                     	;# 
    85  001C                     	;# 
    86  001D                     	;# 
    87  001E                     	;# 
    88  001F                     	;# 
    89  0081                     	;# 
    90  0085                     	;# 
    91  0086                     	;# 
    92  0087                     	;# 
    93  0088                     	;# 
    94  0089                     	;# 
    95  008C                     	;# 
    96  008D                     	;# 
    97  008E                     	;# 
    98  008F                     	;# 
    99  0090                     	;# 
   100  0091                     	;# 
   101  0092                     	;# 
   102  0093                     	;# 
   103  0093                     	;# 
   104  0093                     	;# 
   105  0094                     	;# 
   106  0095                     	;# 
   107  0096                     	;# 
   108  0097                     	;# 
   109  0098                     	;# 
   110  0099                     	;# 
   111  009A                     	;# 
   112  009B                     	;# 
   113  009C                     	;# 
   114  009D                     	;# 
   115  009E                     	;# 
   116  009F                     	;# 
   117  0105                     	;# 
   118  0107                     	;# 
   119  0108                     	;# 
   120  0109                     	;# 
   121  010C                     	;# 
   122  010C                     	;# 
   123  010D                     	;# 
   124  010E                     	;# 
   125  010F                     	;# 
   126  0185                     	;# 
   127  0187                     	;# 
   128  0188                     	;# 
   129  0189                     	;# 
   130  018C                     	;# 
   131  018D                     	;# 
   132  0000                     	;# 
   133  0001                     	;# 
   134  0002                     	;# 
   135  0003                     	;# 
   136  0004                     	;# 
   137  0005                     	;# 
   138  0006                     	;# 
   139  0007                     	;# 
   140  0008                     	;# 
   141  0009                     	;# 
   142  000A                     	;# 
   143  000B                     	;# 
   144  000C                     	;# 
   145  000D                     	;# 
   146  000E                     	;# 
   147  000E                     	;# 
   148  000F                     	;# 
   149  0010                     	;# 
   150  0011                     	;# 
   151  0012                     	;# 
   152  0013                     	;# 
   153  0014                     	;# 
   154  0015                     	;# 
   155  0015                     	;# 
   156  0016                     	;# 
   157  0017                     	;# 
   158  0018                     	;# 
   159  0019                     	;# 
   160  001A                     	;# 
   161  001B                     	;# 
   162  001B                     	;# 
   163  001C                     	;# 
   164  001D                     	;# 
   165  001E                     	;# 
   166  001F                     	;# 
   167  0081                     	;# 
   168  0085                     	;# 
   169  0086                     	;# 
   170  0087                     	;# 
   171  0088                     	;# 
   172  0089                     	;# 
   173  008C                     	;# 
   174  008D                     	;# 
   175  008E                     	;# 
   176  008F                     	;# 
   177  0090                     	;# 
   178  0091                     	;# 
   179  0092                     	;# 
   180  0093                     	;# 
   181  0093                     	;# 
   182  0093                     	;# 
   183  0094                     	;# 
   184  0095                     	;# 
   185  0096                     	;# 
   186  0097                     	;# 
   187  0098                     	;# 
   188  0099                     	;# 
   189  009A                     	;# 
   190  009B                     	;# 
   191  009C                     	;# 
   192  009D                     	;# 
   193  009E                     	;# 
   194  009F                     	;# 
   195  0105                     	;# 
   196  0107                     	;# 
   197  0108                     	;# 
   198  0109                     	;# 
   199  010C                     	;# 
   200  010C                     	;# 
   201  010D                     	;# 
   202  010E                     	;# 
   203  010F                     	;# 
   204  0185                     	;# 
   205  0187                     	;# 
   206  0188                     	;# 
   207  0189                     	;# 
   208  018C                     	;# 
   209  018D                     	;# 
   210  0000                     	;# 
   211  0001                     	;# 
   212  0002                     	;# 
   213  0003                     	;# 
   214  0004                     	;# 
   215  0005                     	;# 
   216  0006                     	;# 
   217  0007                     	;# 
   218  0008                     	;# 
   219  0009                     	;# 
   220  000A                     	;# 
   221  000B                     	;# 
   222  000C                     	;# 
   223  000D                     	;# 
   224  000E                     	;# 
   225  000E                     	;# 
   226  000F                     	;# 
   227  0010                     	;# 
   228  0011                     	;# 
   229  0012                     	;# 
   230  0013                     	;# 
   231  0014                     	;# 
   232  0015                     	;# 
   233  0015                     	;# 
   234  0016                     	;# 
   235  0017                     	;# 
   236  0018                     	;# 
   237  0019                     	;# 
   238  001A                     	;# 
   239  001B                     	;# 
   240  001B                     	;# 
   241  001C                     	;# 
   242  001D                     	;# 
   243  001E                     	;# 
   244  001F                     	;# 
   245  0081                     	;# 
   246  0085                     	;# 
   247  0086                     	;# 
   248  0087                     	;# 
   249  0088                     	;# 
   250  0089                     	;# 
   251  008C                     	;# 
   252  008D                     	;# 
   253  008E                     	;# 
   254  008F                     	;# 
   255  0090                     	;# 
   256  0091                     	;# 
   257  0092                     	;# 
   258  0093                     	;# 
   259  0093                     	;# 
   260  0093                     	;# 
   261  0094                     	;# 
   262  0095                     	;# 
   263  0096                     	;# 
   264  0097                     	;# 
   265  0098                     	;# 
   266  0099                     	;# 
   267  009A                     	;# 
   268  009B                     	;# 
   269  009C                     	;# 
   270  009D                     	;# 
   271  009E                     	;# 
   272  009F                     	;# 
   273  0105                     	;# 
   274  0107                     	;# 
   275  0108                     	;# 
   276  0109                     	;# 
   277  010C                     	;# 
   278  010C                     	;# 
   279  010D                     	;# 
   280  010E                     	;# 
   281  010F                     	;# 
   282  0185                     	;# 
   283  0187                     	;# 
   284  0188                     	;# 
   285  0189                     	;# 
   286  018C                     	;# 
   287  018D                     	;# 
   288  0008                     _PORTD	set	8
   289  0042                     _RD2	set	66
   290  0041                     _RD1	set	65
   291  0040                     _RD0	set	64
   292  0088                     _TRISD	set	136
   293                           
   294                           	psect	strings
   295  0003                     __pstrings:
   296  0003                     stringtab:
   297  0003                     __stringtab:
   298  0003                     stringcode:	
   299                           ;	String table - string pointers are 1 byte each
   300                           
   301  0003                     stringdir:
   302  0003  3000               	movlw	high stringdir
   303  0004  008A               	movwf	10
   304  0005  0804               	movf	4,w
   305  0006  0A84               	incf	4,f
   306  0007  0782               	addwf	2,f
   307  0008                     __stringbase:
   308  0008  3400               	retlw	0
   309  0009                     __end_of__stringtab:
   310  0009                     STR_1:
   311  0009  3444               	retlw	68	;'D'
   312  000A  3465               	retlw	101	;'e'
   313  000B  3476               	retlw	118	;'v'
   314  000C  3469               	retlw	105	;'i'
   315  000D  346F               	retlw	111	;'o'
   316  000E  3474               	retlw	116	;'t'
   317  000F  342E               	retlw	46	;'.'
   318  0010  3476               	retlw	118	;'v'
   319  0011  346E               	retlw	110	;'n'
   320  0012  3400               	retlw	0
   321                           
   322                           	psect	cinit
   323  07FB                     start_initialization:	
   324                           ; #config settings
   325                           
   326  07FB                     __initialization:
   327                           
   328                           ; Clear objects allocated to BITCOMMON
   329  07FB  01FC               	clrf	(__pbitbssCOMMON/(0+8))& (0+127)
   330  07FC                     end_of_initialization:	
   331                           ;End of C runtime variable initialization code
   332                           
   333  07FC                     __end_of__initialization:
   334  07FC  0183               	clrf	3
   335  07FD  120A  118A  2EC4   	ljmp	_main	;jump to C main() function
   336                           
   337                           	psect	bitbssCOMMON
   338  03E0                     __pbitbssCOMMON:
   339  03E0                     _status:
   340  03E0                     	ds	1
   341                           
   342                           	psect	cstackCOMMON
   343  0070                     __pcstackCOMMON:
   344  0070                     ?_lcd_init:
   345  0070                     ?_lcd_puts:	
   346                           ; 1 bytes @ 0x0
   347                           
   348  0070                     ?_lcd_com:	
   349                           ; 1 bytes @ 0x0
   350                           
   351  0070                     ?_delay:	
   352                           ; 1 bytes @ 0x0
   353                           
   354  0070                     ?_lcd_init_write:	
   355                           ; 1 bytes @ 0x0
   356                           
   357  0070                     ?_main:	
   358                           ; 1 bytes @ 0x0
   359                           
   360  0070                     ?_lcd_data:	
   361                           ; 1 bytes @ 0x0
   362                           
   363  0070                     delay@j:	
   364                           ; 1 bytes @ 0x0
   365                           
   366                           
   367                           ; 2 bytes @ 0x0
   368  0070                     	ds	2
   369  0072                     ??_delay:
   370  0072                     delay@i:	
   371                           ; 1 bytes @ 0x2
   372                           
   373                           
   374                           ; 2 bytes @ 0x2
   375  0072                     	ds	2
   376  0074                     ??_lcd_com:
   377  0074                     ??_lcd_init_write:	
   378                           ; 1 bytes @ 0x4
   379                           
   380  0074                     lcd_init_write@a:	
   381                           ; 1 bytes @ 0x4
   382                           
   383                           
   384                           ; 1 bytes @ 0x4
   385  0074                     	ds	2
   386  0076                     lcd_com@a:
   387                           
   388                           ; 1 bytes @ 0x6
   389  0076                     	ds	1
   390  0077                     lcd_com@temp:
   391                           
   392                           ; 1 bytes @ 0x7
   393  0077                     	ds	1
   394  0078                     ??_lcd_init:
   395  0078                     ?_lcd_set_cursor:	
   396                           ; 1 bytes @ 0x8
   397                           
   398  0078                     ??_lcd_data:	
   399                           ; 1 bytes @ 0x8
   400                           
   401  0078                     lcd_data@a:	
   402                           ; 1 bytes @ 0x8
   403                           
   404  0078                     lcd_set_cursor@col:	
   405                           ; 1 bytes @ 0x8
   406                           
   407                           
   408                           ; 1 bytes @ 0x8
   409  0078                     	ds	1
   410  0079                     ??_lcd_set_cursor:
   411  0079                     ??_lcd_puts:	
   412                           ; 1 bytes @ 0x9
   413                           
   414                           
   415                           ; 1 bytes @ 0x9
   416  0079                     	ds	1
   417  007A                     lcd_puts@str:
   418                           
   419                           ; 1 bytes @ 0xA
   420  007A                     	ds	1
   421  007B                     lcd_set_cursor@row:
   422                           
   423                           ; 1 bytes @ 0xB
   424  007B                     	ds	1
   425                           
   426                           	psect	cstackBANK0
   427  0020                     __pcstackBANK0:
   428  0020                     ??_main:
   429                           
   430                           ; 1 bytes @ 0x0
   431  0020                     	ds	3
   432                           
   433                           	psect	maintext
   434  06C4                     __pmaintext:	
   435 ;;
   436 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   437 ;;
   438 ;; *************** function _main *****************
   439 ;; Defined at:
   440 ;;		line 31 in file "main.c"
   441 ;; Parameters:    Size  Location     Type
   442 ;;		None
   443 ;; Auto vars:     Size  Location     Type
   444 ;;		None
   445 ;; Return value:  Size  Location     Type
   446 ;;                  1    wreg      void 
   447 ;; Registers used:
   448 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   449 ;; Tracked objects:
   450 ;;		On entry : B00/0
   451 ;;		On exit  : 0/0
   452 ;;		Unchanged: 0/0
   453 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   454 ;;      Params:         0       0       0       0       0
   455 ;;      Locals:         0       0       0       0       0
   456 ;;      Temps:          0       3       0       0       0
   457 ;;      Totals:         0       3       0       0       0
   458 ;;Total ram usage:        3 bytes
   459 ;; Hardware stack levels required when called:    4
   460 ;; This function calls:
   461 ;;		_lcd_com
   462 ;;		_lcd_init
   463 ;;		_lcd_puts
   464 ;;		_lcd_set_cursor
   465 ;; This function is called by:
   466 ;;		Startup code after reset
   467 ;; This function uses a non-reentrant model
   468 ;;
   469                           
   470                           
   471                           ;psect for function _main
   472  06C4                     _main:
   473  06C4                     l851:	
   474                           ;incstack = 0
   475                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   476                           
   477                           
   478                           ;main.c: 32:     TRISD = 0;
   479  06C4  1683               	bsf	3,5	;RP0=1, select bank1
   480  06C5  1303               	bcf	3,6	;RP1=0, select bank1
   481  06C6  0188               	clrf	8	;volatile
   482  06C7                     l853:
   483                           
   484                           ;main.c: 33:     lcd_init();
   485  06C7  120A  118A  275B  120A  118A  	fcall	_lcd_init
   486  06CC                     l855:
   487                           
   488                           ;main.c: 34:     lcd_set_cursor(2,4);
   489  06CC  3004               	movlw	4
   490  06CD  1283               	bcf	3,5	;RP0=0, select bank0
   491  06CE  1303               	bcf	3,6	;RP1=0, select bank0
   492  06CF  00A0               	movwf	??_main
   493  06D0  0820               	movf	??_main,w
   494  06D1  00F8               	movwf	lcd_set_cursor@col
   495  06D2  3002               	movlw	2
   496  06D3  120A  118A  268E  120A  118A  	fcall	_lcd_set_cursor
   497  06D8                     l857:
   498                           
   499                           ;main.c: 35:     lcd_puts("Deviot.vn");
   500  06D8  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   501  06D9  120A  118A  266F  120A  118A  	fcall	_lcd_puts
   502  06DE                     l859:
   503                           
   504                           ;main.c: 37:     {;main.c: 38:         lcd_com(0x18);
   505  06DE  3018               	movlw	24
   506  06DF  120A  118A  270A  120A  118A  	fcall	_lcd_com
   507  06E4                     l861:
   508                           
   509                           ;main.c: 39:         _delay((unsigned long)((500)*(8000000/4000.0)));
   510  06E4  3006               	movlw	6
   511  06E5  1283               	bcf	3,5	;RP0=0, select bank0
   512  06E6  1303               	bcf	3,6	;RP1=0, select bank0
   513  06E7  00A2               	movwf	??_main+2
   514  06E8  3013               	movlw	19
   515  06E9  00A1               	movwf	??_main+1
   516  06EA  30AD               	movlw	173
   517  06EB  00A0               	movwf	??_main
   518  06EC                     u97:
   519  06EC  0BA0               	decfsz	??_main,f
   520  06ED  2EEC               	goto	u97
   521  06EE  0BA1               	decfsz	??_main+1,f
   522  06EF  2EEC               	goto	u97
   523  06F0  0BA2               	decfsz	??_main+2,f
   524  06F1  2EEC               	goto	u97
   525  06F2                     l863:
   526                           
   527                           ;main.c: 40:         lcd_com(0x1E);
   528  06F2  301E               	movlw	30
   529  06F3  120A  118A  270A  120A  118A  	fcall	_lcd_com
   530  06F8                     l865:
   531                           
   532                           ;main.c: 41:         _delay((unsigned long)((500)*(8000000/4000.0)));
   533  06F8  3006               	movlw	6
   534  06F9  1283               	bcf	3,5	;RP0=0, select bank0
   535  06FA  1303               	bcf	3,6	;RP1=0, select bank0
   536  06FB  00A2               	movwf	??_main+2
   537  06FC  3013               	movlw	19
   538  06FD  00A1               	movwf	??_main+1
   539  06FE  30AD               	movlw	173
   540  06FF  00A0               	movwf	??_main
   541  0700                     u107:
   542  0700  0BA0               	decfsz	??_main,f
   543  0701  2F00               	goto	u107
   544  0702  0BA1               	decfsz	??_main+1,f
   545  0703  2F00               	goto	u107
   546  0704  0BA2               	decfsz	??_main+2,f
   547  0705  2F00               	goto	u107
   548  0706  2EDE               	goto	l859
   549  0707  120A  118A  2800   	ljmp	start
   550  070A                     __end_of_main:
   551                           
   552                           	psect	text1
   553  068E                     __ptext1:	
   554 ;; *************** function _lcd_set_cursor *****************
   555 ;; Defined at:
   556 ;;		line 94 in file "LCD.c"
   557 ;; Parameters:    Size  Location     Type
   558 ;;  row             1    wreg     unsigned char 
   559 ;;  col             1    8[COMMON] unsigned char 
   560 ;; Auto vars:     Size  Location     Type
   561 ;;  row             1   11[COMMON] unsigned char 
   562 ;; Return value:  Size  Location     Type
   563 ;;                  1    wreg      void 
   564 ;; Registers used:
   565 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   566 ;; Tracked objects:
   567 ;;		On entry : 0/0
   568 ;;		On exit  : 0/0
   569 ;;		Unchanged: 0/0
   570 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   571 ;;      Params:         1       0       0       0       0
   572 ;;      Locals:         1       0       0       0       0
   573 ;;      Temps:          2       0       0       0       0
   574 ;;      Totals:         4       0       0       0       0
   575 ;;Total ram usage:        4 bytes
   576 ;; Hardware stack levels used:    1
   577 ;; Hardware stack levels required when called:    2
   578 ;; This function calls:
   579 ;;		_lcd_com
   580 ;; This function is called by:
   581 ;;		_main
   582 ;; This function uses a non-reentrant model
   583 ;;
   584                           
   585                           
   586                           ;psect for function _lcd_set_cursor
   587  068E                     _lcd_set_cursor:
   588                           
   589                           ;incstack = 0
   590                           ; Regs used in _lcd_set_cursor: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   591                           ;lcd_set_cursor@row stored from wreg
   592  068E  00FB               	movwf	lcd_set_cursor@row
   593  068F                     l827:
   594                           
   595                           ;LCD.c: 95:     switch (row) {
   596  068F  2EB0               	goto	l837
   597  0690                     l829:
   598                           
   599                           ;LCD.c: 97:             lcd_com(0xD4 + col - 1);
   600  0690  0878               	movf	lcd_set_cursor@col,w
   601  0691  3ED3               	addlw	211
   602  0692  120A  118A  270A  120A  118A  	fcall	_lcd_com
   603                           
   604                           ;LCD.c: 98:             break;
   605  0697  2EC3               	goto	l71
   606  0698                     l831:
   607                           
   608                           ;LCD.c: 100:             lcd_com(0xC0 + col - 1);
   609  0698  0878               	movf	lcd_set_cursor@col,w
   610  0699  3EBF               	addlw	191
   611  069A  120A  118A  270A  120A  118A  	fcall	_lcd_com
   612                           
   613                           ;LCD.c: 101:             break;
   614  069F  2EC3               	goto	l71
   615  06A0                     l833:
   616                           
   617                           ;LCD.c: 103:             lcd_com(0x94 + col - 1);
   618  06A0  0878               	movf	lcd_set_cursor@col,w
   619  06A1  3E93               	addlw	147
   620  06A2  120A  118A  270A  120A  118A  	fcall	_lcd_com
   621                           
   622                           ;LCD.c: 104:             break;
   623  06A7  2EC3               	goto	l71
   624  06A8                     l835:
   625                           
   626                           ;LCD.c: 106:             lcd_com(0x80 + col - 1);
   627  06A8  0878               	movf	lcd_set_cursor@col,w
   628  06A9  3E7F               	addlw	127
   629  06AA  120A  118A  270A  120A  118A  	fcall	_lcd_com
   630                           
   631                           ;LCD.c: 107:     }
   632  06AF  2EC3               	goto	l71
   633  06B0                     l837:
   634  06B0  087B               	movf	lcd_set_cursor@row,w
   635  06B1  00F9               	movwf	??_lcd_set_cursor
   636  06B2  01FA               	clrf	??_lcd_set_cursor+1
   637                           
   638                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   639                           ; Switch size 1, requested type "simple"
   640                           ; Number of cases is 1, Range of values is 0 to 0
   641                           ; switch strategies available:
   642                           ; Name         Instructions Cycles
   643                           ; simple_byte            4     3 (average)
   644                           ; direct_byte           11     8 (fixed)
   645                           ; jumptable            260     6 (fixed)
   646                           ;	Chosen strategy is simple_byte
   647  06B3  087A               	movf	??_lcd_set_cursor+1,w
   648  06B4  3A00               	xorlw	0	; case 0
   649  06B5  1903               	skipnz
   650  06B6  2EB8               	goto	l887
   651  06B7  2EA8               	goto	l835
   652  06B8                     l887:
   653                           
   654                           ; Switch size 1, requested type "simple"
   655                           ; Number of cases is 3, Range of values is 2 to 4
   656                           ; switch strategies available:
   657                           ; Name         Instructions Cycles
   658                           ; simple_byte           10     6 (average)
   659                           ; direct_byte           20    11 (fixed)
   660                           ; jumptable            263     9 (fixed)
   661                           ;	Chosen strategy is simple_byte
   662  06B8  0879               	movf	??_lcd_set_cursor,w
   663  06B9  3A02               	xorlw	2	; case 2
   664  06BA  1903               	skipnz
   665  06BB  2E98               	goto	l831
   666  06BC  3A01               	xorlw	1	; case 3
   667  06BD  1903               	skipnz
   668  06BE  2EA0               	goto	l833
   669  06BF  3A07               	xorlw	7	; case 4
   670  06C0  1903               	skipnz
   671  06C1  2E90               	goto	l829
   672  06C2  2EA8               	goto	l835
   673  06C3                     l71:
   674  06C3  0008               	return
   675  06C4                     __end_of_lcd_set_cursor:
   676                           
   677                           	psect	text2
   678  066F                     __ptext2:	
   679 ;; *************** function _lcd_puts *****************
   680 ;; Defined at:
   681 ;;		line 88 in file "LCD.c"
   682 ;; Parameters:    Size  Location     Type
   683 ;;  str             1    wreg     PTR unsigned char 
   684 ;;		 -> STR_1(10), 
   685 ;; Auto vars:     Size  Location     Type
   686 ;;  str             1   10[COMMON] PTR unsigned char 
   687 ;;		 -> STR_1(10), 
   688 ;; Return value:  Size  Location     Type
   689 ;;                  1    wreg      void 
   690 ;; Registers used:
   691 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   692 ;; Tracked objects:
   693 ;;		On entry : 0/0
   694 ;;		On exit  : 0/0
   695 ;;		Unchanged: 0/0
   696 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   697 ;;      Params:         0       0       0       0       0
   698 ;;      Locals:         1       0       0       0       0
   699 ;;      Temps:          1       0       0       0       0
   700 ;;      Totals:         2       0       0       0       0
   701 ;;Total ram usage:        2 bytes
   702 ;; Hardware stack levels used:    1
   703 ;; Hardware stack levels required when called:    3
   704 ;; This function calls:
   705 ;;		_lcd_data
   706 ;; This function is called by:
   707 ;;		_main
   708 ;; This function uses a non-reentrant model
   709 ;;
   710                           
   711                           
   712                           ;psect for function _lcd_puts
   713  066F                     _lcd_puts:
   714                           
   715                           ;incstack = 0
   716                           ; Regs used in _lcd_puts: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   717                           ;lcd_puts@str stored from wreg
   718  066F  00FA               	movwf	lcd_puts@str
   719  0670                     l843:
   720                           
   721                           ;LCD.c: 89:     while (*str) {
   722  0670  2E81               	goto	l849
   723  0671                     l845:
   724                           
   725                           ;LCD.c: 90:         lcd_data(*str++);
   726  0671  087A               	movf	lcd_puts@str,w
   727  0672  0084               	movwf	4
   728  0673  120A  118A  2003  120A  118A  	fcall	stringdir
   729  0678  120A  118A  2638  120A  118A  	fcall	_lcd_data
   730  067D                     l847:
   731  067D  3001               	movlw	1
   732  067E  00F9               	movwf	??_lcd_puts
   733  067F  0879               	movf	??_lcd_puts,w
   734  0680  07FA               	addwf	lcd_puts@str,f
   735  0681                     l849:
   736                           
   737                           ;LCD.c: 89:     while (*str) {
   738  0681  087A               	movf	lcd_puts@str,w
   739  0682  0084               	movwf	4
   740  0683  120A  118A  2003  120A  118A  	fcall	stringdir
   741  0688  3A00               	xorlw	0
   742  0689  1D03               	skipz
   743  068A  2E8C               	goto	u81
   744  068B  2E8D               	goto	u80
   745  068C                     u81:
   746  068C  2E71               	goto	l845
   747  068D                     u80:
   748  068D                     l62:
   749  068D  0008               	return
   750  068E                     __end_of_lcd_puts:
   751                           
   752                           	psect	text3
   753  0638                     __ptext3:	
   754 ;; *************** function _lcd_data *****************
   755 ;; Defined at:
   756 ;;		line 82 in file "LCD.c"
   757 ;; Parameters:    Size  Location     Type
   758 ;;  a               1    wreg     unsigned char 
   759 ;; Auto vars:     Size  Location     Type
   760 ;;  a               1    8[COMMON] unsigned char 
   761 ;; Return value:  Size  Location     Type
   762 ;;                  1    wreg      void 
   763 ;; Registers used:
   764 ;;		wreg, status,2, status,0, pclath, cstack
   765 ;; Tracked objects:
   766 ;;		On entry : 0/0
   767 ;;		On exit  : 0/0
   768 ;;		Unchanged: 0/0
   769 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   770 ;;      Params:         0       0       0       0       0
   771 ;;      Locals:         1       0       0       0       0
   772 ;;      Temps:          0       0       0       0       0
   773 ;;      Totals:         1       0       0       0       0
   774 ;;Total ram usage:        1 bytes
   775 ;; Hardware stack levels used:    1
   776 ;; Hardware stack levels required when called:    2
   777 ;; This function calls:
   778 ;;		_lcd_com
   779 ;; This function is called by:
   780 ;;		_lcd_puts
   781 ;; This function uses a non-reentrant model
   782 ;;
   783                           
   784                           
   785                           ;psect for function _lcd_data
   786  0638                     _lcd_data:
   787                           
   788                           ;incstack = 0
   789                           ; Regs used in _lcd_data: [wreg+status,2+status,0+pclath+cstack]
   790                           ;lcd_data@a stored from wreg
   791  0638  00F8               	movwf	lcd_data@a
   792  0639                     l821:
   793                           
   794                           ;LCD.c: 83:     status = 1;
   795  0639  147C               	bsf	_status/(0+8),_status& (0+7)
   796                           
   797                           ;LCD.c: 84:     RD0 = 1;
   798  063A  1283               	bcf	3,5	;RP0=0, select bank0
   799  063B  1303               	bcf	3,6	;RP1=0, select bank0
   800  063C  1408               	bsf	8,0	;volatile
   801  063D                     l823:
   802                           
   803                           ;LCD.c: 85:     lcd_com(a);
   804  063D  0878               	movf	lcd_data@a,w
   805  063E  120A  118A  270A  120A  118A  	fcall	_lcd_com
   806  0643                     l56:
   807  0643  0008               	return
   808  0644                     __end_of_lcd_data:
   809                           
   810                           	psect	text4
   811  075B                     __ptext4:	
   812 ;; *************** function _lcd_init *****************
   813 ;; Defined at:
   814 ;;		line 19 in file "LCD.c"
   815 ;; Parameters:    Size  Location     Type
   816 ;;		None
   817 ;; Auto vars:     Size  Location     Type
   818 ;;		None
   819 ;; Return value:  Size  Location     Type
   820 ;;                  1    wreg      void 
   821 ;; Registers used:
   822 ;;		wreg, status,2, status,0, pclath, cstack
   823 ;; Tracked objects:
   824 ;;		On entry : 0/0
   825 ;;		On exit  : 0/0
   826 ;;		Unchanged: 0/0
   827 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   828 ;;      Params:         0       0       0       0       0
   829 ;;      Locals:         0       0       0       0       0
   830 ;;      Temps:          0       0       0       0       0
   831 ;;      Totals:         0       0       0       0       0
   832 ;;Total ram usage:        0 bytes
   833 ;; Hardware stack levels used:    1
   834 ;; Hardware stack levels required when called:    2
   835 ;; This function calls:
   836 ;;		_delay
   837 ;;		_lcd_com
   838 ;;		_lcd_init_write
   839 ;; This function is called by:
   840 ;;		_main
   841 ;; This function uses a non-reentrant model
   842 ;;
   843                           
   844                           
   845                           ;psect for function _lcd_init
   846  075B                     _lcd_init:
   847  075B                     l825:	
   848                           ;incstack = 0
   849                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
   850                           
   851                           
   852                           ;LCD.c: 20:     delay(300);
   853  075B  302C               	movlw	44
   854  075C  00F0               	movwf	delay@j
   855  075D  3001               	movlw	1
   856  075E  00F1               	movwf	delay@j+1
   857  075F  120A  118A  2659  120A  118A  	fcall	_delay
   858                           
   859                           ;LCD.c: 21:     lcd_init_write(0x30);
   860  0764  3030               	movlw	48
   861  0765  120A  118A  2644  120A  118A  	fcall	_lcd_init_write
   862                           
   863                           ;LCD.c: 22:     delay(300);
   864  076A  302C               	movlw	44
   865  076B  00F0               	movwf	delay@j
   866  076C  3001               	movlw	1
   867  076D  00F1               	movwf	delay@j+1
   868  076E  120A  118A  2659  120A  118A  	fcall	_delay
   869                           
   870                           ;LCD.c: 23:     lcd_init_write(0x30);
   871  0773  3030               	movlw	48
   872  0774  120A  118A  2644  120A  118A  	fcall	_lcd_init_write
   873                           
   874                           ;LCD.c: 24:     delay(300);
   875  0779  302C               	movlw	44
   876  077A  00F0               	movwf	delay@j
   877  077B  3001               	movlw	1
   878  077C  00F1               	movwf	delay@j+1
   879  077D  120A  118A  2659  120A  118A  	fcall	_delay
   880                           
   881                           ;LCD.c: 25:     lcd_init_write(0x30);
   882  0782  3030               	movlw	48
   883  0783  120A  118A  2644  120A  118A  	fcall	_lcd_init_write
   884                           
   885                           ;LCD.c: 26:     delay(300);
   886  0788  302C               	movlw	44
   887  0789  00F0               	movwf	delay@j
   888  078A  3001               	movlw	1
   889  078B  00F1               	movwf	delay@j+1
   890  078C  120A  118A  2659  120A  118A  	fcall	_delay
   891                           
   892                           ;LCD.c: 27:     lcd_init_write(0x20);
   893  0791  3020               	movlw	32
   894  0792  120A  118A  2644  120A  118A  	fcall	_lcd_init_write
   895                           
   896                           ;LCD.c: 28:     delay(300);
   897  0797  302C               	movlw	44
   898  0798  00F0               	movwf	delay@j
   899  0799  3001               	movlw	1
   900  079A  00F1               	movwf	delay@j+1
   901  079B  120A  118A  2659  120A  118A  	fcall	_delay
   902                           
   903                           ;LCD.c: 29:     lcd_com(0x0C);
   904  07A0  300C               	movlw	12
   905  07A1  120A  118A  270A  120A  118A  	fcall	_lcd_com
   906                           
   907                           ;LCD.c: 30:     delay(300);
   908  07A6  302C               	movlw	44
   909  07A7  00F0               	movwf	delay@j
   910  07A8  3001               	movlw	1
   911  07A9  00F1               	movwf	delay@j+1
   912  07AA  120A  118A  2659  120A  118A  	fcall	_delay
   913                           
   914                           ;LCD.c: 31:     lcd_com(0x28);
   915  07AF  3028               	movlw	40
   916  07B0  120A  118A  270A  120A  118A  	fcall	_lcd_com
   917                           
   918                           ;LCD.c: 32:     delay(300);
   919  07B5  302C               	movlw	44
   920  07B6  00F0               	movwf	delay@j
   921  07B7  3001               	movlw	1
   922  07B8  00F1               	movwf	delay@j+1
   923  07B9  120A  118A  2659  120A  118A  	fcall	_delay
   924                           
   925                           ;LCD.c: 33:     lcd_com(0x04);
   926  07BE  3004               	movlw	4
   927  07BF  120A  118A  270A  120A  118A  	fcall	_lcd_com
   928                           
   929                           ;LCD.c: 34:     delay(300);
   930  07C4  302C               	movlw	44
   931  07C5  00F0               	movwf	delay@j
   932  07C6  3001               	movlw	1
   933  07C7  00F1               	movwf	delay@j+1
   934  07C8  120A  118A  2659  120A  118A  	fcall	_delay
   935                           
   936                           ;LCD.c: 35:     lcd_com(0x85);
   937  07CD  3085               	movlw	133
   938  07CE  120A  118A  270A  120A  118A  	fcall	_lcd_com
   939                           
   940                           ;LCD.c: 36:     delay(300);
   941  07D3  302C               	movlw	44
   942  07D4  00F0               	movwf	delay@j
   943  07D5  3001               	movlw	1
   944  07D6  00F1               	movwf	delay@j+1
   945  07D7  120A  118A  2659  120A  118A  	fcall	_delay
   946                           
   947                           ;LCD.c: 37:     lcd_com(6);
   948  07DC  3006               	movlw	6
   949  07DD  120A  118A  270A  120A  118A  	fcall	_lcd_com
   950                           
   951                           ;LCD.c: 38:     delay(300);
   952  07E2  302C               	movlw	44
   953  07E3  00F0               	movwf	delay@j
   954  07E4  3001               	movlw	1
   955  07E5  00F1               	movwf	delay@j+1
   956  07E6  120A  118A  2659  120A  118A  	fcall	_delay
   957                           
   958                           ;LCD.c: 39:     lcd_com(0x01);
   959  07EB  3001               	movlw	1
   960  07EC  120A  118A  270A  120A  118A  	fcall	_lcd_com
   961                           
   962                           ;LCD.c: 40:     delay(300);
   963  07F1  302C               	movlw	44
   964  07F2  00F0               	movwf	delay@j
   965  07F3  3001               	movlw	1
   966  07F4  00F1               	movwf	delay@j+1
   967  07F5  120A  118A  2659  120A  118A  	fcall	_delay
   968  07FA                     l39:
   969  07FA  0008               	return
   970  07FB                     __end_of_lcd_init:
   971                           
   972                           	psect	text5
   973  0644                     __ptext5:	
   974 ;; *************** function _lcd_init_write *****************
   975 ;; Defined at:
   976 ;;		line 43 in file "LCD.c"
   977 ;; Parameters:    Size  Location     Type
   978 ;;  a               1    wreg     unsigned char 
   979 ;; Auto vars:     Size  Location     Type
   980 ;;  a               1    4[COMMON] unsigned char 
   981 ;; Return value:  Size  Location     Type
   982 ;;                  1    wreg      void 
   983 ;; Registers used:
   984 ;;		wreg, status,2, status,0, pclath, cstack
   985 ;; Tracked objects:
   986 ;;		On entry : 0/0
   987 ;;		On exit  : 0/0
   988 ;;		Unchanged: 0/0
   989 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   990 ;;      Params:         0       0       0       0       0
   991 ;;      Locals:         1       0       0       0       0
   992 ;;      Temps:          0       0       0       0       0
   993 ;;      Totals:         1       0       0       0       0
   994 ;;Total ram usage:        1 bytes
   995 ;; Hardware stack levels used:    1
   996 ;; Hardware stack levels required when called:    1
   997 ;; This function calls:
   998 ;;		_delay
   999 ;; This function is called by:
  1000 ;;		_lcd_init
  1001 ;; This function uses a non-reentrant model
  1002 ;;
  1003                           
  1004                           
  1005                           ;psect for function _lcd_init_write
  1006  0644                     _lcd_init_write:
  1007                           
  1008                           ;incstack = 0
  1009                           ; Regs used in _lcd_init_write: [wreg+status,2+status,0+pclath+cstack]
  1010                           ;lcd_init_write@a stored from wreg
  1011  0644  00F4               	movwf	lcd_init_write@a
  1012  0645                     l811:
  1013                           
  1014                           ;LCD.c: 44:     RD0 = 0;
  1015  0645  1283               	bcf	3,5	;RP0=0, select bank0
  1016  0646  1303               	bcf	3,6	;RP1=0, select bank0
  1017  0647  1008               	bcf	8,0	;volatile
  1018                           
  1019                           ;LCD.c: 45:     RD1 = 0;
  1020  0648  1088               	bcf	8,1	;volatile
  1021  0649                     l813:
  1022                           
  1023                           ;LCD.c: 46:     PORTD = a;
  1024  0649  0874               	movf	lcd_init_write@a,w
  1025  064A  0088               	movwf	8	;volatile
  1026  064B                     l815:
  1027                           
  1028                           ;LCD.c: 47:     RD2 = 1;
  1029  064B  1508               	bsf	8,2	;volatile
  1030  064C                     l817:
  1031                           
  1032                           ;LCD.c: 48:     delay(300);
  1033  064C  302C               	movlw	44
  1034  064D  00F0               	movwf	delay@j
  1035  064E  3001               	movlw	1
  1036  064F  00F1               	movwf	delay@j+1
  1037  0650  120A  118A  2659  120A  118A  	fcall	_delay
  1038  0655                     l819:
  1039                           
  1040                           ;LCD.c: 49:     RD2 = 0;
  1041  0655  1283               	bcf	3,5	;RP0=0, select bank0
  1042  0656  1303               	bcf	3,6	;RP1=0, select bank0
  1043  0657  1108               	bcf	8,2	;volatile
  1044  0658                     l42:
  1045  0658  0008               	return
  1046  0659                     __end_of_lcd_init_write:
  1047                           
  1048                           	psect	text6
  1049  070A                     __ptext6:	
  1050 ;; *************** function _lcd_com *****************
  1051 ;; Defined at:
  1052 ;;		line 57 in file "LCD.c"
  1053 ;; Parameters:    Size  Location     Type
  1054 ;;  a               1    wreg     unsigned char 
  1055 ;; Auto vars:     Size  Location     Type
  1056 ;;  a               1    6[COMMON] unsigned char 
  1057 ;;  temp            1    7[COMMON] unsigned char 
  1058 ;; Return value:  Size  Location     Type
  1059 ;;                  1    wreg      void 
  1060 ;; Registers used:
  1061 ;;		wreg, status,2, status,0, pclath, cstack
  1062 ;; Tracked objects:
  1063 ;;		On entry : 0/0
  1064 ;;		On exit  : 0/0
  1065 ;;		Unchanged: 0/0
  1066 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1067 ;;      Params:         0       0       0       0       0
  1068 ;;      Locals:         2       0       0       0       0
  1069 ;;      Temps:          2       0       0       0       0
  1070 ;;      Totals:         4       0       0       0       0
  1071 ;;Total ram usage:        4 bytes
  1072 ;; Hardware stack levels used:    1
  1073 ;; Hardware stack levels required when called:    1
  1074 ;; This function calls:
  1075 ;;		_delay
  1076 ;; This function is called by:
  1077 ;;		_main
  1078 ;;		_lcd_init
  1079 ;;		_lcd_data
  1080 ;;		_lcd_set_cursor
  1081 ;; This function uses a non-reentrant model
  1082 ;;
  1083                           
  1084                           
  1085                           ;psect for function _lcd_com
  1086  070A                     _lcd_com:
  1087                           
  1088                           ;incstack = 0
  1089                           ; Regs used in _lcd_com: [wreg+status,2+status,0+pclath+cstack]
  1090                           ;lcd_com@a stored from wreg
  1091  070A  00F6               	movwf	lcd_com@a
  1092  070B                     l779:
  1093                           
  1094                           ;LCD.c: 58:     unsigned char temp;;LCD.c: 59:     if (status) {
  1095  070B  1C7C               	btfss	_status/(0+8),_status& (0+7)
  1096  070C  2F0E               	goto	u61
  1097  070D  2F0F               	goto	u60
  1098  070E                     u61:
  1099  070E  2F11               	goto	l51
  1100  070F                     u60:
  1101  070F                     l781:
  1102                           
  1103                           ;LCD.c: 60:         status = 0;
  1104  070F  107C               	bcf	_status/(0+8),_status& (0+7)
  1105                           
  1106                           ;LCD.c: 61:         goto next;
  1107  0710  2F14               	goto	l52
  1108  0711                     l51:	
  1109                           ;LCD.c: 62:     }
  1110                           
  1111                           
  1112                           ;LCD.c: 63:     RD0 = 0;
  1113  0711  1283               	bcf	3,5	;RP0=0, select bank0
  1114  0712  1303               	bcf	3,6	;RP1=0, select bank0
  1115  0713  1008               	bcf	8,0	;volatile
  1116  0714                     l52:	
  1117                           ;LCD.c: 64: next:
  1118                           
  1119                           
  1120                           ;LCD.c: 65:     RD1 = 0;
  1121  0714  1283               	bcf	3,5	;RP0=0, select bank0
  1122  0715  1303               	bcf	3,6	;RP1=0, select bank0
  1123  0716  1088               	bcf	8,1	;volatile
  1124  0717                     l783:
  1125                           
  1126                           ;LCD.c: 66:     temp = a;
  1127  0717  0876               	movf	lcd_com@a,w
  1128  0718  00F4               	movwf	??_lcd_com
  1129  0719  0874               	movf	??_lcd_com,w
  1130  071A  00F7               	movwf	lcd_com@temp
  1131  071B                     l785:
  1132                           
  1133                           ;LCD.c: 67:     temp &= 0xf0;
  1134  071B  30F0               	movlw	240
  1135  071C  00F4               	movwf	??_lcd_com
  1136  071D  0874               	movf	??_lcd_com,w
  1137  071E  05F7               	andwf	lcd_com@temp,f
  1138  071F                     l787:
  1139                           
  1140                           ;LCD.c: 68:     PORTD &= 0x0f;
  1141  071F  300F               	movlw	15
  1142  0720  00F4               	movwf	??_lcd_com
  1143  0721  0874               	movf	??_lcd_com,w
  1144  0722  0588               	andwf	8,f	;volatile
  1145  0723                     l789:
  1146                           
  1147                           ;LCD.c: 69:     PORTD |= temp;
  1148  0723  0877               	movf	lcd_com@temp,w	;volatile
  1149  0724  00F4               	movwf	??_lcd_com
  1150  0725  0874               	movf	??_lcd_com,w
  1151  0726  0488               	iorwf	8,f	;volatile
  1152  0727                     l791:
  1153                           
  1154                           ;LCD.c: 70:     RD2 = 1;
  1155  0727  1508               	bsf	8,2	;volatile
  1156  0728                     l793:
  1157                           
  1158                           ;LCD.c: 71:     delay(300);
  1159  0728  302C               	movlw	44
  1160  0729  00F0               	movwf	delay@j
  1161  072A  3001               	movlw	1
  1162  072B  00F1               	movwf	delay@j+1
  1163  072C  120A  118A  2659  120A  118A  	fcall	_delay
  1164  0731                     l795:
  1165                           
  1166                           ;LCD.c: 72:     RD2 = 0;
  1167  0731  1283               	bcf	3,5	;RP0=0, select bank0
  1168  0732  1303               	bcf	3,6	;RP1=0, select bank0
  1169  0733  1108               	bcf	8,2	;volatile
  1170  0734                     l797:
  1171                           
  1172                           ;LCD.c: 73:     temp = a << 4;
  1173  0734  0876               	movf	lcd_com@a,w
  1174  0735  00F4               	movwf	??_lcd_com
  1175  0736  3003               	movlw	3
  1176  0737                     u75:
  1177  0737  1003               	clrc
  1178  0738  0DF4               	rlf	??_lcd_com,f
  1179  0739  3EFF               	addlw	-1
  1180  073A  1D03               	skipz
  1181  073B  2F37               	goto	u75
  1182  073C  1003               	clrc
  1183  073D  0D74               	rlf	??_lcd_com,w
  1184  073E  00F5               	movwf	??_lcd_com+1
  1185  073F  0875               	movf	??_lcd_com+1,w
  1186  0740  00F7               	movwf	lcd_com@temp
  1187  0741                     l799:
  1188                           
  1189                           ;LCD.c: 74:     temp &= 0xf0;
  1190  0741  30F0               	movlw	240
  1191  0742  00F4               	movwf	??_lcd_com
  1192  0743  0874               	movf	??_lcd_com,w
  1193  0744  05F7               	andwf	lcd_com@temp,f
  1194  0745                     l801:
  1195                           
  1196                           ;LCD.c: 75:     PORTD &= 0x0f;
  1197  0745  300F               	movlw	15
  1198  0746  00F4               	movwf	??_lcd_com
  1199  0747  0874               	movf	??_lcd_com,w
  1200  0748  0588               	andwf	8,f	;volatile
  1201  0749                     l803:
  1202                           
  1203                           ;LCD.c: 76:     PORTD |= temp;
  1204  0749  0877               	movf	lcd_com@temp,w	;volatile
  1205  074A  00F4               	movwf	??_lcd_com
  1206  074B  0874               	movf	??_lcd_com,w
  1207  074C  0488               	iorwf	8,f	;volatile
  1208  074D                     l805:
  1209                           
  1210                           ;LCD.c: 77:     RD2 = 1;
  1211  074D  1508               	bsf	8,2	;volatile
  1212  074E                     l807:
  1213                           
  1214                           ;LCD.c: 78:     delay(300);
  1215  074E  302C               	movlw	44
  1216  074F  00F0               	movwf	delay@j
  1217  0750  3001               	movlw	1
  1218  0751  00F1               	movwf	delay@j+1
  1219  0752  120A  118A  2659  120A  118A  	fcall	_delay
  1220  0757                     l809:
  1221                           
  1222                           ;LCD.c: 79:     RD2 = 0;
  1223  0757  1283               	bcf	3,5	;RP0=0, select bank0
  1224  0758  1303               	bcf	3,6	;RP1=0, select bank0
  1225  0759  1108               	bcf	8,2	;volatile
  1226  075A                     l53:
  1227  075A  0008               	return
  1228  075B                     __end_of_lcd_com:
  1229                           
  1230                           	psect	text7
  1231  0659                     __ptext7:	
  1232 ;; *************** function _delay *****************
  1233 ;; Defined at:
  1234 ;;		line 52 in file "LCD.c"
  1235 ;; Parameters:    Size  Location     Type
  1236 ;;  j               2    0[COMMON] unsigned int 
  1237 ;; Auto vars:     Size  Location     Type
  1238 ;;  i               2    2[COMMON] unsigned int 
  1239 ;; Return value:  Size  Location     Type
  1240 ;;                  1    wreg      void 
  1241 ;; Registers used:
  1242 ;;		wreg, status,2
  1243 ;; Tracked objects:
  1244 ;;		On entry : 0/0
  1245 ;;		On exit  : 0/0
  1246 ;;		Unchanged: 0/0
  1247 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1248 ;;      Params:         2       0       0       0       0
  1249 ;;      Locals:         2       0       0       0       0
  1250 ;;      Temps:          0       0       0       0       0
  1251 ;;      Totals:         4       0       0       0       0
  1252 ;;Total ram usage:        4 bytes
  1253 ;; Hardware stack levels used:    1
  1254 ;; This function calls:
  1255 ;;		Nothing
  1256 ;; This function is called by:
  1257 ;;		_lcd_init
  1258 ;;		_lcd_init_write
  1259 ;;		_lcd_com
  1260 ;; This function uses a non-reentrant model
  1261 ;;
  1262                           
  1263                           
  1264                           ;psect for function _delay
  1265  0659                     _delay:
  1266  0659                     l775:	
  1267                           ;incstack = 0
  1268                           ; Regs used in _delay: [wreg+status,2]
  1269                           
  1270                           
  1271                           ;LCD.c: 53:     unsigned int i = 0;
  1272  0659  01F2               	clrf	delay@i
  1273  065A  01F3               	clrf	delay@i+1
  1274                           
  1275                           ;LCD.c: 54:     for (i = 0; i < j; i++);
  1276  065B  01F2               	clrf	delay@i
  1277  065C  01F3               	clrf	delay@i+1
  1278  065D  2E64               	goto	l45
  1279  065E                     l777:
  1280  065E  3001               	movlw	1
  1281  065F  07F2               	addwf	delay@i,f
  1282  0660  1803               	skipnc
  1283  0661  0AF3               	incf	delay@i+1,f
  1284  0662  3000               	movlw	0
  1285  0663  07F3               	addwf	delay@i+1,f
  1286  0664                     l45:
  1287  0664  0871               	movf	delay@j+1,w
  1288  0665  0273               	subwf	delay@i+1,w
  1289  0666  1D03               	skipz
  1290  0667  2E6A               	goto	u55
  1291  0668  0870               	movf	delay@j,w
  1292  0669  0272               	subwf	delay@i,w
  1293  066A                     u55:
  1294  066A  1C03               	skipc
  1295  066B  2E6D               	goto	u51
  1296  066C  2E6E               	goto	u50
  1297  066D                     u51:
  1298  066D  2E5E               	goto	l777
  1299  066E                     u50:
  1300  066E                     l48:
  1301  066E  0008               	return
  1302  066F                     __end_of_delay:
  1303  007E                     btemp	set	126	;btemp
  1304  007E                     wtemp0	set	126
  1305                           
  1306                           	psect	config
  1307                           
  1308                           ;Config register CONFIG1 @ 0x2007
  1309                           ;	Oscillator Selection bits
  1310                           ;	FOSC = EXTRC_CLKOUT, RC oscillator: CLKOUT function on RA6/OSC2/CLKOUT pin, RC on RA7/
      +                          OSC1/CLKIN
  1311                           ;	Watchdog Timer Enable bit
  1312                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1313                           ;	Power-up Timer Enable bit
  1314                           ;	PWRTE = OFF, PWRT disabled
  1315                           ;	RE3/MCLR pin function select bit
  1316                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1317                           ;	Code Protection bit
  1318                           ;	CP = OFF, Program memory code protection is disabled
  1319                           ;	Data Code Protection bit
  1320                           ;	CPD = OFF, Data memory code protection is disabled
  1321                           ;	Brown Out Reset Selection bits
  1322                           ;	BOREN = OFF, BOR disabled
  1323                           ;	Internal External Switchover bit
  1324                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1325                           ;	Fail-Safe Clock Monitor Enabled bit
  1326                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1327                           ;	Low Voltage Programming Enable bit
  1328                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1329                           ;	In-Circuit Debugger Mode bit
  1330                           ;	DEBUG = 0x1, unprogrammed default
  1331  2007                     	org	8199
  1332  2007  20D7               	dw	8407
  1333                           
  1334                           ;Config register CONFIG2 @ 0x2008
  1335                           ;	Brown-out Reset Selection bit
  1336                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1337                           ;	Flash Program Memory Self Write Enable bits
  1338                           ;	WRT = OFF, Write protection off
  1339  2008                     	org	8200
  1340  2008  3FFF               	dw	16383

Data Sizes:
    Strings     10
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      13
    BANK0            80      3       3
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    lcd_puts@str	PTR unsigned char  size(1) Largest target is 10
		 -> STR_1(CODE[10]), 


Critical Paths under _main in COMMON

    _main->_lcd_set_cursor
    _lcd_set_cursor->_lcd_com
    _lcd_puts->_lcd_data
    _lcd_data->_lcd_com
    _lcd_init->_lcd_com
    _lcd_init_write->_delay
    _lcd_com->_delay

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    7342
                                              0 BANK0      3     3      0
                            _lcd_com
                           _lcd_init
                           _lcd_puts
                     _lcd_set_cursor
 ---------------------------------------------------------------------------------
 (1) _lcd_set_cursor                                       4     3      1    1389
                                              8 COMMON     4     3      1
                            _lcd_com
 ---------------------------------------------------------------------------------
 (1) _lcd_puts                                             2     2      0    1303
                                              9 COMMON     2     2      0
                           _lcd_data
 ---------------------------------------------------------------------------------
 (2) _lcd_data                                             1     1      0    1225
                                              8 COMMON     1     1      0
                            _lcd_com
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0    3447
                              _delay
                            _lcd_com
                     _lcd_init_write
 ---------------------------------------------------------------------------------
 (2) _lcd_init_write                                       1     1      0    1133
                                              4 COMMON     1     1      0
                              _delay
 ---------------------------------------------------------------------------------
 (2) _lcd_com                                              4     4      0    1203
                                              4 COMMON     4     4      0
                              _delay
 ---------------------------------------------------------------------------------
 (3) _delay                                                4     2      2    1111
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _lcd_com
     _delay
   _lcd_init
     _delay
     _lcd_com
       _delay
     _lcd_init_write
       _delay
   _lcd_puts
     _lcd_data
       _lcd_com
         _delay
   _lcd_set_cursor
     _lcd_com
       _delay

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       1       0        7.1%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      C       D       1       92.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      10       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      3       3       5        3.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      10      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sun May 30 01:20:35 2021

                      pc 0002              lcd_com@temp 0077                       l42 0658  
                     l51 0711                       l52 0714                       l45 0664  
                     l53 075A                       l62 068D                       l39 07FA  
                     l71 06C3                       l48 066E                       l56 0643  
                     u50 066E                       u51 066D                       u60 070F  
                     u61 070E                       u55 066A                       u80 068D  
                     u81 068C                       u75 0737                       u97 06EC  
                     fsr 0004                      l801 0745                      l803 0749  
                    l811 0645                      l805 074D                      l813 0649  
                    l821 0639                      l807 074E                      l815 064B  
                    l823 063D                      l831 0698                      l809 0757  
                    l817 064C                      l825 075B                      l833 06A0  
                    l819 0655                      l843 0670                      l835 06A8  
                    l827 068F                      l851 06C4                      l781 070F  
                    l845 0671                      l829 0690                      l837 06B0  
                    l861 06E4                      l853 06C7                      l775 0659  
                    l791 0727                      l783 0717                      l847 067D  
                    l863 06F2                      l855 06CC                      l777 065E  
                    l793 0728                      l785 071B                      l849 0681  
                    l865 06F8                      l857 06D8                      l795 0731  
                    l787 071F                      l779 070B                      l859 06DE  
                    l797 0734                      l789 0723                      l799 0741  
                    l887 06B8                      _RD0 0040                      _RD1 0041  
                    _RD2 0042                      u107 0700                      fsr0 0004  
        ?_lcd_set_cursor 0078                     STR_1 0009                     _main 06C4  
                   btemp 007E              lcd_puts@str 007A                     start 0000  
                  ?_main 0070                    _PORTD 0008                    _TRISD 0088  
        __end_of_lcd_com 075B                    _delay 0659           __pbitbssCOMMON 03E0  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 07FB             __end_of_main 070A                   ??_main 0020  
                 ?_delay 0070         __end_of_lcd_data 0644         __end_of_lcd_init 07FB  
       __end_of_lcd_puts 068E                   delay@i 0072                   delay@j 0070  
                 _status 03E0                ??_lcd_com 0074         ??_lcd_init_write 0074  
__end_of__initialization 07FC           __pcstackCOMMON 0070            __end_of_delay 066F  
       ??_lcd_set_cursor 0079                  ??_delay 0072               __pmaintext 06C4  
              ?_lcd_data 0070                ?_lcd_init 0070                ?_lcd_puts 0070  
             __stringtab 0003                  __ptext1 068E                  __ptext2 066F  
                __ptext3 0638                  __ptext4 075B                  __ptext5 0644  
                __ptext6 070A                  __ptext7 0659                  _lcd_com 070A  
             ??_lcd_data 0078               ??_lcd_init 0078               ??_lcd_puts 0079  
   end_of_initialization 07FC          lcd_init_write@a 0074      start_initialization 07FB  
              ___latbits 0002            __pcstackBANK0 0020        __size_of_lcd_data 000C  
      __size_of_lcd_init 00A0        __size_of_lcd_puts 001F  __size_of_lcd_init_write 0015  
              __pstrings 0003                 ?_lcd_com 0070           __size_of_delay 0016  
__size_of_lcd_set_cursor 0036                lcd_data@a 0078              __stringbase 0008  
     __end_of__stringtab 0009         __size_of_lcd_com 0051                 _lcd_data 0638  
               _lcd_init 075B                 _lcd_puts 066F            __size_of_main 0046  
         _lcd_init_write 0644                 lcd_com@a 0076           _lcd_set_cursor 068E  
      lcd_set_cursor@col 0078        lcd_set_cursor@row 007B   __end_of_lcd_init_write 0659  
              stringcode 0003                 stringdir 0003                 stringtab 0003  
 __end_of_lcd_set_cursor 06C4          ?_lcd_init_write 0070  
